%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: da2.pdf
%%Creator: Adobe Acrobat 15.7.0
%%For: Junhao Zhou
%%CreationDate: 2018/8/1, 11:20:52
%%BoundingBox: 0 0 425 76
%%HiResBoundingBox: 0 0 424.6382 75.2081
%%CropBox: 0 0 424.6382 75.2081
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 952 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   pdf:Producer="Microsoft® Word 2016"
   dc:format="application/pdf"
   xmp:CreatorTool="Microsoft® Word 2016"
   xmp:CreateDate="2018-07-03T15:14:53+08:00"
   xmp:ModifyDate="2018-07-03T15:15:22+08:00"
   xmp:MetadataDate="2018-07-03T15:15:22+08:00"
   xmpMM:DocumentID="uuid:705CE307-9AE3-40F0-97B8-7E0BC9C7FF7C"
   xmpMM:InstanceID="uuid:00def0d8-c177-40d2-8245-e3d085b8d71f">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>junhao_zhou@qq.com</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -75.208 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-5 0 mo
1.52588e-5 75.208 li
424.638 75.208 li
424.638 0 li
cp
clp
gsave
-.464783 75.452 mo
425.535 75.452 li
425.535 -.547974 li
-.464783 -.547974 li
cp
clp
gsave
45.6352 -136.368 mo
113.219 -136.368 li
113.219 -151.992 li
45.6352 -151.992 li
cp
eclp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: KFDAAA+TimesNewRomanPS-BoldMT Initial
ct_T42Dict begin
-0.555 -0.324 2 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /KFDAAA+TimesNewRomanPS-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f321a7a806e000000cc000000606376
742074e2f99d0000012c0000082c6670676d379e7810000009580000063f
676c796645597f460000ba440000342e68656164ec24587900000f980000
0036686865611304162000000fd000000024686d7478c52908d500000ff4
000040386c6f6361d433e44a0000502c0000249c6d6178701b6314420000
74c8000000206e616d65f5ca8d60000074e8000031f470726570025f6028
0000a6dc00001368676469720000000000000000000000000003036a02bc
00050008059a053300000125059a0533000003a000660212010502020803
070505020304e0002effc000785b0000000900000000544d432000200020
25cc056bfe460133072101bb400001ffffff000003a7054c000000200015
058e001f054c001f054c001c0394001b0000ffe10000ffe40000ffe8fe4a
fffc056b0023fe6affe00313000001240000012400000000000000000025
0084002400e8009600bf005d00cb02030045012e00580004011800190002
0139004b011000170005010a00280023004b00500015004a00e5010d00af
003100ea014600810125004f009c0022004e00160041009100a00147ffe9
008100d3016900ab001700a801400027004c0148ffdf00510050ffb7012e
0000003b0097009a010e001f004c010a0123ffde00220073008700ba00d6
00ff005a009805a0ffe900500052006effb7005c00d1015a015bff1c0049
006e007e009800a100bd00e4018801c00405ff6000350062007201070113
01280382ffa8003805d809b5ffc4ffd00010006e00a100ba00ec022b0446
ffee004000e80401ff680003001300330033006e00a200b600dc01180135
0343000e0034005c005d007c00af0328003b00480089009c00ba017b01af
030effa4001700370063007f00e0017801c0022105d805f0ff7a00120027
00340052008a00a400c100c300eb011801460154036dfe3fff4e00010008
002b0045006e0084008600ae00af00c200c200c4010f01210149017b01c1
01de01e1036e03e6006300a700ed00f600f801280169017e023f02820532
fd81ffb5002600350040004500490057006c00ac01260140015b017b019c
0277027e027f03b603dc042804efff38ffc30006002f0040008200aa00b6
00ce00d300d700e50146014d01d6027e03b30586ff7b0012002f0068007f
008400a500b900f501050109010c01140120013301370178017b01c001e1
021d02230258036203af058cff79ff8d00210024005d00650068006a0083
008500b700cf00e200eb00ed011a0120012f0137013f0150018d018f01c4
02cf0357035c03960440049604ab04c204fc051105c2fed1fee000130021
00240030004d004d005d0066007a007c00b800b800c300da0103011b011e
012f013d014a0150015f0166017c0190019501a301a601b601c701d001e9
01ef01f90218028c029402bb02c502cf02d0031d032a0344039f03cc0421
04da04fb0761fd1dfebffeefff0bff2bff33ff90ff9cffdbffed00010008
001c0025003f0043005a006b0080008400900095009d00a700b400cd00d5
00d600df00df00df00e400f000f600fb010601130119011b012201230127
012c013f015701580177018a019301a401c601e101e401fc0200020c0222
0222022a0236024a025c028202ec02fc030a032303410378039703d203fa
04790532053205ab05b505f006e4072508ccfc9bfddefe00fe69fe96fe9b
ff3500030006000e00130019003400420048004a00570064007100710072
00760077007a007a0083009c00af00af00b200bb00c800cc00cf00cf00db
00dc00df00e400e400e400e900eb00f400fd00fe01020105010501080108
011b01220123013001370143015b016001650178017801780178017b0182
018901980198019b019e01a101a601d101d201d301df01e301f502000200
022d02410247024a0250025b025d025d025f02630281028b02b402b402ce
02d602db02e202fa03100311031f0327034503670388038a03b003b403d4
03d5042604410448046b04c704d1053205480549055f0563058b05a105a3
05c205ca05e405ff069306a206b806e8070a073607500754078907a907bb
07dc07ff08270120014d011b0129000000000000000000000093015b042f
029001ff02b800db00be027403cb029401ab000000000000000000000000
058a038a0364005f02b803bd029d7c9003e203ac02820000044400000000
003d010a00cc00bc00cc05d3041505e800c7021a00ee00000194036102be
029902180136033b048504cc0050007905a305a302df020702af000001eb
0064005f0055011900f2045600ef00c800cf058a0143014602de01ab02c6
024a005d00d800a402bb009900a0006501370274036400b500fa009101b9
032001b60025007f00d000ec00e000000000000000000000042ffd42023f
06180276063a013701b90151ffc70229ffeb023f02e1018500db03fa0190
0156014e012f00a600e300bb00d50134011f04fe041b00d100e4011e009b
00cd00e700b300e200ca042400b800f500b90334005a04e00123012ffdc9
fe440574038301f602410002001700500015004f001700a8005100980052
0049006e000e00af017b017b019c006a008300eb00cd0122000005d306da
009a008f00ba0315002503a5028002ff03c80420009200e0034c009b007d
00f8011c013400a8006d006900000420ffe6fea4006a006a003800380162
015a0044006d0048001eff6d00a600a600400040ff5cff990559052b00ce
014c011500bf0140011800c800960509feed004800b4009500db0048018b
00b3fe6400c000ea01180125013203b003ed0576059005aa05b405be05cd
063100780084009b00cc00e200f4010a0120016300d100ea00f701080142
0019002c00340041003800480058006c025903bd0043011a007000d30028
003700420050005a0064007300780082008c009c00a500bd00ce00f00110
015c00be00d801020117012c016300ea01080041004b0055005f007300a6
0109018301b300410064001e002a00eb00fa010e01380274002c00400082
009600b600c000cc00dc00e600f000ff010a0120012c013b014401560163
00f70057006401100136005001b10000ffb60039004e004403cc00e50024
01100042012201a400f0006000e0000e001d003905e30102002cfe4eff38
026903bd011600ff000e00a00054001b003d01710041000f005000fd0015
014f0035fe47003900ab0080005005a50016002b00ac0115021504570555
007300da005c00ce0072ff58019a074403d703f0047040425554403f3e3d
3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221201f1e
1d1c1b1a191817161514131211100f0e0d0c0b0a09080706050403020100
2c4523466020b02660b004262348482d2c452346236120b02661b0042623
48482d2c45234660b0206120b04660b004262348482d2c4523462361b020
6020b02661b02061b004262348482d2c45234660b0406120b06660b00426
2348482d2c4523462361b0406020b02661b04061b004262348482d2c0110
203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed
51582320b04d44235920b09051582320b00d44235921212d2c2020451868
4420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00b1
0a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab10200
080d2d2c45b01a234445b01923442d2c2045b00325456164b05051584544
1b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c
01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb810006260
2b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45
b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a45
186920b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b017
7ae45959182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002
855958b00185592d2c20b0032545b019234445b01a23444565234520b003
25606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ffe0
001a45208a54582321b03f1b235961441cb114008a5279b3194020194520
8a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b
2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d
2cb11011432343650b2d2c4b525845441b2121592d2c0120b003252349b0
4060b0206320b000525823b002253823b002256538008a63381b21212121
2159012d2c4bb06451584569b00943608a103a1b212121592d2c01b00525
1023208af500b0016023edec2d2c01b005251023208af500b0016123edec
2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b0016101
10203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d
2c352d2c76b8029f23701020b8029f4520b0005058b00161593a2f182d2c
21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb200
402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59
b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826b0
0826b00826b008260f10161345683ab001162d2cb4000100000015b00826
b00826b00826b008260f1016134568653ab001162d2c4b53234b515a5820
458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b515a
58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb013
4358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580cb0
0425b00425060c6423646164b807085158b00425b00425012046b0106048
2046b0106048590a21211b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b8fff060482046b8fff060
48590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b5323
4b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b212159
2d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c
462346608a8a462320468a608a61b8ff8062232010238ab9032703278a70
456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb10200
42b123018851b1400188535a58b910000020885458b202010243604259b1
2401885158b920000040885458b2020202436042b12401885458b2022002
436042004b014b5258b2020802436042591bb940000080885458b2020402
43604259b94000008063b80100885458b202080243604259b94000010063
b80200885458b202100243604259b12601885158b94000020063b8040088
5458b202400243604259b94000040063b80800885458b202800243604259
b12801885158b94000080063b81000885458ba0002010000024360425959
59595959592d2cb0024354584b53234b515a58381b2121591b2121212159
2d000001000000070000a5d5253f5f0f3cf50819080000000000a2e33546
00000000d684d862fb89fd61100008720001000900010000000000000001
00000721fe4500571000fb89fa0b10000001000000000000000000000000
00000dcf0639011c00000000020000000200000002aa00af047100b00000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000005c700510000000000000000000000000639005300000000
00000000000000000000000000000000078d002900000000063900500000
00000000000005c700260000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000400005c00000000000000000473004f0000000000000000
0400004d000000000239002a00000000000000000239002b06aa004c0473
00460400004a0000000000000000038d004b031d005102aa00260473003f
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000239002a00000000000000000000
00000000000002aa00c30000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000196ffba0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000004e6ffba00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000100ffba0800ffba1000ffba000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000004c100660000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000019a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000239002a00000000000000000000000000000000
000000000439000a000000000444004e04a40019000000000000000004a4
004e0000000002540017000000000000000003c3000e05790010047bfff0
04f200480000000000000000048900140393004803d1001d048300120000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000025400170000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000003600360036003600a300fe00fe00fe00fe00fe00fe00fe
00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe
00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe00fe01c701c701c701c7
02cd02cd02cd02cd02cd02cd03c703c704d704d704d705db05db05db05db
05db05db05db05db05db05db05db05db05db05db05db0760076007600863
0863086309b809b80a540a540a540ad30c5f0da30e840e840e840f5610f6
116c126b126b126b126b126b126b126b126b126b126b126b126b126b126b
126b126b126b126b126b126b126b126b126b126b126b126b126b126b126b
126b126b126b126b126b126b126b126b126b126b126b126b126b126b126b
126b126b126b126b126b126b126b126b126b126b126b126b126b126b126b
126b126b126b126b126b126b126b126b126b126b126b126b126b126b126b
126b126b126b126b126b126b126b126b126b126b126b126b126b126b126b
126b126b126b126b126b126b126b126b126b126b126b126b126b126b126b
126b126b126b126b126b126b126b126b126b126b126b126b126b126b126b
126b126b126b126b126b126b12d612d612d612d612d612fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd12fd
12fd12fd12fd12fd12fd1317131713171317131713171317131713171317
131713171317131713171317131713171317131713171317131713171317
131713171317131713171317131713171317131713171317131713171317
131713171317133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
133113311331133113311331133113311331133113311331133113311331
13311331133113311331134b1365137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f137f137f137f137f137f137f137f
137f137f137f137f137f137f137f137f148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a148a148a148a148a148a148a148a148a148a148a148a
148a148a148a148a14921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149214921492
149214921492149214921492149214921492149214921492149a149a149a
149a149a149a15231523158315d815d815d8164e164e16931693169316e2
175917c518201820182018a1194419a41a001a001a001a001a001a001a00
1a001a001a001a001a001a001a001a001a001a001a001a001a001a001a00
1a001a001a001a001a001a001a001a001a001a001a001a001a001a001a00
1a001a001a001a001a001a001a001a001a001a001a001a001a001a001a00
1a001a001a001a001a001a001a001a001a001a001a001a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a171a171a171a171a171a171a171a17
1a171a171a171a171a171a171a171a1700010000124d0080001000280002
00020010002f00560000089b13680002000100>
<0000005303ea0000000300000000021a00000000000300000001001e021a
0000000300000002000802c2000000030000000300520290000000030000
0004002802a20000000300000005001802e20000000300000006002c02fa
00000003000000070076021a000000030000000800300334000000030000
000900860544000000030000000d0e0405ca0001000000000000010d13ce
0001000000000001000f14db00010000000000020004152f000100000000
00030029151600010000000000040014151f0001000000000005000c153f
00010000000000060016154b0001000000000007003b14db000100000000
0008001813d5000100000000000900431561000100000000000d070215a4
0003000104030002000e1cc60003000104030004002e1ca6000300010405
0002000a1cf40003000104050004002a1cd4000300010406000200061d1e
000300010406000400261cfe000300010407000200081d44000300010407
000400281d240003000104080002000c1d6c0003000104080004002c1d4c
0003000104090000021e03260003000104090001001e021a000300010409
0002000802c20003000104090003005202900003000104090004002802a2
0003000104090005001802e20003000104090006002c02fa000300010409
00070076021a000300010409000800300334000300010409000900860544
000300010409000d0e141d7800030001040a0002000e2bac00030001040a
0004002e2b8c00030001040b000200122bda00030001040b000400322bba
00030001040c000200082c0c00030001040c000400282bec00030001040e
000200102c3e00030001040e000400302c1e000300010410000200122c0c
000300010410000400322bec000300010413000200062c6e000300010413
000400262c4e0003000104140002000e2c940003000104140004002e2c74
000300010415000200142cc2000300010415000400342ca2000300010416
0002000e2cf60003000104160004002e2cd6000300010419000200142d24
000300010419000400342d0400030001041b0002000a2d5800030001041b
0004002a2d3800030001041d000200061d4400030001041d000400261d24
00030001041f0002000a2d8200030001041f0004002a2d62000300010424
0002000c2dac0003000104240004002c2d8c00030001042a000200082dd8
00030001042a000400282db800030001042d0002000a2e0000030001042d
0004002a2de000030001080a0002000e2bac00030001080a0004002e2b8c
0003000108160002000e2cf60003000108160004002e2cd6000300010c0a
0002000e2bac000300010c0a0004002e2b8c000300010c0c000200082c0c
000300010c0c000400282bec00a900200032003000310037002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0020
000d000d0048006500620072006500770020004f00700065006e00540079
007000650020004c00610079006f007500740020006c006f006700690063
00200063006f0070007900720069006700680074002000a9002000320030
003000330020002600200032003000300037002c002000520061006c0070
0068002000480061006e0063006f0063006b002000260020004a006f0068
006e00200048007500640073006f006e002e002000540068006900730020
006c00610079006f007500740020006c006f00670069006300200066006f
00720020004200690062006c006900630061006c00200048006500620072
006500770020006900730020006f00700065006e00200073006f00750072
0063006500200073006f00660074007700610072006500200075006e0064
0065007200200074006800650020004d004900540020004c006900630065
006e00730065003b002000730065006500200065006d0062006500640064
006500640020006c006900630065006e0073006500200064006500730063
00720069007000740069006f006e00200066006f00720020006400650074
00610069006c0073002e00540069006d006500730020004e006500770020
0052006f006d0061006e0020006900730020006100200074007200610064
0065006d00610072006b0020006f006600200054006800650020004d006f
006e006f007400790070006500200043006f00720070006f007200610074
0069006f006e002e004d006f006e006f0074007900700065003a00540069
006d006500730020004e0065007700200052006f006d0061006e00200042
006f006c006400200028004d006900630072006f0073006f006600740029
00560065007200730069006f006e00200037002e0030003000540069006d
00650073004e006500770052006f006d0061006e00500053002d0042006f
006c0064004d005400a90020003200300031003700200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e002e00200041006c006c00200052006900670068
00740073002000520065007300650072007600650064002e0020000d000a
000d000a0048006500620072006500770020004f00700065006e00540079
007000650020004c00610079006f007500740020006c006f006700690063
00200063006f0070007900720069006700680074002000a9002000320030
003000330020002600200032003000300037002c002000520061006c0070
0068002000480061006e0063006f0063006b002000260020004a006f0068
006e00200048007500640073006f006e002e002000540068006900730020
006c00610079006f007500740020006c006f00670069006300200066006f
00720020004200690062006c006900630061006c00200048006500620072
006500770020006900730020006f00700065006e00200073006f00750072
0063006500200073006f00660074007700610072006500200075006e0064
0065007200200074006800650020004d004900540020004c006900630065
006e00730065003b002000730065006500200065006d0062006500640064
006500640020006c006900630065006e0073006500200064006500730063
00720069007000740069006f006e00200066006f00720020006400650074
00610069006c0073002e004d006f006e006f007400790070006500200054
007900700065002000440072006100770069006e00670020004f00660066
0069006300650020002d0020005300740061006e006c006500790020004d
006f007200690073006f006e002c00200056006900630074006f00720020
004c0061007200640065006e007400200031003900330032004d00690063
0072006f0073006f0066007400200073007500700070006c006900650064
00200066006f006e0074002e00200059006f00750020006d006100790020
0075007300650020007400680069007300200066006f006e007400200074
006f0020006300720065006100740065002c00200064006900730070006c
00610079002c00200061006e00640020007000720069006e007400200063
006f006e00740065006e00740020006100730020007000650072006d0069
007400740065006400200062007900200074006800650020006c00690063
0065006e007300650020007400650072006d00730020006f007200200074
00650072006d00730020006f00660020007500730065002c0020006f0066
00200074006800650020004d006900630072006f0073006f006600740020
00700072006f0064007500630074002c0020007300650072007600690063
0065002c0020006f007200200063006f006e00740065006e007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e0074002000770061007300200069006e0063006c0075006400650064
002e00200059006f00750020006d006100790020006f006e006c00790020
00280069002900200065006d006200650064002000740068006900730020
0066006f006e007400200069006e00200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
0079002000740068006500200065006d00620065006400640069006e0067
0020007200650073007400720069006300740069006f006e007300200069
006e0063006c007500640065006400200069006e00200074006800690073
00200066006f006e0074003b00200061006e006400200028006900690029
002000740065006d0070006f0072006100720069006c007900200064006f
0077006e006c006f006100640020007400680069007300200066006f006e
007400200074006f002000610020007000720069006e0074006500720020
006f00720020006f00740068006500720020006f00750074007000750074
002000640065007600690063006500200074006f002000680065006c0070
0020007000720069006e007400200063006f006e00740065006e0074002e
00200041006e00790020006f007400680065007200200075007300650020
00690073002000700072006f0068006900620069007400650064002e000d
000d00540068006500200066006f006c006c006f00770069006e00670020
006c006900630065006e00730065002c0020006200610073006500640020
006f006e00200074006800650020004d004900540020006c006900630065
006e00730065002000280068007400740070003a002f002f0065006e002e
00770069006b006900700065006400690061002e006f00720067002f0077
0069006b0069002f004d00490054005f004c006900630065006e00730065
0029002c0020006100700070006c00690065007300200074006f00200074
006800650020004f00700065006e00540079007000650020004c00610079
006f007500740020006c006f00670069006300200066006f007200200042
00690062006c006900630061006c00200048006500620072006500770020
201c004c00610079006f007500740020004c006f006700690063201d0020
006100730020006a006f0069006e0074006c007900200064006500760065
006c006f007000650064002000620079002000520061006c007000680020
00480061006e0063006f0063006b00200061006e00640020004a006f0068
006e00200048007500640073006f006e002e0020000d000d005000650072
006d0069007300730069006f006e00200069007300200068006500720065
006200790020006700720061006e007400650064002c0020006600720065
00650020006f00660020006300680061007200670065002c00200074006f
00200061006e007900200070006500720073006f006e0020006f00620074
00610069006e0069006e00670020006100200063006f007000790020006f
006600200074006800650020004f00700065006e00540079007000650020
004c00610079006f007500740020006c006f00670069006300200066006f
00720020004200690062006c006900630061006c00200048006500620072
0065007700200061006e00640020006100730073006f0063006900610074
0065006400200064006f00630075006d0065006e0074006100740069006f
006e002000660069006c00650073002000280074006800650020201c004c
00610079006f007500740020004c006f00670069006300200053006f0066
00740077006100720065201d0029002c00200074006f0020006400650061
006c00200069006e00200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
00200077006900740068006f007500740020007200650073007400720069
006300740069006f006e002c00200069006e0063006c007500640069006e
006700200077006900740068006f007500740020006c0069006d00690074
006100740069006f006e0020007400680065002000720069006700680074
007300200074006f0020007500730065002c00200063006f00700079002c
0020006d006f0064006900660079002c0020006d0065007200670065002c
0020007000750062006c006900730068002c002000640069007300740072
00690062007500740065002c0020007300750062006c006900630065006e
00730065002c00200061006e0064002f006f0072002000730065006c006c
00200063006f00700069006500730020006f006600200074006800650020
004c00610079006f007500740020004c006f00670069006300200053006f
006600740077006100720065002c00200061006e006400200074006f0020
007000650072006d0069007400200070006500720073006f006e00730020
0074006f002000770068006f006d00200074006800650020004c00610079
006f007500740020004c006f00670069006300200053006f006600740077
0061007200650020006900730020006600750072006e0069007300680065
006400200074006f00200064006f00200073006f002c0020007300750062
006a00650063007400200074006f002000740068006500200066006f006c
006c006f00770069006e006700200063006f006e0064006900740069006f
006e0073003a000d000d005400680065002000610062006f007600650020
0063006f00700079007200690067006800740020006e006f007400690063
006500200061006e0064002000740068006900730020007000650072006d
0069007300730069006f006e0020006e006f007400690063006500200073
00680061006c006c00200062006500200069006e0063006c007500640065
006400200069006e00200061006c006c00200063006f0070006900650073
0020006f00720020007300750062007300740061006e007400690061006c
00200070006f007200740069006f006e00730020006f0066002000740068
00650020004c00610079006f007500740020004c006f0067006900630020
0053006f006600740077006100720065002e000d000d0054004800450020
0053004f004600540057004100520045002000490053002000500052004f
0056004900440045004400200027004100530020004900530027002c0020
0057004900540048004f00550054002000570041005200520041004e0054
00590020004f004600200041004e00590020004b0049004e0044002c0020
00450058005000520045005300530020004f005200200049004d0050004c
004900450044002c00200049004e0043004c005500440049004e00470020
0042005500540020004e004f00540020004c0049004d0049005400450044
00200054004f0020005400480045002000570041005200520041004e0054
0049004500530020004f00460020004d00450052004300480041004e0054
004100420049004c004900540059002c0020004600490054004e00450053
005300200046004f00520020004100200050004100520054004900430055
004c0041005200200050005500520050004f0053004500200041004e0044
0020004e004f004e0049004e004600520049004e00470045004d0045004e
0054002e00200049004e0020004e004f0020004500560045004e00540020
005300480041004c004c002000540048004500200041005500540048004f
005200530020004f005200200043004f0050005900520049004700480054
00200048004f004c00440045005200530020004200450020004c00490041
0042004c004500200046004f005200200041004e005900200043004c0041
0049004d002c002000440041004d00410047004500530020004f00520020
004f00540048004500520020004c0049004100420049004c004900540059
002c0020005700480045005400480045005200200049004e00200041004e
00200041004300540049004f004e0020004f004600200043004f004e0054
0052004100430054002c00200054004f005200540020004f00520020004f
00540048004500520057004900530045002c002000410052004900530049
004e0047002000460052004f004d002c0020004f005500540020004f0046
0020004f005200200049004e00200043004f004e004e0045004300540049
004f004e00200057004900540048002000540048004500200053004f0046
005400570041005200450020004f00520020005400480045002000550053
00450020004f00520020004f00540048004500520020004400450041004c
0049004e0047005300200049004e002000540048004500200053004f0046
00540057004100520045002ea9203230313720546865204d6f6e6f747970
6520436f72706f726174696f6e2e20416c6c205269676874732052657365
727665642e200d0d486562726577204f70656e54797065204c61796f7574
206c6f67696320636f7079726967687420a9203230303320262032303037
2c2052616c70682048616e636f636b2026204a6f686e20487564736f6e2e
2054686973206c61796f7574206c6f67696320666f72204269626c696361
6c20486562726577206973206f70656e20736f7572636520736f66747761
726520756e64657220746865204d4954204c6963656e73653b2073656520
656d626564646564206c6963656e7365206465736372697074696f6e2066
6f722064657461696c732e54696d6573204e657720526f6d616e20697320
612074726164656d61726b206f6620546865204d6f6e6f7479706520436f
72706f726174696f6e2e4d6f6e6f747970653a54696d6573204e65772052
6f6d616e20426f6c6420284d6963726f736f66742956657273696f6e2037
2e303054696d65734e6577526f6d616e50532d426f6c644d544d6f6e6f74
79706520547970652044726177696e67204f6666696365202d205374616e
6c6579204d6f7269736f6e2c20566963746f72204c617264656e74203139
33324d6963726f736f667420737570706c69656420666f6e742e20596f75
206d617920757365207468697320666f6e7420746f206372656174652c20
646973706c61792c20616e64207072696e7420636f6e74656e7420617320
7065726d697474656420627920746865206c6963656e7365207465726d73
206f72207465726d73206f66207573652c206f6620746865204d6963726f
736f66742070726f647563742c20736572766963652c206f7220636f6e74
656e7420696e207768696368207468697320666f6e742077617320696e63
6c756465642e20596f75206d6179206f6e6c792028692920656d62656420
7468697320666f6e7420696e20636f6e74656e74206173207065726d6974
7465642062792074686520656d62656464696e6720726573747269637469
6f6e7320696e636c7564656420696e207468697320666f6e743b20616e64
20286969292074656d706f726172696c7920646f776e6c6f616420746869
7320666f6e7420746f2061207072696e746572206f72206f74686572206f
75747075742064657669636520746f2068656c70207072696e7420636f6e
74656e742e20416e79206f74686572207573652069732070726f68696269
7465642e0d0d54686520666f6c6c6f77696e67206c6963656e73652c2062
61736564206f6e20746865204d4954206c6963656e73652028687474703a
2f2f656e2e77696b6970656469612e6f72672f77696b692f4d49545f4c69
63656e7365292c206170706c69657320746f20746865204f70656e547970
65204c61796f7574206c6f67696320666f72204269626c6963616c204865
6272657720d24c61796f7574204c6f676963d3206173206a6f696e746c79
20646576656c6f7065642062792052616c70682048616e636f636b20616e
64204a6f686e20487564736f6e2e200d0d5065726d697373696f6e206973
20686572656279206772616e7465642c2066726565206f66206368617267
652c20746f20616e7920706572736f6e206f627461696e696e6720612063
6f7079206f6620746865204f70656e54797065204c61796f7574206c6f67
696320666f72204269626c6963616c2048656272657720616e6420617373
6f63696174656420646f63756d656e746174696f6e2066696c6573202874
686520d24c61796f7574204c6f67696320536f667477617265d3292c2074
6f206465616c20696e20746865204c61796f7574204c6f67696320536f66
747761726520776974686f7574207265737472696374696f6e2c20696e63
6c7564696e6720776974686f7574206c696d69746174696f6e2074686520
72696768747320746f207573652c20636f70792c206d6f646966792c206d
657267652c207075626c6973682c20646973747269627574652c20737562
6c6963656e73652c20616e642f6f722073656c6c20636f70696573206f66
20746865204c61796f7574204c6f67696320536f6674776172652c20616e
6420746f207065726d697420706572736f6e7320746f2077686f6d207468
65204c61796f7574204c6f67696320536f66747761726520697320667572
6e697368656420746f20646f20736f2c207375626a65637420746f207468
6520666f6c6c6f77696e6720636f6e646974696f6e733a0d0d5468652061
626f766520636f70797269676874206e6f7469636520616e642074686973
207065726d697373696f6e206e6f74696365207368616c6c20626520696e
636c7564656420696e20616c6c20636f70696573206f7220737562737461
6e7469616c20706f7274696f6e73206f6620746865204c61796f7574204c
6f67696320536f6674776172652e0d0d54484520534f4654574152452049
532050524f564944454420274153204953272c20574954484f5554205741
5252414e5459204f4620414e59204b494e442c2045585052455353204f52
20494d504c4945442c20494e434c5544494e4720425554204e4f54204c49
4d4954454420544f205448452057415252414e54494553204f46204d4552
4348414e544142494c4954592c204649544e45535320464f522041205041
52544943554c415220505552504f534520414e44204e4f4e494e4652494e
47454d454e542e20494e204e4f204556454e54205348414c4c2054484520
415554484f5253204f5220434f5059524947485420484f4c444552532042
45204c4941424c4520464f5220414e5920434c41494d2c2044414d414745
53204f52204f54484552204c494142494c4954592c205748455448455220
494e20414e20414354494f4e204f4620434f4e54524143542c20544f5254
204f52204f54484552574953452c2041524953494e472046524f4d2c204f
5554204f46204f5220494e20434f4e4e454354494f4e2057495448205448
4520534f465457415245204f522054484520555345204f52204f54484552
204445414c494e475320494e2054484520534f4654574152452e00540069
006d006500730020004e0065007700200052006f006d0061006e0020004e
00650067007200650074006100540069006d006500730020004e00650077
00200052006f006d0061006e002000740075010d006e00e900540069006d
006500730020004e0065007700200052006f006d0061006e002000660065
006400540069006d006500730020004e0065007700200052006f006d0061
006e0020004600650074007400540069006d006500730020004e00650077
00200052006f006d0061006e0020038803bd03c403bf03bd03b1004d0069
00630072006f0073006f0066007400200073007500700070006c00690065
006400200066006f006e0074002e00200059006f00750020006d00610079
00200075007300650020007400680069007300200066006f006e00740020
0074006f0020006300720065006100740065002c00200064006900730070
006c00610079002c00200061006e00640020007000720069006e00740020
0063006f006e00740065006e00740020006100730020007000650072006d
0069007400740065006400200062007900200074006800650020006c0069
00630065006e007300650020007400650072006d00730020006f00720020
007400650072006d00730020006f00660020007500730065002c0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000700072006f0064007500630074002c002000730065007200760069
00630065002c0020006f007200200063006f006e00740065006e00740020
0069006e0020007700680069006300680020007400680069007300200066
006f006e0074002000770061007300200069006e0063006c007500640065
0064002e00200059006f00750020006d006100790020006f006e006c0079
002000280069002900200065006d00620065006400200074006800690073
00200066006f006e007400200069006e00200063006f006e00740065006e
00740020006100730020007000650072006d006900740074006500640020
00620079002000740068006500200065006d00620065006400640069006e
00670020007200650073007400720069006300740069006f006e00730020
0069006e0063006c007500640065006400200069006e0020007400680069
007300200066006f006e0074003b00200061006e00640020002800690069
0029002000740065006d0070006f0072006100720069006c007900200064
006f0077006e006c006f006100640020007400680069007300200066006f
006e007400200074006f002000610020007000720069006e007400650072
0020006f00720020006f00740068006500720020006f0075007400700075
0074002000640065007600690063006500200074006f002000680065006c
00700020007000720069006e007400200063006f006e00740065006e0074
002e00200041006e00790020006f00740068006500720020007500730065
002000690073002000700072006f0068006900620069007400650064002e
000d000a000d000a00540068006500200066006f006c006c006f00770069
006e00670020006c006900630065006e00730065002c0020006200610073
006500640020006f006e00200074006800650020004d004900540020006c
006900630065006e00730065002000280068007400740070003a002f002f
0065006e002e00770069006b006900700065006400690061002e006f0072
0067002f00770069006b0069002f004d00490054005f004c006900630065
006e007300650029002c0020006100700070006c00690065007300200074
006f00200074006800650020004f00700065006e00540079007000650020
004c00610079006f007500740020006c006f00670069006300200066006f
00720020004200690062006c006900630061006c00200048006500620072
006500770020201c004c00610079006f007500740020004c006f00670069
0063201d0020006100730020006a006f0069006e0074006c007900200064
006500760065006c006f007000650064002000620079002000520061006c
00700068002000480061006e0063006f0063006b00200061006e00640020
004a006f0068006e00200048007500640073006f006e002e0020000d000a
000d000a005000650072006d0069007300730069006f006e002000690073
00200068006500720065006200790020006700720061006e007400650064
002c002000660072006500650020006f0066002000630068006100720067
0065002c00200074006f00200061006e007900200070006500720073006f
006e0020006f0062007400610069006e0069006e00670020006100200063
006f007000790020006f006600200074006800650020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200066006f00720020004200690062006c006900630061006c
002000480065006200720065007700200061006e00640020006100730073
006f00630069006100740065006400200064006f00630075006d0065006e
0074006100740069006f006e002000660069006c00650073002000280074
006800650020201c004c00610079006f007500740020004c006f00670069
006300200053006f006600740077006100720065201d0029002c00200074
006f0020006400650061006c00200069006e00200074006800650020004c
00610079006f007500740020004c006f00670069006300200053006f0066
0074007700610072006500200077006900740068006f0075007400200072
00650073007400720069006300740069006f006e002c00200069006e0063
006c007500640069006e006700200077006900740068006f007500740020
006c0069006d00690074006100740069006f006e00200074006800650020
00720069006700680074007300200074006f0020007500730065002c0020
0063006f00700079002c0020006d006f0064006900660079002c0020006d
0065007200670065002c0020007000750062006c006900730068002c0020
0064006900730074007200690062007500740065002c0020007300750062
006c006900630065006e00730065002c00200061006e0064002f006f0072
002000730065006c006c00200063006f00700069006500730020006f0066
00200074006800650020004c00610079006f007500740020004c006f0067
0069006300200053006f006600740077006100720065002c00200061006e
006400200074006f0020007000650072006d006900740020007000650072
0073006f006e007300200074006f002000770068006f006d002000740068
00650020004c00610079006f007500740020004c006f0067006900630020
0053006f0066007400770061007200650020006900730020006600750072
006e0069007300680065006400200074006f00200064006f00200073006f
002c0020007300750062006a00650063007400200074006f002000740068
006500200066006f006c006c006f00770069006e006700200063006f006e
0064006900740069006f006e0073003a000d000a000d000a005400680065
002000610062006f0076006500200063006f007000790072006900670068
00740020006e006f007400690063006500200061006e0064002000740068
006900730020007000650072006d0069007300730069006f006e0020006e
006f00740069006300650020007300680061006c006c0020006200650020
0069006e0063006c007500640065006400200069006e00200061006c006c
00200063006f00700069006500730020006f007200200073007500620073
00740061006e007400690061006c00200070006f007200740069006f006e
00730020006f006600200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
002e000d000a000d000a00540048004500200053004f0046005400570041
00520045002000490053002000500052004f005600490044004500440020
0027004100530020004900530027002c00200057004900540048004f0055
0054002000570041005200520041004e005400590020004f004600200041
004e00590020004b0049004e0044002c0020004500580050005200450053
00530020004f005200200049004d0050004c004900450044002c00200049
004e0043004c005500440049004e004700200042005500540020004e004f
00540020004c0049004d004900540045004400200054004f002000540048
0045002000570041005200520041004e00540049004500530020004f0046
0020004d00450052004300480041004e0054004100420049004c00490054
0059002c0020004600490054004e00450053005300200046004f00520020
004100200050004100520054004900430055004c00410052002000500055
00520050004f0053004500200041004e00440020004e004f004e0049004e
004600520049004e00470045004d0045004e0054002e00200049004e0020
004e004f0020004500560045004e00540020005300480041004c004c0020
00540048004500200041005500540048004f005200530020004f00520020
0043004f005000590052004900470048005400200048004f004c00440045
005200530020004200450020004c004900410042004c004500200046004f
005200200041004e005900200043004c00410049004d002c002000440041
004d00410047004500530020004f00520020004f00540048004500520020
004c0049004100420049004c004900540059002c00200057004800450054
00480045005200200049004e00200041004e00200041004300540049004f
004e0020004f004600200043004f004e00540052004100430054002c0020
0054004f005200540020004f00520020004f005400480045005200570049
00530045002c002000410052004900530049004e0047002000460052004f
004d002c0020004f005500540020004f00460020004f005200200049004e
00200043004f004e004e0045004300540049004f004e0020005700490054
0048002000540048004500200053004f0046005400570041005200450020
004f0052002000540048004500200055005300450020004f00520020004f
00540048004500520020004400450041004c0049004e0047005300200049
004e002000540048004500200053004f004600540057004100520045002e
00540069006d006500730020004e0065007700200052006f006d0061006e
0020004e00650067007200690074006100540069006d006500730020004e
0065007700200052006f006d0061006e0020004c0069006800610076006f
00690074007500540069006d006500730020004e0065007700200052006f
006d0061006e002000470072006100730073006500740074006f00540069
006d006500730020004e0065007700200052006f006d0061006e00200046
00e9006c006b00f6007600e9007200540069006d006500730020004e0065
007700200052006f006d0061006e002000560065007400540069006d0065
00730020004e0065007700200052006f006d0061006e002000480061006c
007600660065007400540069006d006500730020004e0065007700200052
006f006d0061006e00200050006f00670072007500620069006f006e0061
00540069006d006500730020004e0065007700200052006f006d0061006e
0020004e00650067007200690074006f00540069006d006500730020004e
0065007700200052006f006d0061006e0020041f043e043b044304360438
0440043d044b043900540069006d006500730020004e0065007700200052
006f006d0061006e002000540075010d006e00e900540069006d00650073
0020004e0065007700200052006f006d0061006e0020004b0061006c0131
006e00540069006d006500730020004e0065007700200052006f006d0061
006e0020004b007200650070006b006f00540069006d006500730020004e
0065007700200052006f006d0061006e0020011100e20323006d00540069
006d006500730020004e0065007700200052006f006d0061006e0020004c
006f006400690061410c00540415029a001d001f0415041504140413003c
001f0413b3061d1f20b8040cb30c0e3220b8040cb2131732b8040bb32820
1f0f41100412008004120002000f0412003f0412005f04120003005f0412
000100400412b2783340b80412b2723340b80412b26e3340b80412b26a33
40b80412b2543340bc0412004a0033ffc00412b317183240b80412b30a0c
3280b80412b308093240b80411b25a33404109041100560033ffc0041100
530033ffc00411b2503340b80411b24d3340bc041100470033ffc00411b3
44453240b80411b2423340bc0411003e0033ffc00411b23a331f41240411
00200411004004110070041100af041100f004110006000f0411002f0411
0090041100ff04110004002f041100400411007f0411008f041100a00411
00e004110006ffc00411b208330f411b0410008f04100002000f0410001f
0410002f0410000300600409000100b004090001000f0408003f0408004f
0408009f04070004040ab2006c1fb9ffc00403b345453240b80403b32b2e
3240b80403b2282932b9ffc00403b21a1c32bd040302990027001fffc004
01b2161b32b9ffc00400b2424232b9ffc00400b2363832b9ffc00400b32a
2d32df410a040000ef04000002040004010028001fffc00401b3282e32f0
bf0401000103fe000f0101001fffc003fcb310143240b803fdb30f133240
411003f9005003f9000200b003b100c003b10002006f03f5007f03f50002
ffc003afb22d3132b9ffc003afb30a0e3210411003ef002003ef008003ef
000300a003ef0001002003ef004003ef0002ffc003efb313163240b803e7
b20f1132b9ffc003dfb2303432b9ffc003dfb310183250411403dc000103
c903d20023001f03e203d2001e001f03c703d2001d001f03c603c8000d00
1fffc003a4b30f103280411003a3000103a303790029001f03a5037a0032
001f03a8037e001b001fffc003d9b20e1132b9ffc003d9b2282a32410a03
a7037c0032001f037303710034001f036c036bb2321f20bb03a400010040
03ecb3090b3240b803ecb2101532bd03e9036b0014001f03e4036bb2171f
0fbd036e002f036e0002ffc003b8b3090d3290410c03b800a003b8000200
1f03d20001009f03d20001004003d2b2090b32410a03a903800016001f03
cf03810015001f03aa0382b2151fc0bb03f70001004003f6b3090d3240b8
03a2b2083340b803a2b30d0e32c0410903a2000100b003f200c003f20002
ffc003f4b3263832004126038c0030038c0002002003e3003003e3000200
1003ee003003ee005003ee006f03ee007f03ee009f03ee0006000003ed00
3003ed0002002f03de007003db009003db009f03de0004ffc00379b20f10
32b9ffc00379b2242832b9037d037cb2321f10bb037e0001ffc0037eb309
0e3240b8037cb2121332b9ffc0037cb30c0e323fbd03d7004f03d7000200
4003d8b31718326fbb038e000100400390b3181b3240b803d4b2090c32bd
037b037a0032001fffc0037ab20e1132bd038003820016001f03810382b2
151fb0be03820001000f03830001004003ffb30c11327f41140354000100
6f0354008f035400d0035400ef03540004000f0354002f0354005f035400
0300400350b30e0f320fbb035a000100400349b20e331fbd0348007f0348
0002ffc00348b2152232b9ffc00347b2152232b9ffc0040fb21b1e32beff
c0040f002d01000032040e0406b22f1f51bb034b0001034f034eb2641f40
b80351b20e0f32b9ffc0034eb3383a3230bb034e0001ffc0034eb21f2332
b9ffc0034eb2131932b9ffc00346b2091132b9ffc00343b30a11320fbb03
440001ffc0032bb2080e32b9ffc0032bb2161b32b9ffc0032ab31417321f
4110033a0001000f03330001000003370020033700300337008003330004
ffc00332b310123250416403320001004003320060033200a0033200b003
32000400100332003003320050033200e003320004000f0336007f033600
ff033600030070033600f003360002000f0331003f0331008f033100bf03
3100e003310005000f0331006003310002008f0330000100600330009003
3000020050032f00010010032f0040032f0060032f0080032f00a0032f00
c0032f00f0032f000700cf032d00ff032d00020030032d0080032d00b003
2d00df032d0004006f032c007f032c00020012032000fd0800001f007f02
99403a017f007f017f027f037f047f057f107f11084035252c32406a252c
32402e252c324028252c3237600970098009033009400950090310092009
02b8ffc0b2073a33b8ffc04012063a33da4dea4dfa4d0312379006900702
cf410c011100df011100ef0111000300cf011000df011000ef0110408703
cf3edf3eef3e03cf4ddf4def4d03cfdedfdeefde03cf2ddf2def2d03404d
1b3a32375f016f017f018f01041f012f013f014f01045f036f037f038f03
041f032f033f034f0304600b700b800b03300b400b500b03100b200b0290
0ba00bb00bc00bd00b05b006c006d006e006f00605500660067006800690
06a006061f072f073f07400604f0414302db000100a002db00b002db0002
008002db009002db0002001002db000100c002db00d002db0002009002db
0001006002db007002db0002004002db005002db0002002302db003002db
000202db002300a002da0001008002da009002da0002004002da00010023
02da003002da000202da0023000002d90001007002d9009002d9000202d9
401c2230244024021024202402002401f02401d024e02402b024c02402c0
413a02d8000100a002d800b002d80002008002d8009002d80002002302d8
003002d8000202d8002300c002d7000100a002d700b002d70002008002d7
009002d7000200a002d700b002d70002008002d7009002d70002006002d7
007002d70002004002d7005002d70002002302d7003002d7000202d7b223
370f4117029b0001005f029b009f029b00df029b0003002f029b003f029b
006f029b0003001f029b0001029b029b0040029ab3272c3280b8029ab226
3340b8029ab2223340b8029ab21e3340b8029ab21c3340b8029ab3191a32
5f410f029a009f029a00df029a0003000f029a001f029a003f029a0003ff
c00299b2443340b80299b23d3340b80299b23a33df413902990001005f02
9900af02990002004f0299009f02990002002f0299003f0299000200af02
990001000f0299003f0299000200b0029900e0029900020070029900a002
990002004f0299005f02990002000f0299001f0299002f0299003f029900
04029a029a02990299000f027a002f027a400b0200161600000012110812
b802bab269121fb802b4b228101fb802b3b228101fb802b2b228101f4113
02030023000d01ee0023000d01ae0023000d019f0023000d01940023000d
01570023000d010f400b230df9230dc5230da7230d410a024a0024000d01
f00024000d01e90024000d016a400e240de8240dc6240da3240da2240dbb
01e30022000d0121401a220de5220ddd220db7220daa220d93220d5c220d
51220d4c220d410a02280020000d021d0020000d015e0020000d011c4017
200dfc200de1200dcb200dc8200da1200d59200d3a200d410a01f2003400
0d019c0034000d01970034000d0135b7340d1f340d1d340dba0202000f01
5bb20f0009bb0202015b000d030ab22a3e1fb80309b22a3e1fb80221b24d
251fb8021cb24d411fb8021bb24d521fb8021ab24d721fb80213b24d931f
4109020f01b10401001f020e01b10801001f020cb22a811fb8020bb22a81
1fb80208b22a5e1fb80205b22a391fb801feb22a231fb801fbb2661d1fb8
01fab2661e1fb801f6b266341fb801f5b266341fbc01f300660201001f01
f1b2669e1f410901ea00280801001f01e7002602ab001f01b8b24d3f1fb8
01b7b24d931f410901b4003e0125001f01b200400401001f01acb22a721f
b801a8b22a281fb801a7b22a241fb801a6b22a241fb801a3b22a1f1fb801
a1b2662e1fb8019eb266931fb8019db266e41fb8019ab2286c1f41090199
00280401001f019800260401001f0173b24d1b1fb80171b24d241fb80170
b24d2f1fb8016fb24d351fb8016bb23ecd1fb80169b23ee41f4109016701
b1019a001f0166002a02ab001f0161b2662a1fb8015fb2669e1f4109015d
0028019a001f015c00350401001f0147b24d391fb80146b23ecd1f410d01
45003e0125001f014401430101001f014201b102ab001f0140b22a301fb8
013eb22a261fb8013db2661d1fb8013cb2662b1fb80138b228811fb80137
b2289e1fbc01360028019a001f0129b24d721fbc0124002a0201001f0123
b22aab1fb8011fb266291fb8011eb266451fb8011bb228811f4109011300
3e0125001f0112003e0401001f0111b22a291fb80110b22a201fbe010b00
66019a001f010a0026019ab61ffd4d721ffb3eb80156b21ffa40b80801b2
1ff728b80801b61fec4d621feb4db80401b21fea40b802abb61fdf4d721f
de3eb802ab400b1fdc2ae41fdb66221fca2ab80401401b1fc92a2e1fc326
791fb828bb1fb34d1e1fb166291fb066621faf66b80401b21fae26b802ab
b21fa828b80201400b1fa0664c1f982a2b1f9726b8019ab61f9266291f87
40b802ab401b1f852a791f8226811f754d931f744d891f732a1d1f70285e
1f6a28b8040140171f692a521f682a201f6766291f6566671f612a931f60
35b80801b61f5e2acd1f5335b80801b21f4b66b80156b21f493eb80801b6
1f4866521f4626b80201b21f3f66b80156400b1f3b66341f322a931f2e35
bb0401001f002d0143b3cd1f5537bc022f0007018000070172402e07bd07
7e076207540742072f072707250721071e071408120810080e080c080a08
08080608040802080008000214b8ffe0402b000001001406100000010006
04000001000410000001001002000001000200000001000002010802004a
00b013034b024b5342b0372b4bb807ff52b0382b4bb008505b58b101018e
59014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b54
4218b0382bb00288b801005458b801ffb101018e851bb0124358b9000101
2c858d1bb900010146858d59590016763f183f123e113946443e11394644
3e113946443e113946443e11394660443e113946604445442b2b2b2b2b2b
2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d
59b0324b5358b0ff1d594bb02953205c58b9026c026a4544b9026b026a45
445958b90168026c455258b9026c01684459594bb03b53205c58b9003e02
6b4544b9004d026b45445958b9025c003e455258b9003e025c4459594bb0
3b53205c58b901b1003e4544b13e3e45445958b9024f01b1455258b901b1
024f4459594bb05a53205c58b90143003e4544b13e3e45445958b9038b01
43455258b90143038b4459594bb09e53205c58b9002a026c4544b9004002
6c45445958b9056c002a455258b9002a056c4459594bb01853205c58b126
264544b1662645445958b13226455258b126324459594bb05153205c58b1
26264544b1282645445958b1ad26455258b126ad4459594bb8010153205c
58b126264544b1352645445958b902280026455258b9002602284459592b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b33d76
6e58456523456023456560234560b08b766818b080622020b16e76456523
4520b003266062636820b003266165b076236544b06e234420b13d584565
234520b003266062636820b003266165b058236544b03d2344b100584554
58b158406544b23d403d4523614459b34e81387145652345602345656023
4560b089766818b080622020b138814565234520b003266062636820b003
266165b081236544b038234420b14e714565234520b003266062636820b0
03266165b071236544b04e2344b10071455458b171406544b24e404e4523
6144594b5242014b5058b108004259435c58b108004259b3020b0a124358
601b2159421610703eb0124358b93b21187e1bba040001a8000b2b59b00c
2342b00d2342b0124358b92d412d411bba04000400000b2b59b00e2342b0
0f2342b0124358b9187e3b211bba01a80400000b2b59b0102342b0112342
007418456944456944737373737474757575752b2b2b73732b2b2b2b2b2b
18456944737373742b454473737373737474744544737474747474747575
754544737545447373747445447373737373747474740075757575757575
757575752b2b74747474747400732b4358b14d4d451869441bb8ffc0b34d
1b3a322b5973002b2b7575752b2b2b2b2b0073732b435c58b8ffc0b20716
33b8ffc0400b061633d54de54df54d03c0410c011100d0011100e0011100
0300c0011000d0011000e00110401e03c03ed03ee03e03c04dd04de04d03
c0ded0dee0de03c02dd02de02d03372b74747474747473002b2b59017373
7473747374737473747374752b737573002b2b2b01732b2b2b2b752b2b2b
732b2b2b002b2b742b732b7373742b73732b2b2b2b2b2b732b732b2b2b74
2b2b2b73737373732b73732b2b2b73002b2b2b2b7374732b732b2b2b2b75
2b2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b2b2b
752b2b732b2b2b2b2b2b2b2b2b2b73747573742b7374752b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b002b2b4569442b2b00>
[13359 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 1934 50 <00020050ffe105f0056b000d001e01ab403368106813980ad712d719d81a
d81cd71de712090718071e1702180c171a171c271027132714281a0a1e80
090a341780090a3415b8ff80b3090a340fb8ff80b3090a340db8ff80b309
0a3408b8ff804064090a340680090a340180090a34129701960299069908
960c970da602a60cc705c709c61dd701d70d0d020407080609060a170117
02170c170d161d096619661c7805770c7619761d970fb618b61dd71bf008
0b560e0e35000316350709120b191f6e58182b4e10f44d43584019001b10
1b021b4d400301031a2f203f2002200f121f1202124de95d4e105df6714d
e95d1b400f1b4d400301031a2f203f200220124ded4e105df6714ded5900
3fed3fed31304b5379b151084379403c011e10251d26142609250526191a
181a02060f0d1225001e011b2501150812250017061b2501110c0e25010d
1c020e250101130a1625001a041625002b2b3c2b3c2b012b2b2b2b2a2b2b
2b2b2b81015d00715d435c58b40806123905b8fff4400b1239021812390c
18123902b8ffe8b211390cb8ffecb2113905b8ffe8b20d3909b8ffecb10d
39002b2b2b2b2b2b2b2b59012b2b2b2b2b2b2b2b01715d01240011100702
212027261110000522070611101716333237361235100226031701440195
97c8fe93fe92c89e019b0138ba614f7a559967455862649b055f0cfe6efe
d2fefec4fefcf8c4010d012e01934cbe9cfedcfea5a67432400119e2010d
010b6e00>KFDAAA+TimesNewRomanPS-BoldMT AddT42Char 
2 4294 74 <0003004dfe4603db03c30030003d004c01d3405725100b0f3f2c25870988
2d9329b504b909b229b62ef024f5440a0a3309350639063b204e05082518
252909291f381f481f8c08852a9b09a72da7430b40482442210d29181000
033a0724143e290d2f0c3e34121202553eb8ffc0401a1e123f3e4012393e
402627343e401e1f343e40151834303e013eb8ffc0b31218343eb8030440
15141440131534141d37970c0c1d2f0203402f313403b8031c400c01002b
31972f0745261d0f48b8ffc0b30b123f48b8ffc0400a0b0f3f2048014848
183ab8ffd0401532193f0d3a013a321872070201721f07012f070107b803
0640292c42400b123f42400b0f3f2f42010f421f420242482110400b123f
10400b0f3f2f10010f101f100210b80305401426343032193f0234010f34
1f3402344021262b2cb8ffc0401f32193f2c402829342c402325340f2c6f
2c8f2c03502cd02c022c774d3855182b10f65d712b2b2be43ced5d712b10
ed5d5d2b2b10ed5d5d2b2b10fd5d71fc3c10e4ed712b10ed5d2b2b003fed
3fedf43cfd2b3c1112392fed12392b2fb10602435458b414401f21342b59
ed2b5d2b2b2b2b2b2bb10602435458b9003effc0b32527343eb8ffc0b21d
1f342b2b591112393911123901111239391112393911123911393130005d
01715d002b01211523161716151406062322272206151416333732171615
140607062322262635343637263534363726263534363332072206151416
33323635342726032207061514163332363534272626029d013bb3311318
6fbf4a06722d3d373eadd24f71685581a87ed05a455e826a738678e0b05d
4a3a504f363c502d207566213976a38b9f0f1b6d039c6e3128363b649353
053b29242e022e4085558b21313157302e4919407245823031a06989c93e
75b8956f6e9fb34130fbf1111f3533534a4319111e16>KFDAAA+TimesNewRomanPS-BoldMT AddT42Char 
2 4976 76 <0002002a00000223056c000b001c00db40161e8011173f0f110012001c1f
111012101c0617241f12b801eeb4220d241f11b801eeb42318241f1cbb01
ee00230006ffc04011343634af0601064000010c1c0612110a09b8ffc040
1c3436340009100902094003290c0c0f0d1f0d020d2a18174011173f17b8
ffc0b23a3517b8ffc0b320233417b8ffc0b313173417b8ffc0402f2d3034
b017018f17010017101702177b401e501e021f1e601ea01eb01e042f1e3f
1e8f1eb01ec01ee01e061d4ec0182b105d7172f65d5d712b2b2b2b2b3cfd
5d3c10f4ed5d2b003f3c3f3c3fed5d2b2b2b2b015d3130012b0132161514
0623222635343613111416171521353637363511342627350126415a5b40
405a5acc2e43fe073e1e142e42056c5b40405a5a40405bfe3bfd1b633704
242402221763022263370425>KFDAAA+TimesNewRomanPS-BoldMT AddT42Char 
2 6334 81 <000100460000043703c3002b0204b90006ffe8b50b390906012db8ffc040
384b35502d0105050506250603d902d603d51a0315063505460203d601df
1b02120f0e0021002b1f0e1021102baf0fbf0f08011b1c14241f0fb802db
40112226241f2123220a241f0e23231c241f20b802da40152327241f2b23
232120200f0f0e0a1966050304071bb8015fb3d0010101b8ffb540561835
017900002b060a1f0901092a1515144021413f14403d350f14012014cf14
021440454734144043351440393a341440353634144030313414402b2d34
1440272834144022243414401e1f34144010113410140114b801bb400f1f
2db02d022f2d702d022d403e352db8ffc0b3393a342db8ffc0b33536342d
b8ffc0b33031342db8ffc0b32c2e342db8ffc0b32728342db8ffc0b31e1f
342db8ffc0400f1315342d1c0f001f0002002a272726b8ffc0400e21413f
f026012f26c026d0260326b8ffc0b3373a3426b8ffc0b32f313426b8ffc0
40091d243426192c4e81182b4e10f42b2b2b5d712b3c4d10fd5d3c102b2b
2b2b2b2b2b2b5d71f45d2b2b2b2b2b2b2b2b2b2b5d712b2b3c10fd5d3c00
3f3c10f42b71ed3f3c3ced3f3c103c103c2b2b2b2b2b03100e3c3c015d43
5c58b90020ffc0b3120b3f20b8ffc04009140c3f0f40140c3f20b8ffc040
13160d3f0f40170e3f0f40190f3f0f401b103f0fb8ffc0b221143f2b2b2b
2b2b2b2b2b59313000725d0171015d722b00712b01153636333216171615
111416171521353637363511342626232207111416171521353637363511
3426273501c348844c5b781410273efe27351710122b1a564a2735fe273b
1911273e03a7794e47654b39a2fe946c350724240725196301a0733c217b
fe0b69380724240620166c02106a34082500>KFDAAA+TimesNewRomanPS-BoldMT AddT42Char 
2 7432 85 <0001004b0000036e03c300290127400a0b260b390b140c103f0bb8ffc0b3
2224340bb8ffe7b31b1f342bb8ffc0b33134342bb8ff80b21f352bb8ffc0
b31d1e342bb8ffc0b30f10342bb8ffc04027141634102b01960b902b020b
190d11340f1d001e00291f1d101e10290601151617170022a21f1eb801ee
b42217c61f1db801eeb42323241f29b801ee401d230a320f401e3c3f0f40
1c373f0f67050304070029061e1d0a0f5d000aba015f0004015fb79007d0
07e0070307b801ba400b00290f171f1702172a2322b8ffc0b24b3522b8ff
c0b330343422b8ffc0b31b203422b8ffc04014121634c022017022010022
10220222da2a4e55182b10f65d5d712b2b2b2b3cfd5df4f45deded10e400
3f3c3f3c3f3c3ced2b2bed2b2b2b070e103c3c3c015d3130002b015d712b
2b2b2b2b2b2b002b2b011536363332161514062322262726232207060706
15151714171616171521353636351134272626273501c95d8c413843412e
354e070a0d1d1a29152001070c2f38fe073d2b080a263003a7d4915f453f
434a44040616223f6175d73839101b1903242405397a020550161c1a0525
>KFDAAA+TimesNewRomanPS-BoldMT AddT42Char 
2 0 0 <0002011c0000051c0500000300070042b40201c30607b803084013000504
c303000a0704c3010019080605c30203bc014100090125015600182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
011c0400fc2003c0fc400500fb002004c000>KFDAAA+TimesNewRomanPS-BoldMT AddT42Char 
KFDAAA+TimesNewRomanPS-BoldMT /CharStrings get begin
/O 50 def
/g 74 def
/i 76 def
/n 81 def
/r 85 def
end
KFDAAA+TimesNewRomanPS-BoldMT /Encoding get
dup 79 /O put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 114 /r put
pop
end
%ADOEndSubsetFont
/BKUHZJ+TimesNewRomanPS-BoldMT /KFDAAA+TimesNewRomanPS-BoldMT findfont ct_VMDictPut
/BKUHZJ+TimesNewRomanPS-BoldMT*1 
[79{/.notdef}rp /O 23{/.notdef}rp /g /.notdef /i 4{/.notdef}rp /n 
3{/.notdef}rp /r 141{/.notdef}rp]
BKUHZJ+TimesNewRomanPS-BoldMT nf
BKUHZJ+TimesNewRomanPS-BoldMT*1 [10.56 0 0 -10.56 0 0 ]msf
64.5952 -140.328 mo
(Origin)
[8.16283 4.68864 2.87234 5.28001 2.88283 0 ]xsh
grestore
gsave
113.705 -136.368 mo
198.305 -136.368 li
198.305 -151.992 li
113.705 -151.992 li
cp
eclp
false sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: KFDAAA+TimesNewRomanPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BKUHZJ+TimesNewRomanPS-BoldMT gcheck setglobal} if
2 2478 53 <00020026000005d9054c0023002d0178403f551a721a981503082318234b
1a471c4722611c63220712000500061005100604302f671b771b77228823
cc1bcb23d02f089916d41af918fb19fb1a052f080cb802d5b41d07222201
b802d5b41d0622230db802d540391d1222231c1b001b101b021b2d232214
2323227f238b230223002a1c211b8022e422f4220310225022d02203d022
0122172a1c222326252e1bb801e2401723000006242d2e1313120220d221
212222060607082021b8010540090c002a102a022ade17b8030240160c24
252500000f011f0102012d0c0c500d010d7d2e3db9011900182b10f65d3c
10fd5d3c103c103c10fded5d10fd3c003f3c103c103c10ed3f3c10fd3c12
392f3cedfd3c1112390111123971725d3911391112395d870e2e2b5d0e7d
10c4182b2b2b313043794020272c141a1525192628252c142a2f01271a2a
2f012b162d2f012918262f001a1b103c2b2b012b2b2b2b2b8181005d015d
5d435c58b90028fff8400b0c392b080c391c1813153e012b002b2b59015d
005d01111416163315213532363635113426262335213216161514070607
01161716171521010311333236363534262302201b445dfd4a5e431b1b44
5d0276f6e4906c457c0146401b2936fe55fe4b59398b8a4f91a1026afe84
6e3922252523386e03706e39222544b77b96623e1ffe3559161f0325026a
0299fdae33856b9b9400>BKUHZJ+TimesNewRomanPS-BoldMT AddT42Char 
BKUHZJ+TimesNewRomanPS-BoldMT /CharStrings get begin
/R 53 def
end
BKUHZJ+TimesNewRomanPS-BoldMT /Encoding get
dup 82 /R put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BKUHZJ+TimesNewRomanPS-BoldMT*1 
[79{/.notdef}rp /O 2{/.notdef}rp /R 20{/.notdef}rp /g /.notdef /i 
4{/.notdef}rp /n 3{/.notdef}rp /r 141{/.notdef}rp]
BKUHZJ+TimesNewRomanPS-BoldMT nf
BKUHZJ+TimesNewRomanPS-BoldMT*1 [10.56 0 0 -10.56 0 0 ]msf
123.905 -140.328 mo
(R)sh
grestore
gsave
113.705 -136.368 mo
198.305 -136.368 li
198.305 -151.992 li
113.705 -151.992 li
cp
eclp
false sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: KFDAAA+TimesNewRomanPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BKUHZJ+TimesNewRomanPS-BoldMT gcheck setglobal} if
2 508 38 <00010051ffe10557056b0024011db90016ff80b3090a341cb8ff80b3090a
3406b8ff80b3090a340db8ff804059090a340c1a091b36134d1a86168b1a
8f1b891c086b116b12791179128911a706a80da517c717cb1b0a06160026
4316411c80168517861b841cb704bb1e0a2f26681f7706760d761b8613ba
0f07370e1112241d005a021d0101b80114401d005a21a911120e056a1d03
0e6a1509015f2f1101111a7026012612256eb9013200182b4e1043584009
0f0a1f0a020a4d1919f44de95d1bb30a4d1919f44ded594e105df65d4de4
003fed3fed113939ecf4ed0110edf4ed0010c931304b5379b13208437940
24161c060d0c2617250809070902061b260d160a2500061c0a25000b180e
2500091a0525012b2b012b2b2b2a2b2b8181015d71005d71012b2b2b2b01
112326262322060706151412163332363715060623222402353412243332
1716333236370557272cf0987fd4313f5cc49c80d57672f7a5d9feafb7cb
0159c28f9f5c19202f07056bfe2ab8c4927697b9b6fed599708975776bae
0146b8c2015cc03e242f3300>BKUHZJ+TimesNewRomanPS-BoldMT AddT42Char 
2 2998 68 <0002005cfff303de03c30031003c025c4015061010390420103932403c44
348b3593079b35033eb8ffc040614b35b639017e07a62dac3cb72dc62dd8
21d72dd835e62d09350745074a134a1749355817660895009b35a501b601
b6080c330701803e99049a2d9c3104003e503e6316603e72179615af01a5
3abf01e03e0a0816503e743b03480802151215023bb8ffc040381739ef3b
013233080908072b2c282b2c252b2c293c33ab33bb330304333d334d337d
338d339f33ad33bd33ce33dd33ed330b703301333b08b8ffcc4097090902
5514082108650875080402083b084c087a0889089f08a608c808d908090b
081b0870080314120803180d261f2b2b2c2929662f3b48023297005d2f2f
021840292b340f181f185f186f189f18af18bf1807df18ec18fc18031818
400e103418021f07020b0f2c1f2c2f2c3f2c042c4429430f251f250225ea
00000918090902552f093f097f09bf090420097f0902000910090209b801
bb4010403e803e02403e603e023ea81501151bb8ffc0402850283fff1b01
1b2b0037103702373205402325346f05f005023005400550056005040519
3d385518b80131852b4e10f45d712b4ded71f4712bc15d105d71f45d5d72
2b3c10fd5df6e45d003f3f12392b2f5d712b103c10f4ed10ed10fdf4e410
ed1117395d71722b12395d7172113939011112393910c908103c0e3c3c00
5d2b0172b10602435458b40c181d1802005d59313043794032383a1c230a
1003040f251d2621250b2639260e1e111e000c20091e0122233a03371e00
101c0d1e010a220d1e0138043b1e00002b2b2b012b103c2b2b2b2b2b2b2b
818181810172715d0072715d01712b00712b2b2b25062322263534362535
342626232207061514171615140623222635343636333216171615111416
1633323717060623222627110607061514171633320249ab88506ab80135
174028412a1a1c26493b3f5572cc6e859b170e0a140d1a1b1e326b44505a
0a793b2721192d328a97694f6bab8e5e6a37291d1218151f2b2831454c33
48834671422a97fe9540211025184a434b950139475136372e231b00>BKUHZJ+TimesNewRomanPS-BoldMT AddT42Char 
2 3776 71 <0002004fffe40445054c001e002d017a4023980da80db90db71604121237
08001e101e02171f2d090818a21f1ec5230f071f070207b801eeb401a206
1f07b8015bb7082b840c0c080b1fb8015f4019177921261407001e000000
08100802082a0018101802182a01b8ffc0400e32193f0f014f0102b00101
011a2fb8ffc0b24b352fb8ffc0b33b3d342fb8ffc040140c0e34502fd02f
02702fa02f022f1f2601264010b8ffc0401532193f0f1001301040105010
d0100410192e3881182b4e10f45d712b4ded5d4e105d722b2b2bf65d712b
4ded5ded5d3c003f3c3fedf4ed3f3c10ed10f5edfc01f55d2b030e103c3c
3c3c015d313043794028222a0d1324252325020612262827292702060e25
22132627002a0d2627002511212701270f2b2700002b2b012b2b2b2a2b2a
81814358402f700d70137022702ab02fc02f06700e7f1276177f2370297b
2d86178a2d980d97169b2ca616ab2cba2c0e800f89110200715d015d5943
5c58b9002fffc0b319213f2fb8ffc0b318203f2fb8ffc0b2171f3f012b2b
2b59005d0111141716161715053506062322272635343636333216171134
272626233513262322070606151416171633323703d206082d38fe75476f
46b3685468b56843683b090c3042874a6b2518252f342d1728584e054cfb
cc6d14212004214d94563ea082bd97ef7a3441011a6b161d1c2afd868e14
1f9ca1b1aa26138a>BKUHZJ+TimesNewRomanPS-BoldMT AddT42Char 
2 5288 79 <0001002b00000224054c001000c0401c128011173f601201b012010f0500
0600101f0510061010060b241f06b801eeb42201241f05b801eeb4230c24
1f10b801ee40162300100006050a000f011f0102012a0c0b4011173f0bb8
ffc0b23a350bb8ffc0b32d34340bb8ffc0b32023340bb8ffc04023131734
b00b018f0b01000b100b020b7b1f12a012b012032f123f128f12c012e012
0512b8ffc0b331343412b8ffc0b62d2e34114ec0182b102b2b5d71f65d5d
712b2b2b2b2b3cfd5d3c003f3c3f3c2b2b2b015d3130015d712b01111416
1715213536373635113426273501b32e43fe073e1e142e42054cfb766337
0424240222176303c86237042500>BKUHZJ+TimesNewRomanPS-BoldMT AddT42Char 
2 5542 80 <0001004c0000067503c30046024e401f47020112121f400a1e37080f1300
3c00461f13103c10460601363719241f14b802d7b4222d241f28b802d740
142241241f3c23220f241f13232340270122241f27b802d8b723403b0137
241f3bb802d8402a2342241f46232307222d36210701041e3c3266041e66
0a0a04070046063c3b282714130a484032193f48b8ffc040551e22340048
a048b048c048044817171a0e0f0f1f0f020f2a1a19403d3519402b2d349f
19bf19cf190340198f190219e921222a2e2d403d352d402b2d349f2dbf2d
cf2d03402d8f2d022de9000f371f3702372a4241b8ffc0401a1d22346041
e04102a041b041c041032f41c041d0410341194748b80253b3214e81182b
2b4ef45d71722b3c4dfd5d3cf65d712b2b3cfd3cf65d712b2b3cfd5d3c4e
456544e6712b2b003f3c3c3c3c3c3f3c3f3c4d10ed10ed11121739011112
392b2b015d2b015d2b2b2b2b03100e3c3c015d3130437940242f311b1d0b
0d050630261c2631052e1e0106071d0b1a1e010c0d2f06321e011b0c1e1e
01002b2b01103c2b103c2b2b2b818181810049547940121f20080920081e
27051f092127002021080701103c103c2b002b8181435840246048e04802
060c240c340c4048d60b054f054f084e094f0bc0480538024f064f0cfa06
04005d015d717259435c58b90048ffc0b3161d3f48b8ffc0b310153f06b8
fff8b3140c3f06b8fff8b3120b3f0cb8fff0b3120b3f0cb8fff0b3110d3f
06b8fff8b3110d3f0cb8fff0b30f0b3f06b8fff8b30f0b3f0cb8fff0b310
0c3f06b8fff8b3100c3f0cb8fff0b10b39002b2b2b2b2b2b2b2b2b2b012b
2b59005d0115363633321617363633321616151114161715213536373635
113426262322060711141716171521353e02351134262623220706071114
161715213536373635113426273501c94d834e5a7a2150935061732d273e
fe1d391b12142b1d2b582d111741fe1c272d0f142f1b28212f35273efe1e
3b1911273e03a77b544354565a50598996fe816c3408242405271b610192
7d44213f3ffe0a651a250424240223315201927f4024151f4bfe0a633f06
24240620166c02106a340825>BKUHZJ+TimesNewRomanPS-BoldMT AddT42Char 
2 6982 82 <0002004affe403b703c3000d002101544018c71a01270c011257080e260d
01000717260709080b1d4004b8ffc0400e32193f0440262b340f0401041a
23b8ffc0b24b3523b8ffc0b2473523b8ffc0b23f3523b8ffc0b3393d3423
b8ffc04024282b34c023d02302002340236023c023d0230540239f230223
0f121f12021240d00b010bb8ffc0b332193f0bb8ffc0b3262b340bb8ffc0
b60c0e340b192223b8ff80b427353871182b2b4e10f42b2b2b5d4ded5d4e
105d71722b2b2b2b2bf6712b2b4ded003f3c3ced3f3c3ced313043794044
0121102502251f1e201e020614131513020606261b1c1a1c191c03060f0d
12270021011d1e011609121e0018071d2701110c0e27011e030e1e01130a
171e001c051727002b2b2b2b012b2b2b2b2a2b2a2a2b2b81435840312801
390149014910790c0570067f0c7f10701980068f0c8f108019c802c61f0a
7f07700d700f7f188f07800d800f8f1808015d005d715901715d01321616
151407062322023534121722060615141716163332373637361134262726
01fe7ad26d657ad7d3e4e9cf3349170e0b482e2d1e270d1426251a03c37e
e88ac786a20128c3c9012b474de3ca6b5d474a19223d5f0121aa7f1d1500
>BKUHZJ+TimesNewRomanPS-BoldMT AddT42Char 
BKUHZJ+TimesNewRomanPS-BoldMT /CharStrings get begin
/C 38 def
/a 68 def
/d 71 def
/l 79 def
/m 80 def
/o 82 def
end
BKUHZJ+TimesNewRomanPS-BoldMT /Encoding get
dup 67 /C put
dup 97 /a put
dup 100 /d put
dup 108 /l put
dup 109 /m put
dup 111 /o put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BKUHZJ+TimesNewRomanPS-BoldMT*1 
[67{/.notdef}rp /C 11{/.notdef}rp /O 2{/.notdef}rp /R 14{/.notdef}rp /a 
2{/.notdef}rp /d 2{/.notdef}rp /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o 2{/.notdef}rp /r 141{/.notdef}rp]
BKUHZJ+TimesNewRomanPS-BoldMT nf
BKUHZJ+TimesNewRomanPS-BoldMT*1 [10.56 0 0 -10.56 0 0 ]msf
131.585 -140.328 mo
(andomColor)
[5.28 5.75519 5.87135 5.28 8.64865 7.66653 5.28 2.88281 5.28003 0 ]xsh
grestore
gsave
198.785 -136.368 mo
292.169 -136.368 li
292.169 -151.992 li
198.785 -151.992 li
cp
eclp
false sop
1 /0 /CSD get_res sepcs
1 sep
BKUHZJ+TimesNewRomanPS-BoldMT*1 [10.56 0 0 -10.56 0 0 ]msf
205.505 -140.328 mo
(R)sh
grestore
gsave
198.785 -136.368 mo
292.169 -136.368 li
292.169 -151.992 li
198.785 -151.992 li
cp
eclp
false sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: KFDAAA+TimesNewRomanPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BKUHZJ+TimesNewRomanPS-BoldMT gcheck setglobal} if
2 910 42 <00010053ffe00624056c0033016c40160a10052403250e29781f881f8424
84258d29882a0a23b8ff80b3090a340cb8ff80b3090a3406b8ff80b3090a
342ab8ff804043090a346807680b770b7724b903be04b806b724b726b72a
0a44234629402a8729862a059926972aa706a307a80bc525cb29074a0e18
401b103f7018011ec81d185c2217b8ffc040141b103f7f170111c81d1722
23331d005a021d0101b801144022005a30a92b1e1f01101f0d1718182205
352b030d3522090011101102113e011e1a35b8ffc040090c103435122819
3435bc01530021006e01e000182b2b4ef44d4358b60f091f0902094de95d
1bb1094ded594e102bf63c4ded5d003fed3fed12392f3c12393901123939
0010ecf4ed0110edf4ed2b015d2b2b015d2b3130004b5379b14508437940
32202a060f0b26262725272427030607250c230925000e21104201201f0f
10062a0925000a270d25000f200d420008290525012b2b2b012b103c103c
2b2b2b2a2b8181005d01715d2b2b2b2b0071011123262423220602151412
163332363711342626232335211506060706151106042322262627263510
0021321716163332363705852543fef49f98ca545ccd8d31673616453123
02934b3b100982fee797c1ffc3374601ae014665512cc5121c3014056bfe
22c4ccabfecea1c3feda8a1514011a502f262525051f24134afee63a3b69
ab6b8aab013201a610084b293900>BKUHZJ+TimesNewRomanPS-BoldMT AddT42Char 
2 7852 86 <00010051ffe402d403c3003202aa405c0b3015103f04100d2914101d2904
06141614c625c626d910ea10f910072910252a3810362a870b95239524a9
0ba323b80bb4230b050c050d0829150c470b4b0c06400b400c0212321f00
9b021f010140140c3f01400b123f9f010101b801454013009b122f400b12
342ff32b181f199b1b1f1a1ab8ffc0b60b123f901a011ab8016b401e199b
16f3121205262b07121e26120b120f011f01020140121534015b1221b8ff
e0b40914065521b8ffe0400a09140255002110210221b8ffc0400b0b0f34
002110210221220eb8ffc0403a32193f1f0e010e1a0f34012f344f345f34
6f347f34af340634120820091406550820091402550f081f080208400b0f
340f081f080208221a2928b8ffc0b632193f0f280128b8ffc040090c0e34
2819333871182b4e10f42b712b4de4ed5d2b712b2b435c58b508201b103f
08b8ffc0401732193f084014213f083c15233f083c16253f08400b123f2b
2b2b2b2b2b594e105d71f6722b4ded5d2b712b2b435c58b52120140c3f21
b8ffe040091b103f215e32193f21b8ffc0b314213f21b8ffc0b315233f21
b8ffc0b316253f21b8ffc0b20b123f2b2b2b2b2b2b2b59e42b71435c5840
19014028183f01401c113f0140101b3f01400e173f01400d163f2b2b2b2b
2b59003fed435c58b51e1e1e0f3f1eb8ffe2b30c143f1eb8ffe2b30d163f
1eb8ffe2b20e173f2b2b2b2b593fed435c58b90005ffb540121e0f3f051e
0c143f051e0d163f05140e173f2b2b2b2b5910ecf4ed5d2b0110edf4ed00
10ec2b435c58400f2f400a113f2f40090f3f2f40140c3f2b2b2b59f4ed5d
2b2b0110edf4ed435c58b5252d1c113f0bb8ffd0b31c113f0bb8ffe04009
190f3f252d170e3f0bb8ffd34009170e3f252d160d3f25b8fff1b3171f3f
25b8ffe4b718203f0c1c19213f002b2b2b2b2b2b2b2b2b59007131300071
5d015d5d002b011323262623220615141716041615140606232227262322
07230333161633323635342627262726353436333217163332363702940f
223d8341293a142001265d4e8e5643701e0b21162110222d9d46303d3c68
992d42958d4c471b1112161803c1fec18e6837241b1929c78b564e96502a
0b32015084843b2a3046476a3852636caf250f0f2300>BKUHZJ+TimesNewRomanPS-BoldMT AddT42Char 
2 8920 88 <0001003fffe4043103a700220192b90024ffc040a64b355024d02402090c
1b0c2a0c490c04390c9a1ca91cb81c04ef07ee080222400b0d3421400b0d
340f0500131f05101304df0701ff070101241f0523230f241f1323231e24
1f2223230506050a1965090b0a0b0022221414130600062a0f011f010201
2a1e064045473406403d35064043350640393a3406403031340640272834
064022243406402b2d3406401e1f340640101134cf06010f06012006cf06
02000610060206b801bb400a244021413f24403e3524b8ffc0b3393a3424
b8ffc0b330313424b8ffc0b32c2e3424b8ffc0b22a3524b8ffc0b3272834
24b8ffc0b31e1f3424b8ffc04019131534c024011f24b024022f24702402
24141f1501152a0f0eb8ffc0b321413f0eb8ffc0b3373a340eb8ffc0b32f
31340eb8ffc0b22a350eb8ffc040131d2434f00e012f0ec00ed00e030e19
234e81182b4e10f45d712b2b2b2b2b3c4dfd5d3c105d71722b2b2b2b2b2b
2b2b2bf45d5d71722b2b2b2b2b2b2b2b2b2b3cfd5ded3c003f3c103c103c
3f3c3ced3f103c2b2b2b5d71015d3130012b2b00715d015d722b01111416
171521350606232226263511342627352111141616333237363711342627
3503cc283dfe834386534f7b2a273e017d13291b241d2838273e03a7fd24
6b3507247d50496182a201736a340825fd81643a1e131a4f01f46a340825
>BKUHZJ+TimesNewRomanPS-BoldMT AddT42Char 
BKUHZJ+TimesNewRomanPS-BoldMT /CharStrings get begin
/G 42 def
/s 86 def
/u 88 def
end
BKUHZJ+TimesNewRomanPS-BoldMT /Encoding get
dup 71 /G put
dup 115 /s put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BKUHZJ+TimesNewRomanPS-BoldMT*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 7{/.notdef}rp /O 2{/.notdef}rp /R 
14{/.notdef}rp /a 2{/.notdef}rp /d 2{/.notdef}rp /g /.notdef /i 
2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s 
/.notdef /u 138{/.notdef}rp]
BKUHZJ+TimesNewRomanPS-BoldMT nf
BKUHZJ+TimesNewRomanPS-BoldMT*1 [10.56 0 0 -10.56 0 0 ]msf
213.185 -140.328 mo
(andomGaussian)
[5.28 5.75519 5.87134 5.28003 8.64862 8.16284 5.28 5.87137 4.10791 4.0657 2.88281 5.28 
0 ]xsh
grestore
gsave
292.645 -136.368 mo
380.749 -136.368 li
380.749 -151.992 li
292.645 -151.992 li
cp
eclp
false sop
1 /0 /CSD get_res sepcs
1 sep
BKUHZJ+TimesNewRomanPS-BoldMT*1 [10.56 0 0 -10.56 0 0 ]msf
297.805 -140.328 mo
(R)sh
grestore
gsave
292.645 -136.368 mo
380.749 -136.368 li
380.749 -151.992 li
292.645 -151.992 li
cp
eclp
false sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: KFDAAA+TimesNewRomanPS-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BKUHZJ+TimesNewRomanPS-BoldMT gcheck setglobal} if
2 8684 87 <00010026fff3029604fd00190098400e8f0b8f0c028f0b8f0c020b0c0019
b801b6401901041414031583020106200b300b400b030b7209650e0b0203
b8010e401d050bb60c1a1b010404000f051f0502052a1316157914141340
0c143f13b8ffc040101d22342f13c013d0130313191a4e55182b4e10f45d
2b2b3c4d10f43c10fd5d3c3c103c4e10f64ded10f43c003ffde45d3f3cfd
3c3c103c10f43c0110c93130017100710111331523111416163332371706
23222627263511233536363701b8dede0f2610413a1e51b6597b110a7a7e
b14204fdfeaa63fdbf512f1d6316c0633d229601f92359c47900>BKUHZJ+TimesNewRomanPS-BoldMT AddT42Char 
BKUHZJ+TimesNewRomanPS-BoldMT /CharStrings get begin
/t 87 def
end
BKUHZJ+TimesNewRomanPS-BoldMT /Encoding get
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BKUHZJ+TimesNewRomanPS-BoldMT*1 
[67{/.notdef}rp /C 3{/.notdef}rp /G 7{/.notdef}rp /O 2{/.notdef}rp /R 
14{/.notdef}rp /a 2{/.notdef}rp /d 2{/.notdef}rp /g /.notdef /i 
2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s 
/t /u 138{/.notdef}rp]
BKUHZJ+TimesNewRomanPS-BoldMT nf
BKUHZJ+TimesNewRomanPS-BoldMT*1 [10.56 0 0 -10.56 0 0 ]msf
305.485 -140.328 mo
(andomRotation)
[5.28 5.75519 5.87134 5.28 8.64865 7.66653 5.28 3.48483 5.28 3.48465 2.88284 5.28 
0 ]xsh
grestore
45.6352 -151.988 mo
113.219 -151.988 li
113.219 -152.468 li
45.6352 -152.468 li
cp
false sop
1 /0 /CSD get_res sepcs
1 sep
ef
113.225 -151.988 mo
113.705 -151.988 li
113.705 -152.468 li
113.225 -152.468 li
cp
ef
113.705 -151.988 mo
198.185 -151.988 li
198.185 -152.468 li
113.705 -152.468 li
cp
ef
198.185 -151.988 mo
198.665 -151.988 li
198.665 -152.468 li
198.185 -152.468 li
cp
ef
198.665 -151.988 mo
292.049 -151.988 li
292.049 -152.468 li
198.665 -152.468 li
cp
ef
292.045 -151.988 mo
292.525 -151.988 li
292.525 -152.468 li
292.045 -152.468 li
cp
ef
292.525 -151.988 mo
380.749 -151.988 li
380.749 -152.468 li
292.525 -152.468 li
cp
ef
113.225 -136.368 mo
113.705 -136.368 li
113.705 -151.992 li
113.225 -151.992 li
cp
ef
198.185 -136.368 mo
198.665 -136.368 li
198.665 -151.992 li
198.185 -151.992 li
cp
ef
292.045 -136.368 mo
292.525 -136.368 li
292.525 -151.992 li
292.045 -151.992 li
cp
ef
45.6352 -135.888 mo
113.219 -135.888 li
113.219 -136.368 li
45.6352 -136.368 li
cp
ef
113.225 -135.888 mo
113.705 -135.888 li
113.705 -136.368 li
113.225 -136.368 li
cp
ef
113.705 -135.888 mo
198.185 -135.888 li
198.185 -136.368 li
113.705 -136.368 li
cp
ef
198.185 -135.888 mo
198.665 -135.888 li
198.665 -136.368 li
198.185 -136.368 li
cp
ef
198.665 -135.888 mo
292.049 -135.888 li
292.049 -136.368 li
198.665 -136.368 li
cp
ef
292.045 -135.888 mo
292.525 -135.888 li
292.525 -136.368 li
292.045 -136.368 li
cp
ef
292.525 -135.888 mo
380.749 -135.888 li
380.749 -136.368 li
292.525 -136.368 li
cp
ef
113.225 -89.088 mo
113.705 -89.088 li
113.705 -135.888 li
113.225 -135.888 li
cp
ef
198.185 -89.088 mo
198.665 -89.088 li
198.665 -135.888 li
198.185 -135.888 li
cp
ef
292.045 -89.088 mo
292.525 -89.088 li
292.525 -135.888 li
292.045 -135.888 li
cp
ef
45.6352 -88.608 mo
113.219 -88.608 li
113.219 -89.088 li
45.6352 -89.088 li
cp
ef
113.225 -88.608 mo
113.705 -88.608 li
113.705 -89.088 li
113.225 -89.088 li
cp
ef
113.705 -88.608 mo
198.185 -88.608 li
198.185 -89.088 li
113.705 -89.088 li
cp
ef
198.185 -88.608 mo
198.665 -88.608 li
198.665 -89.088 li
198.185 -89.088 li
cp
ef
198.665 -88.608 mo
292.049 -88.608 li
292.049 -89.088 li
198.665 -89.088 li
cp
ef
292.045 -88.608 mo
292.525 -88.608 li
292.525 -89.088 li
292.045 -89.088 li
cp
ef
292.525 -88.608 mo
380.749 -88.608 li
380.749 -89.088 li
292.525 -89.088 li
cp
ef
44.9152 -72.408 mo
113.219 -72.408 li
113.219 -72.8879 li
44.9152 -72.8879 li
cp
ef
113.225 -72.888 mo
113.705 -72.888 li
113.705 -88.608 li
113.225 -88.608 li
cp
ef
113.225 -72.408 mo
113.705 -72.408 li
113.705 -72.8879 li
113.225 -72.8879 li
cp
ef
113.705 -72.408 mo
198.185 -72.408 li
198.185 -72.8879 li
113.705 -72.8879 li
cp
ef
198.185 -72.888 mo
198.665 -72.888 li
198.665 -88.608 li
198.185 -88.608 li
cp
ef
198.185 -72.408 mo
198.665 -72.408 li
198.665 -72.8879 li
198.185 -72.8879 li
cp
ef
198.665 -72.408 mo
292.049 -72.408 li
292.049 -72.8879 li
198.665 -72.8879 li
cp
ef
292.045 -72.888 mo
292.525 -72.888 li
292.525 -88.608 li
292.045 -88.608 li
cp
ef
292.045 -72.408 mo
292.525 -72.408 li
292.525 -72.8879 li
292.045 -72.8879 li
cp
ef
292.525 -72.408 mo
380.749 -72.408 li
380.749 -72.8879 li
292.525 -72.8879 li
cp
ef
gsave
6.03922 21.702 mo
88.4792 21.702 li
88.4792 6.078 li
6.03922 6.078 li
cp
eclp
%ADOBeginSubsetFont: OMZAAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /OMZAAA+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3214498354000000cc000000606376
7420adbfdf8e0000012c0000066e6670676d38a5162b0000079c00000bb0
676c7966378d34f70000b05c0000633668656164eb4b56cc0000134c0000
003668686561123316a70000138400000024686d747850f21ebf000013a8
00003eea6c6f636132a14df000005294000023306d61787017590cfa0000
75c4000000206e616d65c03e649f000075e400002e4670726570a1b2e8ea
0000a42c00000c2f67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002effc000785b0000000900000000544d432000400020
25cc05d3fe510133073e01b2400001ffffff0000042605bb000000200015
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
0471048304f9008c00910096009b00a000a500aa00af00b400b90000405b
8574737271706f6e6d6c6b6a6968676665625d58575655544f4e41403f3e
3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221201f
1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b09051582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab102
00080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845
441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d
2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062
602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c
45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a
45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0
177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b0
02855958b00185592d2c20b0032545b019234445b01a23444565234520b0
0325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ff
e0001a45208a54582321b03f1b235961441cb114008a5279b31940201945
208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f432343
0b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b
2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003252349
b04060b0206320b000525823b002253823b002256538008a63381b212121
212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b005
251023208af500b0016023edec2d2c01b005251023208af500b0016123ed
ec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161
0110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a
2d2c352d2c76b8022323701020b802234520b0005058b00161593a2f182d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826
b00826b00826b008260f10161345683ab001162d2cb4000100000015b008
26b00826b00826b008260f1016134568653ab001162d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b01060
482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53
234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d
2c4b5258b00425b0042549b00425b00425496120b0005458212043b00055
58b00325b00325b8ffc038b8ffc038591bb04054582043b0005458b00225
b8ffc038591b2043b0005458b00325b00325b8ffc038b8ffc0381bb00325
b8ffc03859595959212121212d2c462346608a8a462320468a608a61b8ff
8062232010238ab902c202c28a70456020b0005058b00161b8ffba8b1bb0
468c59b0106068013a2d2c2320b000508a8a64b10003255458b0401bb101
03255458b037438b59b04f2b5923b0622b2321235865592d2cb13a000c21
5460432d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b12601885158b940
00020063b80400885458b202400243604259b94000040063b80800885458
b202800243604259b12801885158b94000080063b81000885458ba000201
00000243604259595959595959b10002435458400a37403a403b403e023f
021bb10102435458b237403aba0100003b0100b33e013f011bb180024352
58b237403ab80180b13b401bb901000002435258b237403aba0180003b01
401bb901800002435258b237403ab80200b13b401bb237403aba0100003b
0100595959b9400000808855b94000020063b8040088555a58b33e003f01
1bb33e003f0159595942424242422d2cb0024354584b53234b515a58381b
2121591b21212121592d2cb0572b580c028a4b53b004264b515a580a381b
0a2121591b21212121592d2c20b0024354b00123b05f237821b1000243b0
56237921b0024323b020205c58212121b100471c598a8a208a208a23b810
00635658b81000635658212121b1012c1c591b2159b08062205c58212121
b1001b1c5923b08062205c58212121b1000c1c598ab00161b8ffb31c2321
2d2c20b0024354b00123b07b237821b1000243b072237921b10002438ab0
20205c58212121b0631c598a8a208a208a23b81000635658b81000635658
b00426b0015bb00426b00426b004261b21212121b13600231c591b2159b0
042623b08062205c588a5c8a5a23212321b01d1c598ab08062205c582121
2321b00e1c59b00426b00161b8ff981c23212d2c012d2cb0022563b02060
66b00225b82000626023622d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b03543525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b03543525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12501885058b940
00020063b8040088545cb0124b525b1bb001592d00010000000700005fc3
14d65f0f3cf5081b080000000000a2e3272a00000000d684e4ecfaaffd67
1000085100000009000100000000000000010000073efe4e00431000faaf
fa7a1000000100000000000000000000000000000dde0600010000000000
0239000002390000023900b002d7005e0000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000556009605c7006605c7
009e00000000000000000000000000000000023900bf0000000005560096
0473009606aa009800000000063900630556009e0000000005c700a10556
005c04e30030000000000000000000000000000000000556000600000000
0000000000000000000000000000000000000000000000000473004a0473
008604000050047300460473004b00000000000000000000000001c70088
000000000400008801c7008306aa00870473008704730044047300870000
000002aa00850400003f0239002404730083000000000000000000000000
040000210000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000023900c60000000000000000000000000000000002aa00e50000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
01a8ffba0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000051bffba00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0100ffba0800ffba1000ffba000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000004c100660000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000019a0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000005c5006a05d3006305f800a6094a00a605f8009c0302003b054100a4
00000000047200460000000003f80087020a0089000000000250000e0478
008500000000000000000302003b020a008901c700880471000004890098
04c3005c04e70098046f009800000000000000000000000001ea00980000
00000489009803bc009805c7009804ec00980531005c046d009800000000
04db0098046d004a0410002904dd0091000000000000000000000000046c
000800000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001ea00870000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000036003600360036
009800fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb
00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb00fb
00fb00fb00fb022c02f703d003d003d003d003d00484048405ca062b07f6
07f608d5099609960b0d0cf80d960d960d960d960d960ee40ee40ee40ee4
0ee40ee40ee40ee410c81200135d149615d715d715d715d716ef16ef1893
19601b4c1c631d8e1ea91ea91f4b21a2227f238223822382238225152515
251525152515251525152515251525152515251525152515251525152515
251525152515251525152515251525152515251525152515251525152515
251525152515251525152515251525152515251525152515251525152515
251525152515251525152515251525152515251525152515251525152515
251525152515251525152515251525152515251525152515251525152515
251525152515251525152515251525152515251525152515251525152515
251525152515251525152515251525152515251525152515251525152515
25152515251525152515251525152515251525152515251525152515255f
255f255f255f255f25822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
258225822582258225822582258225822582258225822582258225822582
2582258225822582258225822582258225822582258225822582259c259c
259c259c259c259c259c259c259c259c259c259c259c259c259c259c259c
259c259c259c259c259c259c259c259c259c259c259c259c259c259c259c
259c259c259c259c259c259c259c259c259c259c259c25b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625b625b6
25b625b625b625b625b625b625b625b625b625b625b625b625b625d025ea
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
260426042604260426042604260426042604260426042604260426042604
2604270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f270f270f270f
270f270f270f270f270f270f270f270f270f270f270f270f271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
271727172717271727172717271727172717271727172717271727172717
27172717271727172717271727b82847288e290b2952297e29da29da2a4c
2a4c2a912ac82ac82aee2b522b522b522b7e2bb52bbd2c3d2cb02d222d67
2da62da62da62da62dbf2dbf2e162e3a2eb32f022f6d2fb72fb7301730c8
30ea31453145314531453184318431843184318431843184318431843184
318431843184318431843184318431843184318431843184318431843184
318431843184318431843184318431843184318431843184318431843184
318431843184318431843184318431843184318431843184318431843184
3184318431843184319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b319b
319b319b319b319b319b319b319b319b319b319b319b319b319b319b0001
0000119700800010000800020002001000400086000005170c2f00020001
00>
<0000003a02be0000000300000000021a00000000000300000001000a021a
0000000300000002000e029c00000003000000030044027e000000030000
0004000a021a0000000300000005001802c20000000300000006000e02da
00000003000000070064021a0000000300000008003002f6000000030000
0009008a0506000000030000000d0e0405900001000000000000010d1394
0001000000000001000514a10001000000000002000714e1000100000000
0003002214d20001000000000004000514a10001000000000005000c14f4
0001000000000006000715000001000000000007003114a1000100000000
00080018139b000100000000000900451507000100000000000d0702154c
0003000104030002000c1c4e000300010405000200101c5e000300010406
0002000c1c6e000300010407000200101c7a000300010408000200101c8a
0003000104090000021e02e80003000104090001000a021a000300010409
0002000e029c00030001040900030044027e0003000104090004000a021a
0003000104090005001802c20003000104090006000e02da000300010409
000700621c9a0003000104090008003002f60003000104090009008a0506
000300010409000d0e141cfc00030001040a0002000c1c4e00030001040b
000200102b1000030001040c0002000c1c4e00030001040e0002000c2b20
0003000104100002000e2b30000300010413000200122b3e000300010414
0002000c1c4e000300010415000200101c4e0003000104160002000c1c4e
0003000104190002000e2b5000030001041b000200102b2000030001041d
0002000c1c4e00030001041f0002000c1c4e0003000104240002000e2b5e
00030001042a0002000e2b6c00030001042d0002000e2b7a00030001080a
0002000c1c4e0003000108160002000c1c4e000300010c0a0002000c1c4e
000300010c0c0002000c1c4e00a900200032003000310037002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0020
000d000d0048006500620072006500770020004f00700065006e00540079
007000650020004c00610079006f007500740020006c006f006700690063
00200063006f0070007900720069006700680074002000a9002000320030
003000330020002600200032003000300037002c002000520061006c0070
0068002000480061006e0063006f0063006b002000260020004a006f0068
006e00200048007500640073006f006e002e002000540068006900730020
006c00610079006f007500740020006c006f00670069006300200066006f
00720020004200690062006c006900630061006c00200048006500620072
006500770020006900730020006f00700065006e00200073006f00750072
0063006500200073006f00660074007700610072006500200075006e0064
0065007200200074006800650020004d004900540020004c006900630065
006e00730065003b002000730065006500200065006d0062006500640064
006500640020006c006900630065006e0073006500200064006500730063
00720069007000740069006f006e00200066006f00720020006400650074
00610069006c0073002e0041007200690061006c00200020006900730020
0061002000740072006100640065006d00610072006b0020006f00660020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e002e004d006f006e006f0074
007900700065003a0041007200690061006c00200052006500670075006c
0061007200200028004d006900630072006f0073006f0066007400290056
0065007200730069006f006e00200037002e003000300041007200690061
006c004d005400a90020003200300031003700200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064002e0020000d000a000d
000a0048006500620072006500770020004f00700065006e005400790070
00650020004c00610079006f007500740020006c006f0067006900630020
0063006f0070007900720069006700680074002000a90020003200300030
00330020002600200032003000300037002c002000520061006c00700068
002000480061006e0063006f0063006b002000260020004a006f0068006e
00200048007500640073006f006e002e002000540068006900730020006c
00610079006f007500740020006c006f00670069006300200066006f0072
0020004200690062006c006900630061006c002000480065006200720065
00770020006900730020006f00700065006e00200073006f007500720063
006500200073006f00660074007700610072006500200075006e00640065
007200200074006800650020004d004900540020004c006900630065006e
00730065003b002000730065006500200065006d00620065006400640065
00640020006c006900630065006e00730065002000640065007300630072
0069007000740069006f006e00200066006f007200200064006500740061
0069006c0073002e004d006f006e006f0074007900700065002000540079
00700065002000440072006100770069006e00670020004f006600660069
006300650020002d00200052006f00620069006e0020004e006900630068
006f006c00610073002c0020005000610074007200690063006900610020
005300610075006e006400650072007300200031003900380032004d0069
00630072006f0073006f0066007400200073007500700070006c00690065
006400200066006f006e0074002e00200059006f00750020006d00610079
00200075007300650020007400680069007300200066006f006e00740020
0074006f0020006300720065006100740065002c00200064006900730070
006c00610079002c00200061006e00640020007000720069006e00740020
0063006f006e00740065006e00740020006100730020007000650072006d
0069007400740065006400200062007900200074006800650020006c0069
00630065006e007300650020007400650072006d00730020006f00720020
007400650072006d00730020006f00660020007500730065002c0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000700072006f0064007500630074002c002000730065007200760069
00630065002c0020006f007200200063006f006e00740065006e00740020
0069006e0020007700680069006300680020007400680069007300200066
006f006e0074002000770061007300200069006e0063006c007500640065
0064002e00200059006f00750020006d006100790020006f006e006c0079
002000280069002900200065006d00620065006400200074006800690073
00200066006f006e007400200069006e00200063006f006e00740065006e
00740020006100730020007000650072006d006900740074006500640020
00620079002000740068006500200065006d00620065006400640069006e
00670020007200650073007400720069006300740069006f006e00730020
0069006e0063006c007500640065006400200069006e0020007400680069
007300200066006f006e0074003b00200061006e00640020002800690069
0029002000740065006d0070006f0072006100720069006c007900200064
006f0077006e006c006f006100640020007400680069007300200066006f
006e007400200074006f002000610020007000720069006e007400650072
0020006f00720020006f00740068006500720020006f0075007400700075
0074002000640065007600690063006500200074006f002000680065006c
00700020007000720069006e007400200063006f006e00740065006e0074
002e00200041006e00790020006f00740068006500720020007500730065
002000690073002000700072006f0068006900620069007400650064002e
000d000d00540068006500200066006f006c006c006f00770069006e0067
0020006c006900630065006e00730065002c002000620061007300650064
0020006f006e00200074006800650020004d004900540020006c00690063
0065006e00730065002000280068007400740070003a002f002f0065006e
002e00770069006b006900700065006400690061002e006f00720067002f
00770069006b0069002f004d00490054005f004c006900630065006e0073
00650029002c0020006100700070006c00690065007300200074006f0020
0074006800650020004f00700065006e00540079007000650020004c0061
0079006f007500740020006c006f00670069006300200066006f00720020
004200690062006c006900630061006c0020004800650062007200650077
0020201c004c00610079006f007500740020004c006f006700690063201d
0020006100730020006a006f0069006e0074006c00790020006400650076
0065006c006f007000650064002000620079002000520061006c00700068
002000480061006e0063006f0063006b00200061006e00640020004a006f
0068006e00200048007500640073006f006e002e0020000d000d00500065
0072006d0069007300730069006f006e0020006900730020006800650072
0065006200790020006700720061006e007400650064002c002000660072
006500650020006f00660020006300680061007200670065002c00200074
006f00200061006e007900200070006500720073006f006e0020006f0062
007400610069006e0069006e00670020006100200063006f007000790020
006f006600200074006800650020004f00700065006e0054007900700065
0020004c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
00720065007700200061006e00640020006100730073006f006300690061
00740065006400200064006f00630075006d0065006e0074006100740069
006f006e002000660069006c00650073002000280074006800650020201c
004c00610079006f007500740020004c006f00670069006300200053006f
006600740077006100720065201d0029002c00200074006f002000640065
0061006c00200069006e00200074006800650020004c00610079006f0075
00740020004c006f00670069006300200053006f00660074007700610072
006500200077006900740068006f00750074002000720065007300740072
0069006300740069006f006e002c00200069006e0063006c007500640069
006e006700200077006900740068006f007500740020006c0069006d0069
0074006100740069006f006e002000740068006500200072006900670068
0074007300200074006f0020007500730065002c00200063006f00700079
002c0020006d006f0064006900660079002c0020006d0065007200670065
002c0020007000750062006c006900730068002c00200064006900730074
007200690062007500740065002c0020007300750062006c006900630065
006e00730065002c00200061006e0064002f006f0072002000730065006c
006c00200063006f00700069006500730020006f00660020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f006600740077006100720065002c00200061006e006400200074006f
0020007000650072006d0069007400200070006500720073006f006e0073
00200074006f002000770068006f006d00200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
00770061007200650020006900730020006600750072006e006900730068
0065006400200074006f00200064006f00200073006f002c002000730075
0062006a00650063007400200074006f002000740068006500200066006f
006c006c006f00770069006e006700200063006f006e0064006900740069
006f006e0073003a000d000d005400680065002000610062006f00760065
00200063006f00700079007200690067006800740020006e006f00740069
0063006500200061006e0064002000740068006900730020007000650072
006d0069007300730069006f006e0020006e006f00740069006300650020
007300680061006c006c00200062006500200069006e0063006c00750064
0065006400200069006e00200061006c006c00200063006f007000690065
00730020006f00720020007300750062007300740061006e007400690061
006c00200070006f007200740069006f006e00730020006f006600200074
006800650020004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065002e000d000d005400480045
00200053004f004600540057004100520045002000490053002000500052
004f0056004900440045004400200027004100530020004900530027002c
00200057004900540048004f00550054002000570041005200520041004e
005400590020004f004600200041004e00590020004b0049004e0044002c
002000450058005000520045005300530020004f005200200049004d0050
004c004900450044002c00200049004e0043004c005500440049004e0047
00200042005500540020004e004f00540020004c0049004d004900540045
004400200054004f0020005400480045002000570041005200520041004e
00540049004500530020004f00460020004d00450052004300480041004e
0054004100420049004c004900540059002c0020004600490054004e0045
0053005300200046004f0052002000410020005000410052005400490043
0055004c0041005200200050005500520050004f0053004500200041004e
00440020004e004f004e0049004e004600520049004e00470045004d0045
004e0054002e00200049004e0020004e004f0020004500560045004e0054
0020005300480041004c004c002000540048004500200041005500540048
004f005200530020004f005200200043004f005000590052004900470048
005400200048004f004c00440045005200530020004200450020004c0049
00410042004c004500200046004f005200200041004e005900200043004c
00410049004d002c002000440041004d00410047004500530020004f0052
0020004f00540048004500520020004c0049004100420049004c00490054
0059002c0020005700480045005400480045005200200049004e00200041
004e00200041004300540049004f004e0020004f004600200043004f004e
00540052004100430054002c00200054004f005200540020004f00520020
004f00540048004500520057004900530045002c00200041005200490053
0049004e0047002000460052004f004d002c0020004f005500540020004f
00460020004f005200200049004e00200043004f004e004e004500430054
0049004f004e00200057004900540048002000540048004500200053004f
0046005400570041005200450020004f0052002000540048004500200055
005300450020004f00520020004f00540048004500520020004400450041
004c0049004e0047005300200049004e002000540048004500200053004f
004600540057004100520045002ea9203230313720546865204d6f6e6f74
79706520436f72706f726174696f6e2e20416c6c20526967687473205265
7365727665642e200d0d486562726577204f70656e54797065204c61796f
7574206c6f67696320636f7079726967687420a920323030332026203230
30372c2052616c70682048616e636f636b2026204a6f686e20487564736f
6e2e2054686973206c61796f7574206c6f67696320666f72204269626c69
63616c20486562726577206973206f70656e20736f7572636520736f6674
7761726520756e64657220746865204d4954204c6963656e73653b207365
6520656d626564646564206c6963656e7365206465736372697074696f6e
20666f722064657461696c732e417269616c20697320612074726164656d
61726b206f6620546865204d6f6e6f7479706520436f72706f726174696f
6e2e4d6f6e6f747970653a417269616c20526567756c617220284d696372
6f736f66742956657273696f6e20372e3030417269616c4d544d6f6e6f74
79706520547970652044726177696e67204f6666696365202d20526f6269
6e204e6963686f6c61732c205061747269636961205361756e6465727320
313938324d6963726f736f667420737570706c69656420666f6e742e2059
6f75206d617920757365207468697320666f6e7420746f20637265617465
2c20646973706c61792c20616e64207072696e7420636f6e74656e742061
73207065726d697474656420627920746865206c6963656e736520746572
6d73206f72207465726d73206f66207573652c206f6620746865204d6963
726f736f66742070726f647563742c20736572766963652c206f7220636f
6e74656e7420696e207768696368207468697320666f6e74207761732069
6e636c756465642e20596f75206d6179206f6e6c792028692920656d6265
64207468697320666f6e7420696e20636f6e74656e74206173207065726d
69747465642062792074686520656d62656464696e672072657374726963
74696f6e7320696e636c7564656420696e207468697320666f6e743b2061
6e6420286969292074656d706f726172696c7920646f776e6c6f61642074
68697320666f6e7420746f2061207072696e746572206f72206f74686572
206f75747075742064657669636520746f2068656c70207072696e742063
6f6e74656e742e20416e79206f74686572207573652069732070726f6869
62697465642e0d0d54686520666f6c6c6f77696e67206c6963656e73652c
206261736564206f6e20746865204d4954206c6963656e73652028687474
703a2f2f656e2e77696b6970656469612e6f72672f77696b692f4d49545f
4c6963656e7365292c206170706c69657320746f20746865204f70656e54
797065204c61796f7574206c6f67696320666f72204269626c6963616c20
48656272657720d24c61796f7574204c6f676963d3206173206a6f696e74
6c7920646576656c6f7065642062792052616c70682048616e636f636b20
616e64204a6f686e20487564736f6e2e200d0d5065726d697373696f6e20
697320686572656279206772616e7465642c2066726565206f6620636861
7267652c20746f20616e7920706572736f6e206f627461696e696e672061
20636f7079206f6620746865204f70656e54797065204c61796f7574206c
6f67696320666f72204269626c6963616c2048656272657720616e642061
73736f63696174656420646f63756d656e746174696f6e2066696c657320
2874686520d24c61796f7574204c6f67696320536f667477617265d3292c
20746f206465616c20696e20746865204c61796f7574204c6f6769632053
6f66747761726520776974686f7574207265737472696374696f6e2c2069
6e636c7564696e6720776974686f7574206c696d69746174696f6e207468
652072696768747320746f207573652c20636f70792c206d6f646966792c
206d657267652c207075626c6973682c20646973747269627574652c2073
75626c6963656e73652c20616e642f6f722073656c6c20636f7069657320
6f6620746865204c61796f7574204c6f67696320536f6674776172652c20
616e6420746f207065726d697420706572736f6e7320746f2077686f6d20
746865204c61796f7574204c6f67696320536f6674776172652069732066
75726e697368656420746f20646f20736f2c207375626a65637420746f20
74686520666f6c6c6f77696e6720636f6e646974696f6e733a0d0d546865
2061626f766520636f70797269676874206e6f7469636520616e64207468
6973207065726d697373696f6e206e6f74696365207368616c6c20626520
696e636c7564656420696e20616c6c20636f70696573206f722073756273
74616e7469616c20706f7274696f6e73206f6620746865204c61796f7574
204c6f67696320536f6674776172652e0d0d54484520534f465457415245
2049532050524f564944454420274153204953272c20574954484f555420
57415252414e5459204f4620414e59204b494e442c204558505245535320
4f5220494d504c4945442c20494e434c5544494e4720425554204e4f5420
4c494d4954454420544f205448452057415252414e54494553204f46204d
45524348414e544142494c4954592c204649544e45535320464f52204120
504152544943554c415220505552504f534520414e44204e4f4e494e4652
494e47454d454e542e20494e204e4f204556454e54205348414c4c205448
4520415554484f5253204f5220434f5059524947485420484f4c44455253
204245204c4941424c4520464f5220414e5920434c41494d2c2044414d41
474553204f52204f54484552204c494142494c4954592c20574845544845
5220494e20414e20414354494f4e204f4620434f4e54524143542c20544f
5254204f52204f54484552574953452c2041524953494e472046524f4d2c
204f5554204f46204f5220494e20434f4e4e454354494f4e205749544820
54484520534f465457415245204f522054484520555345204f52204f5448
4552204445414c494e475320494e2054484520534f4654574152452e004e
006f0072006d0061006c006e0079006f00620079010d0065006a006e00e9
006e006f0072006d0061006c005300740061006e0064006100720064039a
03b103bd03bf03bd03b903ba03ac0041007200690061006c002000690073
00200061002000740072006100640065006d00610072006b0020006f0066
00200054006800650020004d006f006e006f007400790070006500200043
006f00720070006f0072006100740069006f006e002e004d006900630072
006f0073006f0066007400200073007500700070006c0069006500640020
0066006f006e0074002e00200059006f00750020006d0061007900200075
007300650020007400680069007300200066006f006e007400200074006f
0020006300720065006100740065002c00200064006900730070006c0061
0079002c00200061006e00640020007000720069006e007400200063006f
006e00740065006e00740020006100730020007000650072006d00690074
00740065006400200062007900200074006800650020006c006900630065
006e007300650020007400650072006d00730020006f0072002000740065
0072006d00730020006f00660020007500730065002c0020006f00660020
0074006800650020004d006900630072006f0073006f0066007400200070
0072006f0064007500630074002c00200073006500720076006900630065
002c0020006f007200200063006f006e00740065006e007400200069006e
0020007700680069006300680020007400680069007300200066006f006e
0074002000770061007300200069006e0063006c0075006400650064002e
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002e0020
0041006e00790020006f0074006800650072002000750073006500200069
0073002000700072006f0068006900620069007400650064002e000d000a
000d000a00540068006500200066006f006c006c006f00770069006e0067
0020006c006900630065006e00730065002c002000620061007300650064
0020006f006e00200074006800650020004d004900540020006c00690063
0065006e00730065002000280068007400740070003a002f002f0065006e
002e00770069006b006900700065006400690061002e006f00720067002f
00770069006b0069002f004d00490054005f004c006900630065006e0073
00650029002c0020006100700070006c00690065007300200074006f0020
0074006800650020004f00700065006e00540079007000650020004c0061
0079006f007500740020006c006f00670069006300200066006f00720020
004200690062006c006900630061006c0020004800650062007200650077
0020201c004c00610079006f007500740020004c006f006700690063201d
0020006100730020006a006f0069006e0074006c00790020006400650076
0065006c006f007000650064002000620079002000520061006c00700068
002000480061006e0063006f0063006b00200061006e00640020004a006f
0068006e00200048007500640073006f006e002e0020000d000a000d000a
005000650072006d0069007300730069006f006e00200069007300200068
006500720065006200790020006700720061006e007400650064002c0020
00660072006500650020006f00660020006300680061007200670065002c
00200074006f00200061006e007900200070006500720073006f006e0020
006f0062007400610069006e0069006e00670020006100200063006f0070
00790020006f006600200074006800650020004f00700065006e00540079
007000650020004c00610079006f007500740020006c006f006700690063
00200066006f00720020004200690062006c006900630061006c00200048
0065006200720065007700200061006e00640020006100730073006f0063
0069006100740065006400200064006f00630075006d0065006e00740061
00740069006f006e002000660069006c0065007300200028007400680065
0020201c004c00610079006f007500740020004c006f0067006900630020
0053006f006600740077006100720065201d0029002c00200074006f0020
006400650061006c00200069006e00200074006800650020004c00610079
006f007500740020004c006f00670069006300200053006f006600740077
00610072006500200077006900740068006f007500740020007200650073
007400720069006300740069006f006e002c00200069006e0063006c0075
00640069006e006700200077006900740068006f007500740020006c0069
006d00690074006100740069006f006e0020007400680065002000720069
006700680074007300200074006f0020007500730065002c00200063006f
00700079002c0020006d006f0064006900660079002c0020006d00650072
00670065002c0020007000750062006c006900730068002c002000640069
00730074007200690062007500740065002c0020007300750062006c0069
00630065006e00730065002c00200061006e0064002f006f007200200073
0065006c006c00200063006f00700069006500730020006f006600200074
006800650020004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065002c00200061006e00640020
0074006f0020007000650072006d0069007400200070006500720073006f
006e007300200074006f002000770068006f006d00200074006800650020
004c00610079006f007500740020004c006f00670069006300200053006f
0066007400770061007200650020006900730020006600750072006e0069
007300680065006400200074006f00200064006f00200073006f002c0020
007300750062006a00650063007400200074006f00200074006800650020
0066006f006c006c006f00770069006e006700200063006f006e00640069
00740069006f006e0073003a000d000a000d000a00540068006500200061
0062006f0076006500200063006f00700079007200690067006800740020
006e006f007400690063006500200061006e006400200074006800690073
0020007000650072006d0069007300730069006f006e0020006e006f0074
0069006300650020007300680061006c006c00200062006500200069006e
0063006c007500640065006400200069006e00200061006c006c00200063
006f00700069006500730020006f00720020007300750062007300740061
006e007400690061006c00200070006f007200740069006f006e00730020
006f006600200074006800650020004c00610079006f007500740020004c
006f00670069006300200053006f006600740077006100720065002e000d
000a000d000a00540048004500200053004f004600540057004100520045
002000490053002000500052004f00560049004400450044002000270041
00530020004900530027002c00200057004900540048004f005500540020
00570041005200520041004e005400590020004f004600200041004e0059
0020004b0049004e0044002c002000450058005000520045005300530020
004f005200200049004d0050004c004900450044002c00200049004e0043
004c005500440049004e004700200042005500540020004e004f00540020
004c0049004d004900540045004400200054004f00200054004800450020
00570041005200520041004e00540049004500530020004f00460020004d
00450052004300480041004e0054004100420049004c004900540059002c
0020004600490054004e00450053005300200046004f0052002000410020
0050004100520054004900430055004c0041005200200050005500520050
004f0053004500200041004e00440020004e004f004e0049004e00460052
0049004e00470045004d0045004e0054002e00200049004e0020004e004f
0020004500560045004e00540020005300480041004c004c002000540048
004500200041005500540048004f005200530020004f005200200043004f
005000590052004900470048005400200048004f004c0044004500520053
0020004200450020004c004900410042004c004500200046004f00520020
0041004e005900200043004c00410049004d002c002000440041004d0041
0047004500530020004f00520020004f00540048004500520020004c0049
004100420049004c004900540059002c0020005700480045005400480045
005200200049004e00200041004e00200041004300540049004f004e0020
004f004600200043004f004e00540052004100430054002c00200054004f
005200540020004f00520020004f00540048004500520057004900530045
002c002000410052004900530049004e0047002000460052004f004d002c
0020004f005500540020004f00460020004f005200200049004e00200043
004f004e004e0045004300540049004f004e002000570049005400480020
00540048004500200053004f0046005400570041005200450020004f0052
002000540048004500200055005300450020004f00520020004f00540048
004500520020004400450041004c0049004e0047005300200049004e0020
00540048004500200053004f004600540057004100520045002e004e006f
0072006d00610061006c0069004e006f0072006d00e1006c006e0065004e
006f0072006d0061006c0065005300740061006e00640061006100720064
041e0431044b0447043d044b0439004e0061007600610064006e006f0074
006801b001a10300006e00670041007200720075006e007400610000b154
85410b032c032c032c0222001d001f032b032a003c001f032ab2061d1fb8
0328b326181fd0bc032900e0032900020329b22b1d1fb90327031db23b1f
40b80323b31215320f412d03200001002f0320000100200320006f032000
af032000bf03200004005f031e00010010031e007f031e0080031e00af03
1e00bf031e00d0031e00060000031e0010031e0020031e006f031e009f03
1e00e0031e0006031d031cb2201f1041270319007f03190002000f031700
ef031700ff03170003001f0317002f0317004f0317005f0317008f031700
9f03170006000f0317005f0317006f0317007f031700bf031700f0031700
0600400317b2923340b80317b28b3340b80317b36a6c3240b80317b26133
40b80317b35c5d3240b80317b357593240b80317b34d513240b80317b344
493240b80317b23a3340b80317b331343240b80317b32e423240b80317b3
272c3240b80317b312253280b80317b30a0d32c04116031600d003160002
00700316000102c4000f0101001f00a0031500b0031500020306000f0101
001f00400312b32426329fbf03040001030203010064001fffc00301b20d
1132410a02ff02ef0012001f02ee02ed0064001fffc002edb30e11329f41
4a02e200af02e200bf02e2000302e202e202e102e1007f02e00001001002
e0003f02e0009f02e000bf02e000cf02e000ef02e0000602e002e002df02
df02de02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf02dd00
ef02dd000702dd02dd001002dc0001000002dc0001001002dc003f02dc00
0202dc02dc001002db000102db02db000f02da000102da02daffc002d3b2
373932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2171b32
b9ffc002d3b2121632b802d2b2f9291fb90326031cb23b1f40bb0322003e
00330322b225311fb80318b23c691fb802e3b3202b1fa0413002d400b002
d40002000002d4001002d4002002d4005002d4006002d4007002d4000600
6002d6007002d6008002d6009002d600a002d600b002d60006000002d600
1002d6002002ca002002cc002002d6003002d6004002d6005002d6000802
d0b2202b1fb802cfb226421f411602ce02c70017001f02cd02c80017001f
02cc02c60017001f02cb02c50017001f02c902c5001e001f02ca02c6b21e
1f00410b02c6000002c7001002c6001002c7002f02c5000502c1b324121f
ff411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf008f02
bf000602bf0222b2641f12410b02bb00ca0800001f02b200e90800001f02
a600a20800406a1f4026434932402043493240263a3d3240203a3d329f20
9f26024026969932402096993240268e923240208e92324026848c324020
848c3240267a813240207a813240266c763240206c76324026646a324020
646a3240265a5f3240205a5f3240264f543240204f5432b8029eb724271f
374f6b0120410f0277003002770040027700500277000402770277027700
f90400001f029bb22a2a1fb8029a402b292a1f80ba0180bc0180520180a2
01806501807e01808101803c01805e01802b01801c01801e0180400180bb
0138000100800140b40180400180bb013800010080013940180180ca0180
ad018073018026018025018024018020013740b80221b2493340b80221b2
453340b80221b341423240b80221b33d3e320f410f0221003f0221007f02
21000300bf022100cf022100ff0221000300400221b320223240b80221b3
191e3240b80222b32a3f3240b80221b32e3a326f414a02c3007f02c3008f
02c300df02c30004002f02c3006002c300cf02c30003000f02c3003f02c3
005f02c300c002c300ef02c300ff02c3000600df02220001008f02220001
000f0222002f0222003f0222005f0222007f022200ef0222000600bf0221
00ef02210002006f0221007f022100af02210003000f0221002f0221003f
0221004f0221000402c302c30222022202210221401d101c102b1048038f
1c010f1e014f1eff1e023700161600000012110811b8010db6f70df8f70d
00094109028e028f001d001f0290028f001d001f028fb2f91d1fb80198b2
26bb1f41150197001e0401001f013900260125001f013800730401001f01
35001c0801001f0134001c02ab001f0132b21c561fb8010fb2262c1fba01
0e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b21fd5
1cb802abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b80201b6
1fb91c381fadcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c471f
6b1cb80401b21f6526b8019ab21f5e73b80401400f1f52265a1f481c891f
441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b61f30
1cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b41f3555
5537b80168402c07960758074f07360732072c0721071f071d071b071408
120810080e080c080a080808060804080208000814b8ffe0402b00000100
140610000001000604000001000410000001001002000001000200000001
000002010802004a00b013034b024b5342014bb0c063004b6220b0f65323
b8010a515ab005234201b0124b004b5442b0382b4bb807ff52b0372b4bb0
07505b58b101018e59b0382bb00288b801005458b801ffb101018e851bb0
124358b900010111858d1bb900010128858d5959001816763f183f123e11
3946443e113946443e113946443e113946443e11394660443e1139466044
2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1d42b0964b
5358b235aaaa1d4259b0324b5358b235ffff1d42594bb09353205c58b901
f201f04544b901f101f045445958b9033e01f2455258b901f2033e445959
4bb8015653205c58b9002001f14544b9002601f145445958b9081e002045
5258b90020081e4459594bb8019a53205c58b9002501f24544b9002401f2
45445958b909090025455258b9002509094459594bb8040153205c58b173
244544b1242445445958b917200073455258b9007317204459594bb80401
53205c58b1ca254544b1252545445958b9168000ca455258b900ca168044
59594bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9
001c011a4459594bb05653205c58b11c1c4544b12f1c45445958b9018900
1c455258b9001c01894459594bb8030153205c58b11c1c4544b11c1c4544
5958b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65
422b2b01b33b59635c456523456023456560234560b08b766818b0806220
20b163594565234520b003266062636820b003266165b059236544b06323
4420b13b5c4565234520b003266062636820b003266165b05c236544b03b
2344b1005c455458b15c406544b23b403b4523614459b347503437456523
456023456560234560b089766818b080622020b134504565234520b00326
6062636820b003266165b050236544b034234420b147374565234520b003
266062636820b003266165b037236544b0472344b10037455458b1374065
44b24740474523614459004b5342014b5058b108004259435c58b1080042
59b3020b0a124358601b2159421610703eb0124358b93b21187e1bba0400
01a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400040000
0b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59
b0102342b0112342002b7475737500184569444569444569447373737374
757374752b2b2b2b74752b2b2b2b2b737373737373737373737373737373
737373737373737373732b2b2b45b0406144737400004bb02a534bb03f51
5a58b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc060
4459004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c
515a58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b752b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b
5402b0124b545ab012435c5a58ba009f02220001007359002b7473012b01
732b2b2b2b2b2b2b2b737373732b2b2b2b2b002b2b2b2b2b2b0045694473
456944734569447374754569447345694445694445694473744569444569
44732b2b2b2b2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b73
7475732b7374757374752b2b2b742b002b2b2b00184569442b5c58410e03
36032f0041001f0330032f002d001f032d032f0032001f0332032f401226
1f0302371f0908371f0b0a441f0706441f2b2b2b2b2b2b2b2b592b0000>
[15133 10267 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 8592 69 <00020086ffe8041f05ba0010001d0212b0852b58407b01050c0f24053505
4505053f1fb01f021f1f221c331c421c701f901f063a133c163c1a4c164c
1a5d085d0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e2
13ec17ec19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605
da1df504fa100c10150e040602001b1c0607010a151c0e0b184110fff800
0d000d014000560018fff4000c000c014000560018fff2000b000b014040
22561824d00b01100b400b600b800b041f400d0d02550b0c0f0f02550b18
0d0d02550bb8fff6b40c0c02550bb8fff0b40b0b06550bb8fff4b40f0f06
550bb8ffe0b40c0c06550bb8fff4400b0d0d06550b740111020d0db80140
b45611080c0cb80140b656113300120b0bb80140b45600040d0db8014040
135600040c0c025500040d0d06550033030c0c0cb80140b45603080d0db8
014040195603250202c001019001a001b001f001041f013f014f010301b8
fffeb41010025501b8fffc401d0e0e0255010c0d0d025501100c0c025501
120b0b0255010c0b0b065501b8fff8b41010065501b8fffc40160f0f0655
01180c0c065501140d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b
2b2b5d71723c4d10fd2b2bf42b2b2b2be42b2b10fd2b2b2b2b2b2b2b2b5d
71ed2b2b2b003fed3f3fed3f11391112393130005d015d717200711bb401
0a100e15b8032fb56c0e0b04061bb8032fb46c0607020000183f3f2b393f
2b323f30315921231133113633321e021510002322270314171633323635
3426232206012da7b472b162af7140fef2bdbc6b0234559176aca57576ac
05bafdf58f4f8fca73feeffed69d0196bf558bcdcbd0c6cd>OMZAAA+ArialMT AddT42Char 
2 9216 70 <00010050ffe803ed043e001a0261b0852b58bc0017fff0000c000c0140b4
560a080c0cb80140b45609080c0cb80140b4560f080c0cb80140b4561008
0c0cb80140b45611080c0cb901400056b1020243545840340e7f0f010f0b
01400050007000030004121c0b07181c040b010e1507080e0e0255070c0d
0d0255070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10
c45d3210c45d3231301b4047090c011f1c4313431753135317601360179b
029b039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509
b60ab50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa40263000
40005000600070009000a000e000f00009000f0f0b000004121c0b07181c
040b1c0f010f410afff4000c000c01400056000ffff2000b000b0140400f
560f240e080d0d06550e221b000100410afff4000c000c014000560000ff
ee000b000b0140400f5600240b2b1f010100010101400e2bb80140b45601
400d0db80140b45601400c0cb80140b45601360b0bb8014040205601400b
0b065501401010065501480c0c0655011a0d0d065501491c15080d0db801
40b456150c0c0cb80140b456150e0b0bb801404021561524cf07011f073f
0702070e0b0b0655070a1010065507120c0c0655070c0d0db80140b45607
0c0c0cb80140b65607311b34c4182b10f62b2b2b2b2b5d71ed2b2b2b10f6
2b2b2b2b2b2b2b2b5d724b53234b515a58b90001ffc03859ed2b2b72f42b
ed2b2b72003fed3fed12392f11392f105de4105de43130005d71015d7159
012b2b2b2b2b2b1b400a010000120e0f0f120418b8032fb46c040b0b12b8
032fb26c0b0700183f2b3f2b11392f3311392f3330315901170606232200
1134123633321617072626232206151416333236033cb11defaedafef772
e989addc1faf197f5a88aaa4846a8e018517b7cf011d010aac010281afa1
1b6b6cc3d3d6c282>OMZAAA+ArialMT AddT42Char 
2 11182 76 <000200880000013c05ba00030007020ab0852b58b3020a0b0bb80140b456
030a0b0bb80140b456060a0b0bb80140b456070a0b0b4119014000560001
fffc000b000b014000560000fffc000b000b014000560005fffc000b000b
014000560004fffc000b000b0140b456020b0c0cb80140b456030b0c0cb8
0140b456060b0c0cb80140b456070b0c0c4119014000560001fffd000c00
0c014000560000fffd000c000c014000560005fffd000c000c0140005600
04fffd000c000c0140b45602040d0db80140b45603040d0db80140b45606
040d0db80140b45607040d0d4119014000560001fffc000d000d01400056
0000fffc000d000d014000560005fffc000d000d014000560004fffc000d
000d014040375609360b0b02554f099009a009b009c009df09f009070009
1f09700980099f09b009c009df09e009ff090a1f09010001070402030906
03bbffc0000d000d0140402a56037e0100060506040a0607250500049f04
a004b004c004e00406c004f0040200042004d004e0040404b8fff8b41010
025504b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b0655
04b8ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e
084750182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed2b0111
123939111239393130015d72712b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b1bb7040a05060040010000183f1acd3f3f3031591335
33150311331188b4b4b404ebcfcffb150426fbda>OMZAAA+ArialMT AddT42Char 
2 12582 79 <000100830000013705ba00030181b0852b58b3020a0b0bb80140b456030a
0b0b410d014000560001fffc000b000b014000560000fffc000b000b0140
b456020b0c0cb80140b456030b0c0c410d014000560001fffd000c000c01
4000560000fffd000c000c0140b45602040d0db80140b45603040d0d410d
014000560001fffc000d000d014000560000fffc000d000d0140b7560536
0b0b025505b8ffc0b337383405b8ffc0b334353405b8ffc0b330313405b8
ffc0b322253405b8ffc040251517340f051f059f05df05044f05df05f005
031f0570058005ff05040100000a0203250100b8ffc0b337383400b8ffc0
40153335349f0001c000f0000200002000d000e0000400b8fff8b4101002
5500b8fffa401d0e0e025500040c0c0255000a0b0b025500140b0b065500
081010065500b8fffeb40d0d065500b8ffffb40c0c065500b8fffc400a0c
0c0655004e044750182b10f62b2b2b2b2b2b2b2b2b5d71722b2b3cfd3c00
3f3f3130015d71722b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b1bb3000a
010000183f3f3031593311331183b405bafa4600>OMZAAA+ArialMT AddT42Char 
3 3048 92 <00010021fe5103ee0426001a02c5b0852b58b30f180d0db80140b456140c
0d0db80140b456150c0d0db80140b456160c0d0db80140b4560f040d0dbe
014000560012fff4000d000d0140b4560e0c0d0db80140b4560d0c0d0db8
0140b4560c0c0d0db80140b4560f0c0c0cb80140b4560e0c0c0cb80140b4
560d0c0c0cb80140b4560c0c0c0cbe014000560012fff2000b000b0140b4
560c0e0b0bb901400056b10202435458401d0a140f030b031c190f12060b
061340120f200b400c200f180f0f02550f192f2b1add1a18cd1a1910dd1a
18cd003f3f3fed12173931301bb30f1c010fb8ffde40731c392814560faf
0a03400d400f020f202830341020283034070c0912160d1812270b270c27
0d360c360d350e99110b2812281348165912591359156912691369157906
760d79117a147a15850d8a118c128c138914980aa80bbc10bb11ba14ea0a
e714f50dfd10f914ff1c1e1213180e0e4255b106024354584016130b1c1b
040f440f840f030f190b031c190f12060b06003f3f3fed1112395d011112
39391b40370f0f0c101112120a00031914131325120a1412120a0f0c0f11
0c250b0a140b0b0a1312120c0c0b06031c190f001c101c022f1cbf1c021c
b8023fb50f1340124014b80254400b3f124012025f12bf120212b80142b6
0f012200451b0ab8025440120f200b4040200c300c4f0c03500cff0c020c
b80142b32f0f010fb8023fb41b207c66182b1a1910fd71f45d711a18ed1a
1910ed1810f4e41910e45d71ed1a1810ed1910e45d7100183fed3f3c103c
103c87052e2b087d10c487052e182b0e7d10c400111239870e103c3c08c4
4bb00e534bb018515ab00243b040505a58bb000cffe8000bffe801383859
592b313001435c58b90014ffdeb637390a2237390eb8ffe8b51539112215
392b2b2b2b595d712b2b00715d2b015d592b2b2b2b2b2b2b2b2b2b2b2b2b
2b002b1bb11903b80333400a6c190f0f0a0a12060b0600183f3f3f333f2b
303159132716333236373637363701331316173637133301060706062322
7f143b2c3c48171126050bfe6dc2dd2b221f2be3b4fe6c4124307c5634fe
67a91028241b6b0f1d0428fd9975817c76026bfbc8af42595300>OMZAAA+ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070042b40201e40607b802994013000504
e403000a0704e4010019080605e40203bc023100090199012e00182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>OMZAAA+ArialMT AddT42Char 
OMZAAA+ArialMT /CharStrings get begin
/b 69 def
/c 70 def
/i 76 def
/l 79 def
/y 92 def
end
OMZAAA+ArialMT /Encoding get
dup 98 /b put
dup 99 /c put
dup 105 /i put
dup 108 /l put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/BKUHZK+ArialMT /OMZAAA+ArialMT findfont ct_VMDictPut
/BKUHZK+ArialMT*1 
[98{/.notdef}rp /b /c 5{/.notdef}rp /i 2{/.notdef}rp /l 12{/.notdef}rp 
/y 134{/.notdef}rp]
BKUHZK+ArialMT nf
BKUHZK+ArialMT*1 [13.56 0 0 -13.56 0 0 ]msf
26.5552 18.7921 mo
(bicycl)
[7.53936 3.01031 6.83421 6.60371 6.82056 0 ]xsh
grestore
gsave
6.03922 21.702 mo
88.4792 21.702 li
88.4792 6.078 li
6.03922 6.078 li
cp
eclp
%ADOBeginSubsetFont: OMZAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BKUHZK+ArialMT gcheck setglobal} if
2 10540 72 <0002004bffe8041e043e0015001d0216b0852b5840171f001c150255035d
055d09550b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d
0d06551d1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c
51125c19521c61126d1a611c78067815f602f618100016010f0d17175016
6016701603161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b410
10025501b8ffc0400e101006551001010195131c040b174110fff0000c00
0c014000560017fff2000b000b014000560017fff8000d000d0140b35617
400db8ffdcb40d0d02550db8ffeeb40d0d06550db8ffeab40c0c06550db8
ffc04009272a34b00d010d1a1fb8ffc0b32526341fb8ffc0b71e2334301f
011f16bbfffc000d000d0140b656163310080c0cb80140b456100e0b0bb8
0140b45610080d0db8014040135610240740242a341f073f074f0703070c
0c0cb80140b456070c0d0db80140402b5607200b0b025507180c0c025507
1c0d0d0255070e0b0b0655071c0c0c065507160d0d065507191e3437182b
4e10f42b2b2b2b2b2b2b2b5d2b4dfd2b2b2be42b4e10712b2bf6712b2b2b
2b4ded2b2b2b003fedfd5d2b2be43fed12392f5d3cfd713c011112393912
393130015d005d2b2b2b0171721b401d0000500070008000900005300070
0080009000c000d000060000041016b8032f400d6c100010301002130310
0a0413b8032fb46c040b0a1bb8032fb26c0a0700183f2b3f2b12395f5e5d
2f2b11332f5d713031590117060623220011100033320011140721161633
32360121262726232206035eba2ceeb9e9feef0114dcd5010e01fce80ab2
85638cfdda02510c3856897ca9015617a3b4011f0103010c0128fedefef9
1020afba680195864368a600>BKUHZK+ArialMT AddT42Char 
BKUHZK+ArialMT /CharStrings get begin
/e 72 def
end
BKUHZK+ArialMT /Encoding get
dup 101 /e put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BKUHZK+ArialMT*1 
[98{/.notdef}rp /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l 12{/.notdef}rp /y 134{/.notdef}rp]
BKUHZK+ArialMT nf
BKUHZK+ArialMT*1 [13.56 0 0 -13.56 0 0 ]msf
60.3952 18.7921 mo
(e)sh
grestore
gsave
6.03922 21.702 mo
88.4792 21.702 li
88.4792 6.078 li
6.03922 6.078 li
cp
eclp
%ADOBeginSubsetFont: BKUHZL+DengXian-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (BKUHZL+DengXian-GBK-EUC-H)
%%Title: (BKUHZL+DengXian-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /BKUHZL+DengXian-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
28595 <001C60D8A8C9B8581AA5> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /BKUHZL+DengXian-GBK-EUC-H-Identity-H /Identity-H 0 [/BKUHZL+DengXian-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/BKUHZL+DengXian-GBK-EUC-H-Identity-H findfont [10.56 0 0 -10.56 0 0 ]msf
67.8352 18.7921 mo
(o\263)sh
grestore
gsave
88.9552 21.702 mo
171.419 21.702 li
171.419 6.078 li
88.9552 6.078 li
cp
eclp
%ADOBeginSubsetFont: OMZAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BKUHZK+ArialMT gcheck setglobal} if
3 2530 88 <00010083ffe803e00426001801b7b0852b58b9001affc040091517340220
1316340fb8fff040191214342b1301240813160c0113160b06000a111c03
0b0033164110fff8000d000d014000560016fff2000b000b014000560016
fff4000c000c0140401c5616251817403336341a40101002551728101002
5517120e0e025517b8ffec400b0d0d025517040c0c025517b8fff4400b0b
0b065517141010065517b8fff8400b0d0d0655170c0f0f065517b8fff640
0d0c0c0655ff1701c01701174e1ab8ffc04016343634b01af01a02701aa0
1ab01aff1a041a0c080d0db80140b4560c0e0b0bb80140b4560c0c0c0cb8
0140b3560c2509b8ffc04010333634f0090100092009d009e0090409b8ff
f8b41010025509b8fff840110e0e025509040c0c0255090a0b0b065509b8
fff640160f0f065509020c0c065509020d0d0655094e194750182b10f62b
2b2b2b2b2b2b5d712bed2b2b2b105d712bf65d712b2b2b2b2b2b2b2b2b2b
2b3cfd2b2b2be4003fed3f3f3c39390111123931304379401a04100e0d0f
0d0206070806080508030610040c1b000d08111b00002b012b2a2a81005d
012b2b2b1bb4000a010311b80330b66c030b16060a0600183f3f3f2b323f
30315921350623222626272635113311141716163332363635113311033f
7cd55ea34f100bb40b116e51518e3bb49cb4486d4f35730292fdb38d3147
51538f880239fbda>BKUHZK+ArialMT AddT42Char 
BKUHZK+ArialMT /CharStrings get begin
/u 88 def
end
BKUHZK+ArialMT /Encoding get
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BKUHZK+ArialMT*1 
[98{/.notdef}rp /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l 8{/.notdef}rp /u 3{/.notdef}rp /y 134{/.notdef}rp]
BKUHZK+ArialMT nf
BKUHZK+ArialMT*1 [13.56 0 0 -13.56 0 0 ]msf
119.345 18.7921 mo
(bu)
[7.56004 0 ]xsh
grestore
gsave
88.9552 21.702 mo
171.419 21.702 li
171.419 6.078 li
88.9552 6.078 li
cp
eclp
%ADOBeginSubsetFont: OMZAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BKUHZK+ArialMT gcheck setglobal} if
3 890 86 <0001003fffe803b1043e0030041eb0852b58b3170e0b0bb80140b456180e
0b0bb80140b456190e0b0b4137014000560028fff4000c000c0140005600
27fff4000c000c014000560026fff4000c000c014000560025fff4000c00
0c014000560024fff4000c000c014000560023fff4000c000c0140005600
22fff4000c000c014000560021fff4000c000c014000560020fff4000c00
0c0140407c56042214223a094a094424562265227c098e098424a613ab2c
c2030d09171a1817304b2cd617051b025502021032010a185c085c095c0a
5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426b4270f27262427242936
245a0a590b64266428742374248024930a9c0c9228972c9530a40aa90ca3
27a428b326c5261628b8fff4b40d0d065522b8fff4b40d0d065523b8fff4
b40d0d065524b8fff4b40d0d065528b8fff4b40c0c065522b8fff4b40c0c
065523b8fff4b40c0c065524b8fff4b40c0c06551db8ffde40121e395a08
27250c0a041a202615040b2e1d1ab802aa4022192c0b0b02551f193f194f
195f19af19cf19060f191f196f19df19041f198f190219bd025500150000
02aa0001ffc040140b0b025510014001021001d00102000110010201b8ff
c0b314163401b8ffc040100e113401012e5c1d6c1d021d1c150704b8fff4
b40b0b025504b8ffe6b41010065504b8ffe640130f0f0655041c2e0b1f1a
011a24194013183432b8ffc040320f0f025519180f0f025519180d0d0255
19160c0c025519201010065519200f0f065519100c0c065519160d0d0655
19160c0c4109014000560019025b0007fff2000b000b0140b35607242ab8
ffc0b51c39d02a012ab8ffe6b40c0c02552ab8ffe8b40f0f02552ab8ffe8
b40c0c06552ab8ffeab40d0d06552abbfff4000c000c0140b3562a1a32b8
ffc04021272a346032c032023f3280320232100101012400180d0d025500
100d0d06550020b8fff4b40d0d025520b8fff4b41010065520b8fff4b70f
0f0655200e0b0bb8014040165620240f100b0b02550f160c0c02550f200d
0d02550fb8fffa40140f0f02550f0e0c0c06550f0c0d0d06550f060c0cb8
01404011560f22df00013f004f00020019313437182b4e10f45d714df42b
2b2b2b2b2b2bed2b2b2b2b102b2bed724e105d712bf62b2b2b2b2b712b4d
ed2bf42b2b2b2b2b2b2b2b2b2bed72003fed2b2b2b3fed7112392f2b2b5d
71722be410fd5d71722be41112391112390111121739313043794040272d
1e2305142c261110121013100306220d201b000928071b01052d071b011e
14201b00210e231b0022230d0c08290a1b012827090a062b041b001f101d
1b01002b2b103c103c2b103c103c2b012b2b2b2b2a2b818181002b2b2b2b
2b2b2b2b2b5d71015d72715d002b2b2b2b2b2b2b2b2b012b2b2b1b400a00
01011d0b26261d2e04b8032fb76c2e0b191a1a151db8032fb26c15070018
3f2b322f333f2b1139113311392f33303159133716163332363534272627
2e023534363736363332161617072626232206151417161716171e021514
06062322263fb20f897b7c78352593c6994f41382a91537dbd5a11b00c73
697c6a16162f1b84bf975669c67dcfd9013d1c6b7265443d231825324981
4e4779281f2b487b6718525c5237231c1d130a2433417c5c5a9f57ac>BKUHZK+ArialMT AddT42Char 
BKUHZK+ArialMT /CharStrings get begin
/s 86 def
end
BKUHZK+ArialMT /Encoding get
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BKUHZK+ArialMT*1 
[98{/.notdef}rp /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l 6{/.notdef}rp /s /.notdef /u 3{/.notdef}rp /y 134{/.notdef}rp]
BKUHZK+ArialMT nf
BKUHZK+ArialMT*1 [13.56 0 0 -13.56 0 0 ]msf
134.345 18.7921 mo
(s)sh
grestore
gsave
88.9552 21.702 mo
171.419 21.702 li
171.419 6.078 li
88.9552 6.078 li
cp
eclp
/BKUHZL+DengXian-GBK-EUC-H-Identity-H findfont [10.56 0 0 -10.56 0 0 ]msf
141.065 18.7921 mo
(o\263)sh
grestore
gsave
172.025 21.702 mo
254.489 21.702 li
254.489 6.078 li
172.025 6.078 li
cp
eclp
%ADOBeginSubsetFont: OMZAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BKUHZK+ArialMT gcheck setglobal} if
2 12992 80 <0001008700000626043e0023036fb0852b5841920013fff2000b000b0140
00560010fff2000b000b014000560012fff2000b000b014000560011fff2
000b000b01400056001dfffc000d000d01400056001cfffc000d000d0140
0056001bfffc000d000d01400056001afffc000d000d01400056001dfffc
000c000c01400056001cfffc000c000c01400056001bfffc000c000c0140
0056001afffc000c000c01400056000cfffe000c000c01400056000dfffe
000c000c01400056000efffe000c000c01400056000ffffe000c000c0140
00560013fff2000c000c014000560010fff2000c000c014000560012fff2
000c000c014000560011fff2000c000c014000560013fff8000d000d0140
00560010fff8000d000d014000560012fff8000d000d014000560011fff8
000d000d01400056000dfff4b40d0d065508b8fff4b40d0d065509b8ffd8
404d0b0d342504e404e409e117e52005d505f620021708202309181b2009
0303231e1c06151c0b0b06070106231a19100ad025019025a02502251717
1a0e2590110111041010025511180f0f025511b8ffec400b0e0e02551114
0c0c025511b8ffe840170b0b025511020b0b0655110c1010065511060f0f
065511b8fffab40c0c065511b8fff8b40d0d065511b8015db318080c0cb8
0140b456180e0b0bb80140b45618040d0db80140400d561825901b011b18
0f0f02551bb8ffec400b0e0e02551b140c0c02551bb8ffee40110b0b0255
1b040b0b06551b0a101006551bb8fffe400b0d0d06551b0c0f0f06551bb8
fffcb40c0c06551bb8015db6000233230e0b0bb80140b45623080d0db801
40b456230c0c0cb80140401456232501d000019000a000021f003f004f00
0300b8fffe401d0e0e025500100d0d025500100c0c0255000c0b0b025500
160b0b065500b8fffcb41010065500b8fff440140f0f0655000a0c0c0655
000e0d0d065500192425b80178b3214750182b2b4ef42b2b2b2b2b2b2b2b
2b5d71723c4dfd2b2b2be410f42b2b2b2b2b2b2b2b2b5ded2b2b2bf42b2b
2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f3f3c4d10ed10ed
11173901111239123931304379400e0c141326140c111b01120d151b0100
2b012b2b81015d005d2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b1b400a100a1a0a000a01060b15b80330b66c0b07090306
1eb80330b26c060700183f2b32323f2b3f3f3f3f30315933113315363633
321617363332161511231134262623220615112311342623220606151187
a132a66a76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258
baafb6fd27029d6c5f3a95a4fd9702b27878509a91fdd900>BKUHZK+ArialMT AddT42Char 
2 14534 82 <00020044ffe80427043e000d001901ffb0852b58b615180d0d065513b8ff
e8b40d0d06550fb8ffe840650d0d065519180d0d065512070a190c470648
0856065908670669080834103a123a16351845104b124b1645185c055c09
52105d125d1652186d056d0964106d126d1664187701150906050d5b0354
05540a5b0c6c036505650a6c0c0a171c0407111c0b0b144110fff2000b00
0b014000560014fff4000c000c014000560014fff8000d000d0140401056
14241b400d0d02551b400b0b025507b8ffea40110f0f025507180d0d0255
07100b0b025507b8fff0b40b0b065507b8fff0b40d0d065507b8fff0b40f
0f065507b8fff0b40c0c065507b8ffc0400e242534300701000710072007
0307bbfff4000d000d0140b6560731df1b011bb8ffc0400b1e2334301b01
1b0e080d0db80140b4560e0c0c0cb80140b4560e0e0b0bb801404041560e
24000c0e0f025500120d0d0255000c0c0c0255001c0b0b0255000e0b0b06
55000e0d0d0655000c1010065500160c0c065500402425341f003f000200
0c0d0db80140b456000c0c0cb80140b456000c0b0bb80140b65600311a34
37182b10f62b2b2b5d2b2b2b2b2b2b2b2b2bed2b2b2b10712b5df62b5d5d
2b2b2b2b2b2b2b2b2b2bed2b2b2b003fed3fed313001715d0071435c5840
09530553096205620904015d59002b2b2b2b1bb10b11b8032fb46c0b0b04
17b8032fb26c040700183f2b3f2b30315913103736333200151406062322
0013141633323635342623220644a489c5db01167beb8bdffeedb9b28786
b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca>BKUHZK+ArialMT AddT42Char 
3 566 85 <00010085000002c6043e00110107b0852b58403b2f130110040123043404
4304530466047404060911080908090d1311090d000308010b1c06070106
000a09289008010822201301130222110e0b0bb80140b45611080d0db801
40b456110c0c0cb80140b45611250100b8ffc04010333634f00001000020
00d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c02
5500060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c
065500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfd
2b2b2be4105df472e4003f3f3fed11393911393901111239390010c9870e
7dc43130005d72015d1bb7000a01060903060bb80336b26c060700183f2b
32323f3f30315933113315363633321707262322060706151185a23e693f
5b5e3e42423b5e141e0426a171483aa727473f6072fdd400>BKUHZK+ArialMT AddT42Char 
3 2088 87 <00010024fff2022a05990017016eb0852b584120000cfffe000c000c0140
0056000bfffe000c000c014000560008fffe000c000c014000560007fffe
000c000c014000560006fffe000c000c01400056000affc0b323263409b8
ffc0402423263480190100010c0d0a0103001610092b0f0a06161c030b0f
10220022010d12080d0db80140b456120e0b0bb80140b456120a0c0cb801
4040225612250c01ff070845094560077007800790070400072007a007b0
07c007d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e
0e025507b8fff8b40d0d025507b8fff8b40c0c025507b8fffab410100655
07b8fff0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00
180136b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd2b2b2b3c
10e4f43c003fed3f3cfd3c1139123911333310c93130015d2b2b2b2b2b2b
2b1bb10316b80332b46c030b0100b8033240096c010a0d0d110e0a09b803
2db26c0a0600183f2b3332322f3f2b3f2b30315925170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>BKUHZK+ArialMT AddT42Char 
BKUHZK+ArialMT /CharStrings get begin
/m 80 def
/o 82 def
/r 85 def
/t 87 def
end
BKUHZK+ArialMT /Encoding get
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BKUHZK+ArialMT*1 
[98{/.notdef}rp /b /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp 
/l /m /.notdef /o 2{/.notdef}rp /r /s /t 
/u 3{/.notdef}rp /y 134{/.notdef}rp]
BKUHZK+ArialMT nf
BKUHZK+ArialMT*1 [13.56 0 0 -13.56 0 0 ]msf
180.545 18.7921 mo
(motorcycl)
[11.2954 7.53937 3.72891 7.53934 4.46118 6.82077 6.6037 6.82077 0 ]xsh
grestore
gsave
172.025 21.702 mo
254.489 21.702 li
254.489 6.078 li
172.025 6.078 li
cp
eclp
BKUHZK+ArialMT*1 [13.56 0 0 -13.56 0 0 ]msf
238.405 18.7921 mo
(e)sh
grestore
gsave
172.025 21.702 mo
254.489 21.702 li
254.489 6.078 li
172.025 6.078 li
cp
eclp
/BKUHZL+DengXian-GBK-EUC-H-Identity-H findfont [10.56 0 0 -10.56 0 0 ]msf
245.845 18.7921 mo
(o\263)sh
grestore
gsave
254.965 21.702 mo
337.405 21.702 li
337.405 6.078 li
254.965 6.078 li
cp
eclp
%ADOBeginSubsetFont: OMZAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BKUHZK+ArialMT gcheck setglobal} if

2 0 3 <> BKUHZK+ArialMT AddT42Char 
2 11742 78 <00010088000003f805ba000b0312b0852b58b3030e0b0b41130140005600
09fff2000b000b014000560008fff2000b000b014000560004fff2000b00
0b0140b456070c0c0cb80140b456060c0c0cb80140b456050c0c0cb80140
401c56060c0d0d0655070656065a09030f0df305f60603090c1010025506
b8fff4b40c0c02550ab8fff4b40c0c025509b8fff4b40c0c025503b8ffe8
40100d0d06555503770a0212062013213408b8fff0b312273409b8fff0b4
1227341205b8fff0b312213409b8fff04084122734060404050406370947
040525062d0a580a7703750ada03e30607a6060123062607250839063809
3f0d4f0d59045906580759097d0479059909c606d204d606e406e907f706
f90815120a0a05030304020606070909080a0a0509080825070614070706
03040425050a1405050a0a09060304080102000405060708080b0b000a04
b8010f400905040c0c0655052208b8010f401520073f070207100c0c0655
071a900d010d0b0e0b0bb80140b4560b080d0db80140b4560b0c0c0cb801
40b7560b2500020e0b0bb80140b45602080d0db80140b456020c0c0cb801
40400e56022501019000013f004f000200b8fffe40310e0e025500100d0d
025500100c0c0255000a0b0b025500120b0b065500120c0c065500080d0d
065500190c0de1214766182b2b4ef42b2b2b2b2b2b2b5d713c4d10ed2b2b
2b10ed2b2b2b4e1071f62b5d4dedf42bed003f3c103c103c3f3c3f3c1117
3987052e2b047d10c487052e182b0e7d10c40710083c083c0310083c083c
b10602435458400d4b09011f0984030209180d1134002b5d715931300143
5c58400a092c1d3909081d1d3c06b8ffdeb21d3906b8ffd4b2203906b8ff
d4b121392b2b2b2b2b595d00715d0171002b2b435c58b90006ffc0b22139
03b8ffc0b2163903b8ffdeb2103906b8ffdeb2103903b8ffdeb20c3903b8
ffdeb10b392b2b2b2b2b2b59012b2b2b435c584012dd0401081416390908
14143c090814143c06b8fff6b2183906b8ffecb11b392b2b2b2b2b015d59
005d2b2b2b2b2b015d712b2b2b2b2b2b002b2b1b400f0a03090604000408
0a000a0406010000183f3f3f3f1112173930315933113311013301012301
071188b401aae9fe6a01bfdefea17f05bafcbc01b0fe76fd64021f7afe5b
>BKUHZK+ArialMT AddT42Char 
3 0 83 <00020087fe690421043e0012001e01d5b0852b5840740c102d103d104b10
043f20b020021f20290c231d3215321d421d70209020083a173a1b4a174a
1b59085b0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee4
14e41ee020ff201623042b102b1535043a1046044a105a10e50beb1dfe10
0b110e03161c1c06070106161c0e0b000e194110fff2000b000b01400056
0019fff4000c000c014000560019fff8000d000d0140401c561924d00a01
100a400a600a800a0420400b0b025520400d0d02550ab8ffe6400b0f0f02
550a180d0d02550ab8fffab40c0c02550ab8ffeeb40b0b06550ab8fff4b4
0f0f06550ab8ffe8400f0c0c06550a74011333023312080d0db80140b456
120e0b0bb80140b456120c0c0cb8014040195612250000c001019001a001
b001f001041f013f014f010301b8fffc401d0e0e025501100d0d02550110
0c0c025501100b0b0255010c0b0b065501b8fff6b41010065501b8fffc40
160f0f0655010c0c0c065501120d0d065501191f473718012b4e10f42b2b
2b2b2b2b2b2b2b5d71723c4d10fd2b2b2bf4e410fd2b2b2b2b2b2b2b2b5d
71ed2b2b2b003f3fed3f3fed113912393130005d015d717200711bb4000e
110e16b8032fb76c0e0b010603061cb8032db26c060700183f2b323f3f2b
393f30315913113315363633321616151402062322262711031416333236
35342623220687a43a926888d06a75df7b5a8f2e11a67678aba77473b1fe
6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbcad7>BKUHZK+ArialMT AddT42Char 
BKUHZK+ArialMT /CharStrings get begin
/space 3 def
/k 78 def
/p 83 def
end
BKUHZK+ArialMT /Encoding get
dup 32 /space put
dup 107 /k put
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BKUHZK+ArialMT*1 
[32{/.notdef}rp /space 65{/.notdef}rp /b /c /.notdef /e 3{/.notdef}rp 
/i /.notdef /k /l /m /.notdef /o /p 
/.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
BKUHZK+ArialMT nf
BKUHZK+ArialMT*1 [13.56 0 0 -13.56 0 0 ]msf
260.125 18.7921 mo
(pickup truc)
[7.53937 3.01031 6.7258 6.82056 7.44437 7.53937 3.76968 3.68835 4.54248 7.4444 0 ]xsh
grestore
gsave
254.965 21.702 mo
337.405 21.702 li
337.405 6.078 li
254.965 6.078 li
cp
eclp
BKUHZK+ArialMT*1 [13.56 0 0 -13.56 0 0 ]msf
325.405 18.7921 mo
(k)sh
grestore
gsave
254.965 21.702 mo
337.405 21.702 li
337.405 6.078 li
254.965 6.078 li
cp
eclp
/BKUHZL+DengXian-GBK-EUC-H-Identity-H findfont [10.56 0 0 -10.56 0 0 ]msf
332.125 18.7921 mo
(o\263)sh
grestore
gsave
337.885 21.702 mo
420.469 21.702 li
420.469 6.078 li
337.885 6.078 li
cp
eclp
%ADOBeginSubsetFont: OMZAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BKUHZK+ArialMT gcheck setglobal} if
2 7624 68 <0002004affe8041c043e002800370322b0852b58402c090d092a190d1a2a
290d2a2a390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a16
9b1aa90d1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619
bb28c419cf28d215dd28084416011eb8fff440110c0c065512120c0c0655
050c0c0c065535b8ffe0404f0c0c06551f171f182b2c2a343904392c4904
482c5608592b6608692b760c870cc90cf90df92b1137340e0104102f2434
17322114185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e03
0ebbfffa000b000b0140b7560e0c0f0f02550eb8ffeab4101002550eb8ff
f44014101006550e0c0d0d06550e060f0f06550e260d0db80140b4560e18
0c0cb80140b5560e0e1c0317b802aab3182c0b0bb80140400e56182c0a0a
42551895141c1c0700b8fff440110c0c06550045270a321c030b29611061
004110fff6000b000b014000560000fff8000c000c014000560000fffc00
0d000d0140400b5600060d0d025500252124b8ffecb41010025524b8ffec
400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b0655
24b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b8025b40
0e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b40e0e
025526bbfff4000d000d0140b356263139b8ffc0400d1e23343039c03902
a039013917b8fff4b71010065517080c0cb80140400956172518222f080d
0db80140b4562f0c0c0cb80140b4562f0e0b0bb801404011562f24bf06cf
06021f063f060206140b0bb80140b45606140d0db80140b45606080c0cb8
0140402e56060e0f0f0255060c0d0d025506180c0c0255060c0b0b025506
0c0b0b0655060e0d0d065506100c0c065506313810f62b2b2b2b2b2b2b2b
2b2b5d71ed2b2b2bf4ed2b2b105d712bf62b2b2b5dedf42b2b2b2b2b2b2b
2b3cfd2b2b2b2be5e5003fed3fe42b3fedfd2b2be41112392f2b2b2b2b2b
2b2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d
2b2b00711bb700032b2b0c0c0e29b8032db76c0e0e1c270a0332b8032db7
6c030b1817171c14b8032fb26c1c0700183f2b322f333f2b3f11392f2b39
113311123930315925060623222635343636373637363736353427262322
0607273e02333216161716151514161723260306070e0215141633323637
3635033c64b96aafbc477348356bda67013345887f791db0186ed08988aa
5010091722bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d
1a24250a6e2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d
2f48605b4f3d7700>BKUHZK+ArialMT AddT42Char 
BKUHZK+ArialMT /CharStrings get begin
/a 68 def
end
BKUHZK+ArialMT /Encoding get
dup 97 /a put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BKUHZK+ArialMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a /b /c /.notdef /e 
3{/.notdef}rp /i /.notdef /k /l /m /.notdef /o 
/p /.notdef /r /s /t /u 3{/.notdef}rp /y 
134{/.notdef}rp]
BKUHZK+ArialMT nf
BKUHZK+ArialMT*1 [13.56 0 0 -13.56 0 0 ]msf
365.995 18.7921 mo
(trai)
[3.71545 4.54251 7.53934 0 ]xsh
grestore
gsave
337.885 21.702 mo
420.469 21.702 li
420.469 6.078 li
337.885 6.078 li
cp
eclp
%ADOBeginSubsetFont: OMZAAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal BKUHZK+ArialMT gcheck setglobal} if
2 13976 81 <00010087000003e6043e001601e6b0852b5840130503061302a810b810e3
03e713f003f6130604b8fff040220b0d347910019810d018e018ff180420
08140e1416121c05070106160d0a0d0e0c0e4110fff8000d000d01400056
000efff2000b000b01400056000efff4000c000c0140401c560e24184010
10025518400b0b02550b28101002550b140e0e02550bb8ffec40110d0d02
550b040c0c02550b220b0b02550bb8fff4400b0b0b06550b14101006550b
b8fff9400b0d0d06550b0a0f0f06550bb8fff640120c0c06550b40333634
ff0b01ff0b010b4e18b8ffc0401a343634b018f018027018a018b018c018
04180302331516080d0db80140b456160e0b0bb80140b456160c0c0cb801
40b45616250100b8fff6b41111025500b8fffab41010025500b8fffa4017
0e0e025500040c0c0255000a0b0b025500040b0b065500b8fffa40110f0f
065500020c0c065500040d0d065500b8ffc04012333634f0000100002000
d000e00004004e1710f65d712b2b2b2b2b2b2b2b2b2b3cfd2b2b2b3cf43c
105d712bf65d712b2b2b2b2b2b2b2b2b2b2b2b2bed2b2b2b3c103c003f3c
3f3fed11390112393130437940160611090a080a070a0306102611060e1b
010f0a121b01002b012b2b2a81015d71002b5d711b40090d0a160a010603
0512b80330b26c050700183f2b323f3f3f30315933113315363332161617
1615112311342626232206151187a275dd60a150100ab42a6b4873a70426
97af45704d327dfd7302866e6d4192ccfdbc>BKUHZK+ArialMT AddT42Char 
BKUHZK+ArialMT /CharStrings get begin
/n 81 def
end
BKUHZK+ArialMT /Encoding get
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/BKUHZK+ArialMT*1 
[32{/.notdef}rp /space 64{/.notdef}rp /a /b /c /.notdef /e 
3{/.notdef}rp /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u 3{/.notdef}rp /y 
134{/.notdef}rp]
BKUHZK+ArialMT nf
BKUHZK+ArialMT*1 [13.56 0 0 -13.56 0 0 ]msf
384.835 18.7921 mo
(n)sh
grestore
gsave
337.885 21.702 mo
420.469 21.702 li
420.469 6.078 li
337.885 6.078 li
cp
eclp
/BKUHZL+DengXian-GBK-EUC-H-Identity-H findfont [10.56 0 0 -10.56 0 0 ]msf
392.275 18.7921 mo
(o\263)sh
grestore
5.55922 6.07202 mo
6.03922 6.07202 li
6.03922 5.59204 li
5.55922 5.59204 li
cp
ef
5.55922 6.07202 mo
6.03922 6.07202 li
6.03922 5.59204 li
5.55922 5.59204 li
cp
ef
6.03922 6.07202 mo
88.4792 6.07202 li
88.4792 5.59204 li
6.03922 5.59204 li
cp
ef
88.4752 6.07202 mo
88.9552 6.07202 li
88.9552 5.59204 li
88.4752 5.59204 li
cp
ef
88.9552 6.07202 mo
171.539 6.07202 li
171.539 5.59204 li
88.9552 5.59204 li
cp
ef
171.545 6.07202 mo
172.025 6.07202 li
172.025 5.59204 li
171.545 5.59204 li
cp
ef
172.025 6.07202 mo
254.489 6.07202 li
254.489 5.59204 li
172.025 5.59204 li
cp
ef
254.485 6.07202 mo
254.965 6.07202 li
254.965 5.59204 li
254.485 5.59204 li
cp
ef
254.965 6.07202 mo
337.405 6.07202 li
337.405 5.59204 li
254.965 5.59204 li
cp
ef
337.405 6.07202 mo
337.885 6.07202 li
337.885 5.59204 li
337.405 5.59204 li
cp
ef
337.885 6.07202 mo
420.469 6.07202 li
420.469 5.59204 li
337.885 5.59204 li
cp
ef
420.475 6.07202 mo
420.955 6.07202 li
420.955 5.59204 li
420.475 5.59204 li
cp
ef
420.475 6.07202 mo
420.955 6.07202 li
420.955 5.59204 li
420.475 5.59204 li
cp
ef
5.55922 21.702 mo
6.03922 21.702 li
6.03922 6.078 li
5.55922 6.078 li
cp
ef
88.4752 21.702 mo
88.9552 21.702 li
88.9552 6.078 li
88.4752 6.078 li
cp
ef
171.545 21.702 mo
172.025 21.702 li
172.025 6.078 li
171.545 6.078 li
cp
ef
254.485 21.702 mo
254.965 21.702 li
254.965 6.078 li
254.485 6.078 li
cp
ef
337.405 21.702 mo
337.885 21.702 li
337.885 6.078 li
337.405 6.078 li
cp
ef
420.475 21.702 mo
420.955 21.702 li
420.955 6.078 li
420.475 6.078 li
cp
ef
5.55922 22.182 mo
6.03922 22.182 li
6.03922 21.702 li
5.55922 21.702 li
cp
ef
6.03922 22.182 mo
88.4792 22.182 li
88.4792 21.702 li
6.03922 21.702 li
cp
ef
88.4752 22.182 mo
88.9552 22.182 li
88.9552 21.702 li
88.4752 21.702 li
cp
ef
88.9552 22.182 mo
171.539 22.182 li
171.539 21.702 li
88.9552 21.702 li
cp
ef
171.545 22.182 mo
172.025 22.182 li
172.025 21.702 li
171.545 21.702 li
cp
ef
172.025 22.182 mo
254.489 22.182 li
254.489 21.702 li
172.025 21.702 li
cp
ef
254.485 22.182 mo
254.965 22.182 li
254.965 21.702 li
254.485 21.702 li
cp
ef
254.965 22.182 mo
337.405 22.182 li
337.405 21.702 li
254.965 21.702 li
cp
ef
337.405 22.182 mo
337.885 22.182 li
337.885 21.702 li
337.405 21.702 li
cp
ef
337.885 22.182 mo
420.469 22.182 li
420.469 21.702 li
337.885 21.702 li
cp
ef
420.475 22.182 mo
420.955 22.182 li
420.955 21.702 li
420.475 21.702 li
cp
ef
5.55922 68.9821 mo
6.03922 68.9821 li
6.03922 22.1821 li
5.55922 22.1821 li
cp
ef
5.55922 69.462 mo
6.03922 69.462 li
6.03922 68.9821 li
5.55922 68.9821 li
cp
ef
5.55922 69.462 mo
6.03922 69.462 li
6.03922 68.9821 li
5.55922 68.9821 li
cp
ef
6.03922 69.462 mo
88.4792 69.462 li
88.4792 68.9821 li
6.03922 68.9821 li
cp
ef
88.4752 68.9821 mo
88.9552 68.9821 li
88.9552 22.1821 li
88.4752 22.1821 li
cp
ef
88.4752 69.462 mo
88.9552 69.462 li
88.9552 68.9821 li
88.4752 68.9821 li
cp
ef
88.9552 69.462 mo
171.539 69.462 li
171.539 68.9821 li
88.9552 68.9821 li
cp
ef
171.545 68.9821 mo
172.025 68.9821 li
172.025 22.1821 li
171.545 22.1821 li
cp
ef
171.545 69.462 mo
172.025 69.462 li
172.025 68.9821 li
171.545 68.9821 li
cp
ef
172.025 69.462 mo
254.489 69.462 li
254.489 68.9821 li
172.025 68.9821 li
cp
ef
254.485 68.9821 mo
254.965 68.9821 li
254.965 22.1821 li
254.485 22.1821 li
cp
ef
254.485 69.462 mo
254.965 69.462 li
254.965 68.9821 li
254.485 68.9821 li
cp
ef
254.965 69.462 mo
337.405 69.462 li
337.405 68.9821 li
254.965 68.9821 li
cp
ef
337.405 68.9821 mo
337.885 68.9821 li
337.885 22.1821 li
337.405 22.1821 li
cp
ef
337.405 69.462 mo
337.885 69.462 li
337.885 68.9821 li
337.405 68.9821 li
cp
ef
337.885 69.462 mo
420.469 69.462 li
420.469 68.9821 li
337.885 68.9821 li
cp
ef
420.475 68.9821 mo
420.955 68.9821 li
420.955 22.1821 li
420.475 22.1821 li
cp
ef
420.475 69.462 mo
420.955 69.462 li
420.955 68.9821 li
420.475 68.9821 li
cp
ef
420.475 69.462 mo
420.955 69.462 li
420.955 68.9821 li
420.475 68.9821 li
cp
ef
63.7852 -95.968 mo
95.2852 -95.968 li
95.2852 -129.718 li
63.7852 -129.718 li
cp
/1 
[/DeviceCMYK] /CSA add_res
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 84.4648 75.208 ]ct
[31.5 0 0 33.75 -20.6796 171.176 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 42 
/H 45 
/M[42 0 0 -45 0 45 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
IY3B.Kq#BlaKh.sVRFbLfnFg&NeNCIL9.o!_nW^fZ`L3mLOt,=U:J.[X.l/6FDu#=T#\mue`EMi2-G<o
TrbPhPE:fn[`$1jYeJ5o]rn#`Ks@2H\]X"5qqAoYQA0Kj<$NA78m["GbJM-6`ODJ)Q)UmeWMQDo\\c4b
IW'%G@r$=%DPtUu^q45(!!!$,)FB.^bfn8Pc.^CagtTuRQ&qZAQB[#VJq]`$bf?iNPbth1o?qo-IZK2@
LQ/=D^;@Uq['Q[+PDXpDO.Whm`3#i,IWTOEFe?^teA]t+1GN$\R%pmmQ]R8jT<c5OZa%?ibJLEMKnHV!
I]0j$k5Y;+_4HsEO^V'*)(eKdI]^f=ai(s!TTthCYH"\.WN!&2\uKUbH"Ci;ARqLV`4O3e)uos>$5l0q
_SF+4d+dL,b14kY]W[uoLk1&^WJH=bN3&tKSXut"dHK;;J;fn]Q^3r7UR[dDZ*q*K[\&b>MNOF1[#BX-
@%W[KK7AK?_84O3Z@4#B5[8)XS#33aY-u3fbg<)Y[DC#(Z_3G@caL'g]"lt@YcF.WM3jHL1GM:'Ck](;
]"YqcR$E_k[^<0:Ybn%bX/i1;EIMYGLN6RKcd98L[57d^)@7-:K"]a_cc=#H`4s[@_S3U\Oa;P,Z)<G6
IY`l_Vk0EHY/0#gk`^aVP*)&qQ^OA7TVSm%[^if;Obo!XSZ]D\KV"j&Q\0a=Q,pSbag-^X,s,+>JsrU9
W3*G>_op<$U:%VL^pKu%O3G&7]",Z0bd*t/Q\gEUIQfSR=(m>pc,mu@Y*kT:Nj?*qX/MbgVQHu!DKC>G
$@%>F?>IR3]!nP+rW$m@&N,<Y`Q6BVe]u.OgsEj>V4X3@LkaO)Q[<apLmt<DVQmYMgVntfDgd@uJ9us*
NK9R7a3MN<[%rtQQC=PHG\W5C\A>PCP+0%m\#PL6BN7r;DMtL5aiD?;^r!joP`qcA[C3TZXJYUH]We$!
I\N@$Q^jS<V73*u6qq?DS&rsk]!/$#R$a>Q]=4o9R$j2'QBPd!IqEVTD.\%6g=bB";@!7'#ocHsZbsi-
cI'tbeBuO_[%3GLSqVpMba3ZsFGQKe[Ag(6_r.D3:eXu!AnkmkB5;p\Xi]#/_RQV2QC+,9Wd/B>Ye%ZV
>b@7V]Y:hSLLF"A1I+Q>F+_9Kf@\*^`4;%pUoh5:[^iT@n)1j^SXlUGTqRpCT;B)L7Op2_=D`_E[)0S]
S<]D/]t:VSUmRF2QC+%MF*qM:MK!X9_me@YUE'44*<?B[)K1%l\&l_3ccXMbaK(PeOH5INc]WHlGaPU^
]$maBJ8K!q$31/F*?#Op#TH$2GFQe$^pphUU7@[CTVQmIOLE'P^S-a[[DgY@R!"L>F*;A4C2/*TZ.74+
Mi3[_SY`[&[CEoao(9YoObepTQ)1+MYI0@$1*A2=:f:1]:1&^^aM,a:_nWdjVNm:"Mhma1FEh#!Jno')
Wku3VOY$b2!+-7>[Euh,b0A5Q[$cVjLP=1'P'1hiR]O'@X-n';.m$!Y92nng7m.aq#;9\Mcc<c1[&Tgi
Q^jYAHYJSL_9TojNLI8fer*I:cH")R^94K6NI#MkO.(icPa.Z6Ye0nC$FfNr^8@*MM3*po2kHqOF@B2T
EK$cnURdER83U10Urp?^^VR.MPECWVKpuXqF]r7,E+"mBd%_9T!>#P[5<UM8%fHAo+DS(+d`o_?WgSNZ
F)o"'IX?O!\\H>5ODRbn!%K-:1HRc_3&WQG*!Qiq=ceu<OdDZ4SY2UGLNB/o[Dno#Mi5D]i5^b;f&l5\
khOV7g?@M1Rs]1?ZE17+Updk8ZF%$uj0PMDL7"@'WM?JJ2`m1rY.i3-ai;]_c&Q77?_bfb_SNR\TTb"W
J#dF&EFE^@C4(o?Pp$,-#6bAK-7gA_)]04irW!`^_oBp#S]SWoAmJZU[t&gRL:Fe)f99Qj)A4GN/1WS>
5<V+i0/YF51bq-tN09WpS=cCHT:LaZTX(rBTSS)[\!r&B_;4bUn*/ZYg#_2[hSc7>Bl0<BY,\M1[Bm9L
iSh/>P_YEgPHC6k6;2Kl]#Db<dEgG'biQ^2M/mQj\]VauWL]9/It+M;DfoN(HXBI?O;%\D!!E]A&0*)M
-RC)Q*>Aea!<NaX`6G<RWK_=.?E'NDI>3s%\$2fJ-3,#?0gnH#7RTR,3]f>W.kMkD!(q!XIu^)#WMQAU
Lo7DQUOdfCNM_Gj_;sao[]lp8W3aJ!na5H$eZ"+b\]DgiXfeY/ZdR1*Wh#`gV4s`7758:RR%p@KSY2RI
W3k"Ak1&4pE);1k_oJjVTTFqa]6eREBQA<"=DBAe!!*Q@*uu:>(D[c),UXE>&Hr.7&7iVjO.re)EcS4P
I"$d6_RHb+8hVYG*<dVpr;\#E(aLL]0Jb@&%3\_iJW65"WMlVXM5dSQTn7`DD01iOeBCptODd`G/k0`C
[F"%%oBXf4C4`k7['-R2ZaeB1YcOIfZDXRK<DI+RDcC:B/g;Su;fe/.e*-PgYDZ8$ZbsDRUQL=d^4:6L
B5i*$>oNhG!sSf,!Vud>":5YT)\`DU!"3\[Z)FaQG^$*YKnP8FVkf)F.6^6_&HDk4!!3#uF9)Ra5!h=b
+WLk'87[LGYct:.RZ3r7Q]m8ZK5uLA];]Kn!!!-2&ISjN1K][Sh<+%bQ[#4W^n?s`SYaHHZ*CIBah=0T
94iBX1(slt$4[OT%M:BkMS%I!f?%>mK[muQXdYE5`.N)TB6T2N49Y]h%g2e2p])9?-6s<4"98E6P/O>]
K5bb-T7qrSPGk7-6o%IsrW!')!!!$#qZ'5"/N#'u1`nA^I@I:BY,IeKT;.a;LOskaMnl;u,7=YU!<WN4
%2KEa2h/[6qW#bOJ?lt]PFA,>aMb?gY-uNfP#kS5AJkXV%LFBd#RUtO()7W=AZ>D'a.c[FVT60DSWAfM
K5u3LG(j]`!<F,Bnc2)e*Y\_g!!,crRs]m+D7$=+N/<CHKO$Dm7Ml+3&e5BU#6k53"r7OL#U`),1cZNp
:32o3\[AT'LR+EnPa@GiH(MER$2ac)!<rZ(!$MeLXQS:%]o8DaR>R)kR`r=K]=Po'\VOU(Fu9F2&-N+;
r;[lC)\Nr??aKRVd!fAU[(`rKS!_'?Fae+IHs@Tk!tOf#+<`W\,67cYEh7r?G^-QpP)bHUL4Mc_65T\&
)[mPq"p-"L!!EW>)]SnZ'KA02.j@,tS%6)9Y)nF)S!0)#Li&'RJ0td&!!!&s!$MIWCXD;(c]a$VRuEMo
QcutH]t;(tY\A-$5R7T9#R(>4rW!u?$5+^C+sUXBn@t<(Cnnk]W199fH$=mXD/MrI#7U>,p]*`'.2`Bl
"AYncMKEuiI\XBXZ)_gF-ohV9!!"`-,S:am""S&ghQfie$m7Pf2^/YlBRuk^[b8c^JobmV?`V_G3=u5k
'E.t_!WW3MApT1t!!"I)h<=:6IZ)h"V37%/Ml"S?f^G80PB8Dl#m_s["pFuP-QXm,7qHEU"9<JX`lNEo
A@\n6S!B:SBT-A.E"`3U"n_it!=L=ZrW#Fh*uZ1%!!A:`Kl:^YIA=3V[&.=6*^To/Dk2TgDB9>j3eja9
s80Z.!<=l54#.p7Ck/4d\_k\kJTPpS;lIm;0`kU?>%T5_!!+Hn9sW$PGtoOo=3g40aH;+i_53B]RZ4,^
ced`;;h]iK$ZW7h<@%_J,\;^PBRZOs('$CqceO^f=eMjdSX?R%Aq=N+?j?Z6%fcS9D@6jM!!OcKB9cd6
rW",S*[qHs!+MORH$#.(VlHVePYViB)?Ct=TV0&dAMk-Pe&3JVL5W"7)?;rR3&i]@ApKrO[_]>'Kn>)/
9<QQM"<)NLQIhi0!(^1>KM#X=a^kGhRc*nnVg,;\WKi^OU92#>`3<`HG<?6bPeaME;CW)*QEPTj4)0@X
"r<39m^[dJQaa,lT#uk"F_u:r!<<?'!!G$GLNaU7!!<mU3WOU1-&<06!"9Gc*!?7)UnrQgO,0a6VOrlD
+ZBB%@o""OQaiYJ,Futq&e[7+loY7Z,rRkK+'s5_Y-l-QKS+l3GY5d,5mL=Q'i:OH/H?)qGW,U(8^Nh-
#\VTSijWus]<%?_YbA5.]Y^OSA;V?8C/cHd?"I%G3k_LS!rsJlK8'pI;QA`tO\^V9XIc!'Kk>7?F#sC'
%fcS3!!!'D:&Y+n7UH#n!L73p!)<b@-4g.uRAP=TXeVbkN/W3f2(f%40H1#m6D)%I0#>t)&HE)^nl?8'
*AooB*DUgBWNh\DK7oqmN+'W:-35"i!"W5j9`PNNNtVTu/OHIh"op@#nE%N/Lom>7Qd<U\ZC[G0<)H3t
"uRV5&OUqY$RW0+('"=TUR`h>,I.:6ZW_^YWi)<!Hu3\6@OD0Y!Vud"N=#XcE_$'.!FfgC!$qdj-m&Es
Dh3@]XJ2SiMhu[m/.V^\!sK5;5G5eF2p9`0#QOjG)!"m;!":VC5qP]QPH1pPL4k8RS:bprT,7J,:(e7A
iCs:_KTQQ@"<3bU$32<Yl/0U6K;bE-RErXZZ^m5!@RqmN"pk_]'L@.[$ST;C%0?M@Ng21,(m4LK]PD_h
W2cB"F)Pr-:)XB=q#CSZ$31'i9Dnhk3)feV4olKE-34BZI"m-a[]Q'LIVWjU'aY3`#QP?n[sArVd(^=s
!@khA;%E[-0/l0V8oordY)ROMO12-FMRAobrW"qj+)H*i!"G13+U7uI?]Z-*$_QS:dZ]H`Umdk%g;g:R
GZ7Wo'Ee^[$kjkN\M+(/Q<sUl"$Ph7.h`$kI/E3ZL4?A7XId(@CiNZ;$4HY0!@D4R!!.:.r;ZjeGPqM)
'HSn4$XApVLV1*uS:>lsE^0j0":GQ#A$2Cd&M_>M+Th]_^?A<#!<=r;6Tmt[N2!G8FaK1YV1O`GN<9(Z
&4^JpAJ+tHNR]Td!!$>h('$K+SF>LlSV*T0R%24O`iP,@:KKdg!!<ZB:j(3R"p>d)A,lT10'SiS!sj/O
q;m`dUU..pa)>^4>:g!f!rDs!$`,9N!!-J+r;ZjdK)GZt*@3]T#tp/7KY5"%RXTWkH9)04":tkON2a43
&2:],1B@\']'3)t!XSla2F9PqE/pWn$B97YN4uHET#-ErrW#\6X,2$k!!\+o49u)j?'uT2%BJsPe=1rW
U6_.llcuGhF\5mu"9AN5#p7+)_(u33LL(/b#<M"=/clB>s6/0tGG21>S\KYuARdLu(BOC5!j%/grVusg
4T,6\5F)0I#p('A$jT.TIX&O^]W[`PH<tnZ!!!61%g5@i[ZqRda1rc!!"l<r@1reG1c[ob9QH)dX,V7L
NkMKBTu1sRrW#G"89]>c!"4h1/-u:V;O8a2'!C]_esD/iUQh1mk0BudE_'Lq!!!-+&JJ!8`^L"OP[OOl
![5dY3sZ=Ys7bK4JulAZR_O(OF(o&8!uV.9!!YW)!rr=57f<;f-B7s(#p(<L#n1"!I!;dnU/HYl@!G'>
!<`W9%feeIh)cadhF\1W!-%RB'EAFr4@:r'GE\r-Q@jpIVO;RqiK"TS!!!'%>f::U!dgFW!sp$AJe\86
Zg6f%N/t3<OdF/1^Fup`Ip6c"%0-J4$4m;'MM)H`YD42"!#(d"4;8lsq<c7GK<_SRQ,[ldD.PC*+Un/H
"`u<r!+9R?!!,H8rW"kX)_*NE'6T@SCp0M,UP+#)GVTX-!"'&=!<e/Q9,XbeAd8;=F7EZU$Q1fb5qZ;^
PGt^NJVApcVO;^tbG5aOrW#Xt._^91!-FYc!!FmQK+S)D`:*!5JssEMPF'A.^:'P]?>N4T!!!60$3glo
Po(I:M`(S9+K)"o(GMceoXo"$`Nc;.`bKL8@k\-1!r2g"AQAd27W85*!F'aH!"K)Q/g^TAQ^2o>OG9O*
R!sj/DAsPq!&u2/&MC'=6PYa,N&i=AOk!>4%P'P&5qceqS$TZ<T88;\LMhmfaWCg9$31&m`+T,QD0o;&
(.Y]h(FF%Tq!,SFW5P[*RCf3(^U0MZL0%7Q!\G2i"Vtm6))]%=>RUW_Ko%3-=M"+ORpV>lW26<7Aor<3
63@iE!<N#s##$lS!'5B0rVut*=8i21%O`kF!B$mHQ'7;aUo'K;FD3?]!!$tm9lc;r[4_Sj\]_[oNg?Oo
$SsOt3&`X+Gal(O]:b%;N/i%3g>"Fr<F$qBTZfk*!'tUcOHZ`_@K8!Fk4[H1KX/@hSXR9e^;.1UKmnMn
D$1#HC,f""Df6"&J#8$8@tBVR$o3Rcm^\'_S[YDlV9EV%Hu)h')$L0D!!<Q.!@:tV!!!*n==u$sM@omh
"rAR*#m!SfNLQ>nHDRL5U4Hho)#sY$\BaO$\Q9(>$<E_cs6mj%!rsu43A`NZCOr4g^!+-LLk1"nF&g`;
?l_FdN0oiK.0'>Q<Na9@EDnA2Dp@S<b,(<<]V1[[W0=m5aO6lAGAA3%1Q7]fHXnB&.mRNlD18C9+TPHO
bKH;mD4dSpTq'&2MLTP_.hr*drW!'rCkYV%r;[!&='TWG(]FCJ%icf(!sN.mJVSo7HDdR8VM/G$IO%&V
!/&D7^L.W\#Qk'(Q(E=l)Ajq`3'/rT:M>?S[Ca\tNf&C=F)TdgU*Ke@M1'Li!!!-%$<Ut:&c`#$UYYM8
bG_Dk^SmNdWKb-7b1s%PI<o9,!+D.HBI*c]4"Ch(6VBol!!&57h:%[5J$c&ESX[N0OF_D#1_0Wi"p4i*
#@Tk>q>^O!!rW*7"<Jg9%0[K(Q'-`J\[IQVPDaoa83Isl!"187&ISmP$4-tD"p+]'*>p^t6TdJ-EKR]@
_8M:YTX;h^Y]cq\\8EQ"!!!,u!$)(H&e5I=O3->PhQWTPXIGK?Rb$l9P(\=4=b)ia"tp8g*%)1&r<!'%
!WE':"XJ0:qob=QH'PbETpq7TJ<Fep@6ao,'ERV%5o;11(CCdIV6Yl(GIb/CMNNgJ<_,J/"98E;*WuQK
#71\D$3^G1!$aHd5=$YJ=E'>*]>)7DHD%UcaL-VtajQ^\7LAhi-3FGW$U9*MgZRt<S?p/9Q'7H&eEs`.
KR\J^J>/Q7)$gEX!s/K)rWE*!)&QYXnc-@A@Z@V!XJM>G\q#iWF^[iH&KD5J!#ZCu2(Sh2.YaaYM0F!5
PD,!dT:((+904m6rW$(%!<<3)!!!$"!!Ol=69me#2b7Y0R'!a)\Y#(cYI(C'F+^URd#L6s#6P#4%LrdK
#7)8=IB_2^kJWs^_U>KPSXuY$eZY-nMNNF7P-^TD$NL25#m^h@!WE'?"smZJfDkl-ATFEVYG7eVNl$X1
C3=9!)[m]-%0-D#!$D:W0fCs'!t/GGUkFt\HD-OVNLZQ.Le9cc5!'D_!rrAu!$Wdb9LqT91FYq"B6flL
[^j)DPH:smXJLSlQI>$AIl&5S"T8BG"UlPQN2X\RhSl8%e_SBMSY)^VbLN\WN/<j_CjDSgM`D@P$4@1E
!rW*?"ZUF][I*b,@tCep\Zr31Q&rn?Lh_!DE]4.+&1A._!$DOb/Ntd#!>ek%X/_k`MM@"5J<6_8]rZ-E
2a9Sd)A<8N!$Vt77nu]K7QMehEI38"U91VuWP>dHX.G6'G%Yrlf^mdqKi()g(_%'%5Z<-']#iO[a.\^+
eBG8#XJiG7^q6S5Pa\nZJ8oe0[Xpq(-5d7!$PF^FAr!=rce,RWD48#KWi)JXOc@D7LiIKHHVb7X"<K'&
pAcB=&hGn(4W4A/>J%VEWN;DFMi)b0OJoCs["VU800MWj8mZsL;GL%f>?k<1;,0YB0/[0UH\ITWXfSM"
^U(ANSr/;LK85l.kOmoVT9G%_LQ7q.[(FZBd^ZQo^rk-I];VU)Yd)!UX.#9?Z*g0VD1AC`M0Or.F)Q)F
MjgE?`8et8R%p+N]XkAJS<T"ma+TIuF'X9*4;7l&*@VsD,o1q;#RM%c1HIQf;`YKr%nD;b_RHA,KR\K.
I#"&gX1>U-IU5K59i"JS7R]g95sIV&6q9a0+"g'<PaeVSYH=OhRDZD=UQgLhJqf;EPcrEhh9s^!e^`$l
d,3gLo$+/Hm(0U1XeqtpY-baOWiMtjSZo;pP'LkfP+S+oJ;/N9Pa%H'Z*;-`MHb"rZEgsCXJ(o>MM]H,
Q%XBbIr/=M'a>-q2D5sb)'9q>)&t4[4$=2W">?UX_SN^UMgKSgLO=oEW2[>8S:bQI2+(&191VQC7R]d:
6pa4(1+PCUL7k<=Xfnk$S=%7%Z_`q@L4Y&ITp2"UcICS!e(0!#g#)#KgY1,k\'"!S[BZa,VQ6l,\@\cA
W2#lgZ_F(PD-hIINf8dLOdVoE\u_s1P]pnqVS0.;XeVSYNf&Y6JshUE<I8[^=Yg9a%3cuA*#ftE-S@;*
-6j?4!tHuse^V!uV42gQEh\niS=>q8SXYe)ChQjL=FlNgObXa:R\,k4V37.;R&d!f]YD%eYG%;JYG.Ha
Sn"LlQ%F?a=]T9T=CYTE<aB'?='&d):fpV)NLu`2TUi0a]"YYXX0esuQ]m5QH<aoaAS>q,FG"msOd:o`
Q[O@8H&8'&\?i$+Q]-l]e<GKPLi70N9.VCl"9AW0#o3se$lLoD,8Ct@$Omg[,$i=8\Ytj\Cjpi+QCFD6
R[T_;LM8@`#64`@-QXZV.4I#&/3,CD6q2-bZMqL*\ZqouQEd9SSt;IHVk&$2+WM4=)ZpKP$NUD5"onW,
!!EW;08,pcSY;[\Z+e,`XfJh1SsP\$F&jV4',D2p+<)RH.OlGn.k3>'/M]+_Q++<2VPKWAMi-#LJ=;:3
DKB,'!UKeM7_$LOY+hhIK7^>(TqRO%Mj1H+>:Cg6$N^;3!!NE0#8%aa&K2l=.;"^>[D'Gj\ZDHoWL]6<
V5q5JZ=OIB!!<B6":"f)r;[i>!<tQ5S=?"9S>rg&]X+ZD]rdi^IWAF=#n."F#5eHB!WiH*"9er8$P>af
\%T;WW1fH:NnKVLS;V<"B2Js#!#[\oa1npX[?HK)Ybe"eObS^WVg_#_.NK3+rW!*&#8[k(3Z9:U.l&._
?]V+p]>2.iX.Yu[SW];6WOg-J=8MtH!X/T,!<rN6'*J:<$31&^I@?auR@U:Z]"b\T[D&`7MgfM7)[R,c
'FOa<*WuKV(^L6U('t4/Nk;g1ZD=+WNJlDSLS'E@C2#g4nGrFd/MjHP`Nl/:Ne`@[PanA+M34UOSmGJh
,6RuI!X0Dt>$%#QCcZ3J6S*2-MP.'M\dZ!JV7NmrQD(%]c)Y+J!&ao["U>,7&LSMi6QuLT0Fn1KM6EnR
Q^OM@Wj8Fp\&,GFMKEDu(_d\j!<<-%!!EiW)+[.D%2^ul.2uNN^q[FjWhl&ENRX8QU5No)A39td!!*-%
qZ$s(1p5*EZ_+1QJqAL~>

%%EndBinary
grestore
np
140.185 -95.968 mo
171.685 -95.968 li
171.685 -129.718 li
140.185 -129.718 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 84.4648 75.208 ]ct
[31.5 0 0 33.75 55.7204 171.176 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 42 
/H 45 
/M[42 0 0 -45 0 45 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
3Nd1@=rUji>ZRK7^qmn&*=<Pj"pGBQ^:h:p^;.P#^q%([UlL.aN/WI<6sED5AU7reS$9*!XK<!1!$;5C
Xf\b/YHP18Z*1@:[^M6^US=",HBW\BMOJE`NM6?J*2aYV#Qk,0$"Kp3Vl$;eUS+<WV5UQ&N/sX(OE_3:
&-MtB-3jQVi8j"[k5#&u"m+k.jlGL_iSrqZhqG+m7;Zg.[RF>&'2<jb/"lmW/AJq7%M8sR$j^U]^U_%m
^qmk(\[\/nOH#6VFa8]c6;AY#MJb,9YHP+2X9nb(!DolrXq.eAYd(C8\%B>UWgJ6fk#F<]HTQ>PG;+uP
V5C/h'*JI?":,9=WMc\kVP'ZYT;A?e[^`H7Q$\%T!!39'!_3Y!=QJQ)k2lF>/ct.sj5oC\ioAtXj422g
RXe0Q,deXZ@jOa!C^QNF_Ss:((^U?J#R(3@^:h.lrk8lX^q6S7YI^Hd8mH=m"YL3b/l&0a'TK<!X0&-(
rW!$$!<?3uY5POM[(<QH\!g3'Ght2]L.cLGJ.dI0UnXch('=R;"U5'8VP^8gVPX9f(o=12VPU5N8R$/8
!!!9)!L4E#465GZk2,q7!s@ZHjSn9>j:'kli8iQ`!!3e@-rF^e5>6W'!/\P-^q[VurWOVS!!$fK]=kkc
^;%J!\@T8KP)k]WI"I4a4'b<PUK7JEYHP+2X9\_)!s&B%>Q(],Z*(:7rN@!EXeheQKob(PCQE(Jh-L8,
UnsrdW"].2)[-6EA#?0$VP9raU84T]V5U#QQ%FF<X8i51!!r^h!<=8'jQ5Obq>_cEjlGObioT:]jQ#=^
gkKHP0dJQ\:MF0)7t)EiJ\]1=_nR,lr;\/THagZ"]X>Gc]XtbdY*=g.Ss5CtM_@q+8P=sj(3-O\Y,\T<
"U4l+"rDKdY-5"3rN6[7YHk0p]t1JFRGM;)JSK!9YV-l1V4si`V\oO:!!*-9H`3g<VPsKkrhUC*P_#O#
Q&pa%!!i`.!DEIn'BJ-6iTBt:"WHC^jQ5D#jo4<RhekQWeUCpqXANV*5?!%m?a%HJ^]hIe!!!''r;[[=
PHMC.[_BJX[(<W/Q&^`aLk@E[6pjq44[E/KYck43W"/k/"UYG7!X`)%Z*1=6Y-,+9YHc!ISX6.:hdM4V
ApL^U?CmgdVP^@-!!!-,"U"u8>b\=tVAQ&&V5'lQL4kM8M?!k]!!?!s!i+W5jlPLs!#YiXhW!YVjlPCZ
jPmt%8O$?9X?'cf3Eh&R##^;n_8XA.pAcHB!D'3$]VrEK\%8W)Bl/liLEK8^5$="d7s(r;Y,i!2&Hr:?
rW`T8!tu/9ZMq!FYHb=8[&\%`R[)u/IWSnJ`.:g.V50f\'*8C;!ZhLL#71SI$r"")VRE=qUSXZE?!_u/
QN.-i!![*O!!F8%jPSkd!$'bSjk8_Sj5f'0"p[=QZ8Q9*/Ot;51Ub09^]so=!!3Q>!rN$b!<FX]]WeuY
U6LggLjFfA*E$&t98.F>VQR,*!<<*&":lRr'*A=A!s\u3/?Z.]YHPLETn8AVNl"A>LJr)qL,>YVUSXdh
!<W?'"qqg]"U55;$4-tlVP^,bV4<m-DKfi=bQ%hS!!,P.!41_HjmW78jQ5@]jOfAe(b?CNZ7&XY/P^nQ
Q_)"2%KHJ1!!EoP)%d2[!!!3'!<EP+\@@uhO/nQo*FbHP6WPs<Kn>,7Y#MM.!!!39*%!3d+rV0t!Yb\D
!>McBYIp[%[(S4E@_FpCJQ$]tSstP4U'1Ms"pYST+<MF5%g<.O#S7@`[\T^sPDu9++;n/,!!*9(!_YXN
53:_j!#F;Kj3hC4hPU>R"1K^Q?U7;:589^+!Y5AF!!!oW*#TG$%1X."2?<^W6l_2N\tH9qMKf/*TG0Oi
6;*%q&V[@f!"8i-/het1,p=<L+tPb]!X/TM]"kM[ZG)QN&6lS+BnBr8[8%ZsU]:B$!<`<E%j2f-()J)F
4U_W*$neNYV>d5$J8,-[g&M*W!!,gp!']EC!:Bh)Ur_WLi6"%n!!0J_4DHlIKb"?V!tbP6!!2lq*<QQp
)[6NJ!<@DGUlCP'KU7^o+>R@b7tM9SIK0TO!%8']$O-\7!W`B1%k8b7&d/7AK!VnuW3(iIO0qG[OBub2
+Uir&"TSN*!<iZ2!rW->!sfGk-Pm^5%L@QbXLOmqH]<I.!!!Q1!(m4k1$S`R,2V(cI?#^Z2764KHmVgI
76Lh[!tY/,+p%iH!!FG^#6t80!0!\HOdVM_F/1lYF=C+A4>6d:!!iQ).0BYU"pbG@#n-k9$mm&1'*\RB
V7*k@];BsqZsmIG9R=6I4Tk`b"on]'"!.LG"9\o5!sB,d.3'B@"U1L"X/;q`De@`(!&4HU;W[rqDVNj;
aDMe&^0"in1ffK[!"fA:!<<W1q#D?<$31)6%LN4=!WeCmMiWXCLTO!GG;N6RB`JA9!!3f7!Vud9":>,3
',hSe()6q[YIKsUI"8/2JZr=+^53%%!WE'$&-)_3qZ%K:$O$kU+sRU7'+2aT`g_d1IH:J72?3kb)#++"
!#s#>^KNE6-GD6OB1=V3=TSX.$3:,-!!E?'!!3'%#65,3!!3<1&,lS>!4n/0E'@p:-"((K15/@"!!r],
!!WH1"Te]*rW=AF$NL27&JcAh!s]=>RrWC2@Al\WNbVS*A-`/9!WW3'!!`Z/!WW9#!uV(K"U5MU+Xd^*
$kB,1FDa6IjT#i%!!#t"jT#tTCCq!U"gnkP?9\sY%hSjI%fm4=!!30&"9&H*":,52!<=;A!>UBEO-#NM
W!QU-4;Ee_#64`+!"9&4rW)fq+ThuW"T\r]";:q?QAq/mP&R]SKn3bma<;8u!<iH/"98N$!#bk=!Wrf@
$Ode2%N#Z`VjjHPRW[He#mLA0CZGI.>tAF*<"uYK@rX45QiR4$"9]>9!!<?+!WsbR"9JW6!!<3$!<il[
!<EH,N0KB?E2<nCC,-Kn!!!3'!!rW/"p+Q#63dJm!s&fD*&Rg&)?QkAO_/:7."\!i2;\fH%06J8!!<<+
!W`<'!<<**!!``8'-/>]%1X?b_8i$[CYJgp)uou?o)S:\2l4Pm#n!1A97^k7Q2h'g!WWE)*WQ0I!XB\Y
%M]XC#SI+;%fcSE"onXJ_6@L#U)ugI>UY.'!r`0'!WX#:!XSW&-4g.[!!4#O1f">V%_&Em4&XBeB;9l?
U^.A4"p>;;,6e,P!!3]=)?^BQ/cl@[!!rW>0bXclJuar(?+p:=0a[nSirDA5i_BIWY!5g/>X)p(!!EQ-
$5Q\W!"0VQ#R_KH^W=.m$31&,!$MXM!#*/SK8HZm95IE[;ucn!"98T;7LfD*%/g/Z@B5m"!!r].)C/Mn
"sld@M-!uh?uD3G95Ot>#n-qH)H7UT"qCh=!tBm]X/>t%rW!K?4;SA1)Q8g/BA<Ig*<Q9Fq>^Krq#CL;
jOrYg!#t$$#7A(:<bkQ1*!$0D#ljr.T>$Wp!X0PON#`'1$jXQO$2so*'`n:6'tqJYOKV8R@7<U!!!*''
!!!+\Xb$WQ!!#al!'RFd%g!CZ6j*W%#d17^E2@8eJR;P+"pbA?!Wr[tW-\OF!>,EL&H`+:VZHu$!":Lf
"pG"(VLWUG!<Wc3p](A"jXpB1!XA]*!WW5_pAbT_j#.ab/mN$jA,l]0!#>kA(]Y#@!Xf8OgC5/1'Z%-V
#lt#-"9&9,OMRrQXtEa\9N1fg"U+o?!"+_a!!%`O!%=nA"qUtR1Dgi6%tq!BBr=UHHt@(##R(;3!Xf,M
":0_^"Tf1?";(_N$`B9j"98fM'b19HIA;R2irB2h!X&,r!(Qne!0I-Z!T\t0!"U["8.`9A?"[MG"9AK'
"p+Z&+9o[n"WY^n-OL.a$,6HB!!!*3!!!BJS<.`n(Kk$B8d#%m!!W9##6Ln-!!.js!WE':!3#u($kb-S
)Z^U#WK1Vh.WKTC=UG<5!!W?%+TVTGV?m88UlcMs!s/Ur!!*'2*[_3s&0?jT<oX/_#Qk,$!!)'Y!!.7*
qu?_qpAc7M/d8fq:0UXD"oo)4!!EW/!"f4J%g<6_BaYLd"rmi_!"&]+#8@(:)B590Ks)7a;b8,9!!rW*
!sel-%fiX3!!%d1r;\thXoT%9#VeRX!=1!XO*@EL@;/ms$j$h;!!<K,!Y5:.#QY"':'1e0!YM:0"oo#T
/-Z7^)3fD\j8]2_!VHEmj8K#YH2@RAjnAaBO"h?[.l1+!!WrE&"pk80%g)e6_$(kj]W_tT%grHS"98Q*
#7q7V!>('CO0:2n9go0g!!!0.!!!E1!!'&""TX1#quA7L"98`1/lPRO!%OY1R\`;=>Z(k5!!!*)!!!E/
!!&ks&dXka#m1D9!2]f.!!3TT/gM><'ROtKj8]/\oDemPrVut&4o>9[jnA``3\NM(:*s1I!!NZ1!WE'2
!<<>>"W7LTZD7d4%L!3T!"/Z)&/YHO(5I*nY>$KH:B1S&!<W6##lt#1XT/G'!.Aea!!<;*!"0G@$lV64
!!"UCKpJQE3b2J!#RCJ0!$M@C"K)82!XOm@!s/]."f;8(!#$"^0F.t'H=_<]!<<0%p&G*Tr;Zjd.Js/G
jnA`]3>40W;Gq'd!!W?%!"f,0&HfbrA-W>PHE@>S'*AKT!!!0/!<<*."98F\LNs*,;GUOT!!`E&#7U\6
!!TNj48o4%:jrBE"98J*!!!-),=5</!#2K(J>d'gDa4I4!<<*,rW"#BVQ*8j!X`7m!<EQ."/Z%u!Y61i
.1HF`M0NXl!W`N!!!25Yr;Zj$62U]_jnA`W=>UZ#+AYaK3rf<`":kJ4%g)e3#HedN##W)=#m:_D_#O]?
!<E*'((*?ZDelOQ94BdZ!s&K5!!!B/!<<+JrVusNN;`f=!s,M("98NO92#Bj<185TVIX"W5m7Dn!snr-
$3L8.!fIEj!]ukQ"9Ac2V>p\u%N?`<%hV'P@U%jn!<ET#!!#7^!!$j5!!)-T!"(Ch#.[,oCHqq$"TAB$
!r`0D!tWX,#7NlE!sf/7!l,TZ!WWKD!!!(SH!Op`6UkNE"98K%!!!'!!$)1BR0`in,+\c8!rr>($NgA=
2FoD#%ZZ*I>c(b3.XObr"U4u-!!*'"!<`\/*<HEuWrN8*!!&l,"TT/a2\cW,L2p3kj8]/goDemAr;Zi3
qu?`Yp]*$+)$'fL/4X)>!rrE'!#5P8"TSN>h9?0;#Jq&["9B.P!Z)+B(_m#N!KiOmGcrbg<t7Iu!!3-#
&-2b6!<<+_N;`fCW<EA(!"#_,$3:N%7hYn,];C$sVF=d-;@Nd6!<<Z3!!NE)%CE,:$3I(2"p"]2V#Uu-
&NV`T#mdSkDJ8&1!!Din!Oe!e!!)$V!!)'S!!o`5(Cmql9i4q3#QOo/!sAT7!"T&;boRl/$bu`D!Z7PX
"p>&/+;t.Y)ORn8TWT;*8P06g!!*-%!"&]7!!%ZP!WW5'rW!!3JmnWY+:M4&#S[fVXI>*H2eHT1('k-N
"pP,@!u(k?V\0RB"fD8!&J'D$!W`<175PAZ"h:_/MW4^9!<<,n!!%0?!!)-Z!!+n^p])YWhM=_5(KjpO
*ru?A"TT29"TSN8SJ)8A%_EM_!*BR=!u)7G0ams\$&tggV6:k;:KJG5!!E?'$igG0!!$F+!#l!1%Klc"
"U4r0!Ztnu$4.W/R\Q(D2K<VS/.3g/":,&C!sf#4$%!!\#mZn0"TUpp#QP5<'NHIi"pp6_WfZ6@!s8`"
!!!i6!!%iG!$FFTZ!+ahA9;]]!rrH1!!!,)^V.f2(C10V"L#VV[0d!7"VCbg!s&BIKU/g:Y:<gk?T\>h
!<<<&!!AjrXFU6L"pG!sY-+K&r;\04D%$[Z>]k4BH_jDhOapIB#7D%F":)T;Whp@;!W`T.Of#"B"p"W'
%OkHu&Hk"DL7O:a!"0YRq#CN@k2^:S!!@*"jb`[2$m@-'3P.ImLN@24!<=JJ"onW,PQ_L)$Q'$O"9SW<
!"fVB$k3Oe!<W=<Tqe!GY<6BFA68m3!!NE(!!IiTq>^[#!"f2;"TAB]9jn#1&@[sXE-8!`O0==\%LE=D
$3UM>PRIZs!tG>5!<E0/!"&o2"pQkT&JbM/X-eNnj8]f[&dS@8r;Zg\lMqPbJP@FA^M%_OCL.8H!!ET3
!!2ut%Km"C$4IOO!!iT*!$)pmrW!>:Q^!GnY#]2&AQfNA!!`T,!!`l5#m0l%()$i`+B1?X+:&4U]VLLJ
Ve1@nI;K]%rW"2D!!Nf;"98E'!WrN.%L<=Y%20^R.OGZ0"Jr/`I=UG_&VUYsiW'\Rc=\gm^-m'pGt`8d
"T\f5!!!$#rW",G#RLhH#nR7?!<EHR0)ttQL89!AA;@9GBR=hlBF+_?!WrT+!<r]1!Vl^4!XT#96X<>&
"s0tVIt;'[W()6'Na-i?!rW*&!=B,7!!)s")$L-U%LrpY2H2mM"V7<*EckN.jT#oI+92u6!"sP3(EEW&
^--ORDB=l>"TSZ7!Wi?&!WE'%!sJc."T/6$,RH.'!#nOfOF*=UK!$nGC2>5Y!!E9'#m:86&Hr:>"pFl)
5m%3$#>mp&"pG02\Yk"jPCBAqK7S_7WW`M*!!E?)$kNF>!!39)!<W?,#7_,11g1(e"])4eGbp%3jT$#,
'*)J;!:Tsg!WE'7!MXBNZ9K8>7rW]\,*)^,!!Ni:!!!'!!%S*R!WW9."TSNC&fgrP!>gNPNh;]0NiY?V
G@)b_!<W<'#m^_@"U+r0"U"`(+9`)S$:.![(^1d0Yed]VX1X@k9Ri.H3NE;c!!!-*"UcI\!<<*$!s&B&
$4I+G2`4&="qMrW[%jRbTmPf"&0_>ZC#o=1MoM"5HFtl@@!I01/V>bX!!<N7%0?S(!!4#H4T,6rZFdZW
NLH6!Y$$%.BfLo%!<<0*%2BNY&d8=<!sAc2"ptVF4ud']$46m>riZut]V(OgBp>TF8=haA!!!-/'c%2Q
!#P_;"tM!#$k!@FWMQGgLSg)airg]"$iiQY!!!&u!#XYTjPrG=?UD>9JTu#OH=-^Q!='5a*!-6@!!!'!
!!<cU3\1./&:M0rQ'5=>PDu_PKmn.oHs$@J-3Y)5.hrHu"U52:$5*k&6<[5#*!uh!YHYU/=M'rYVJi/u
N]<#-rW!-)&h>UN!s/<")?KsY/P8>='+5"oV5Uee;Pf.pj9Ih$)uq>fpAjaa)^=A$`a8bc81pi;G%u+3
JT;8'!!E]L)\*>`!rW*p"VE(A4obQ`!2[B>TqJWCR?)m';1itG-AudS"98Q8,:XfD"p>/<%iQ]M78d/$
$j@9FY-"q6Z%/@)J$iUOMOlSrG7alV!Y-J2,RXeXrW*r@$5tQ_8.,e3&@SI8['?TUPCRN(!AG?I!(.C`
!#*oEj35Eu,%!5F\S6G5Gn#:11D0Ka!=K&/!!**+qu@i?!#*&Q]s4B(SV9dbYA&rINZsEd/e.j]!<EN8
#m1/.-O(&#.1-k#'*\UY.B]eUYHk4,K1pQeGGL_-/YQ].%0-A/"qV@Q"8r3="UkD8"UG;<'.9ZYVQ?qs
S9[P;j:"C/7K>gYkl;L\i8rkHSV/6g'"V7kHZLWX@O2!S!W`3#"9o&5!!)]m)'-H*]VV?d>'PJ!?](8*
4+1K[!!!$""U"u+!!**%r<!$$r;[HKY-+n'WJskuH)5,BY*h_8AKh!P"U>JF!WiE%!!NB)!sA`1r<<iS
VP^8iV27r_E9%*\="aOt"nM`f!#=VWjIi)/!>--ZC4(AM*bK78!!!'#rW*')"pFPu)$dgb[%X=iNg5j4
DipoP1MpqQ!!!$""U"r*!!**%r<!$$r;Zg'riH[)XJL`<Q_eo%_OWf5E$5)Z"U>JF!WiE%!!!$&!WrQ.
"oSW;%&g2,USsl8M21.%8:35o%1MG#+6;G>Mm&*n8k?I2H%()m@Y#m-!X&K'!<EB/"U"o/!W2p5!<WE*
!5-%[['[$/T:<'/N3/7-AUYj%!!39*!r2il!!!'!Xq%\>Z(IYYUj83ASjdID)uTa>":5A9!r`3%!s8]*
"TS])!s&H(rMC"&Vj<X4itaP36i[H9kQ(VD*oZ)7D/E[iH?"F^87I?%!<NB(!!*'("pG,3!W`9$rW!]7
!s8T.]"Yk^Y,e:^PH][hUQnkmJg:3o!WrK*nGiOpriQa9ZEpBkOJRYcZ_UoCKH0pj"9f);!Wr?%!WrN-
rWN9)rW<c7#,e>qVl-DYLkXk:+EC0W#V>EEq>_;kjlP@TfmZCT\r:ofHV7Ut.0KeY!<W0!!W`?*r<36*
!s/?#&Zi@LXJVnbMN"a-LRj?'?$mjp!<*#h!"o@AZ*:UCYaL#pV3-M(O]Ph2(]FF;!!*6+r;Zj""T8Q*
"T\`,r;ZkiUAgnqV3-4UjA.7/2?<k#kPtnCioAk.[9=t0J,~>

%%EndBinary
grestore
np
229.635 -95.968 mo
261.135 -95.968 li
261.135 -129.718 li
229.635 -129.718 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 84.4648 75.208 ]ct
[31.5 0 0 33.75 145.17 171.176 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 42 
/H 45 
/M[42 0 0 -45 0 45 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
I_E"(CN"UMd*0t&VQdW2e9>nbR\?k!_RQhSXfo.B\?M]jLP(5=Tt/$tJ\JgrS82_LH-"(Uf[?Nc79Xkf
S%$SVZa-[/U7IjW[DL&%^TX5aKu^NmZFS*Ws6S[8QA0Qm;]Zu378[N=Js`7-Yd_'M[]c^2WMl\t[_fn^
IVi\8@s2j#?^&RP]shVu!!!$*&h@L`cJRO5dFd(&h:KTISX?%EQB](eDJX6=eBl:`Q):b!p<RSkJsrC:
_o9'eZ*UjG\@8N2P_t$EO.NenMLrOTWLRa9AU2>>f#Pe%5<r@pL7Q'%`3utSWM5rQXLH!gbegKKL4dLN
I\X6\bl@_'hOTscODRi2)(\3S@sWuqStrHl[C<`QW2Zl(WMm&5];TOYEb9K7@98Q4`4F'a*WQ0@#SJ_/
Z+o)Phr!/>dF$:]^TsMrLP19+_16WFDPF8:];)^Mbi@?,I#OYhX1"q'TUCq/TW,*$[%`hCM34=/Z@-bi
@(!5IML9Pt]tVh.[=TkT4]uEKT!c#;]u@q'^:p85ZG4Q!ZD!JBi5Vn*Z*i'*]t9]!Mj]fO1+kmpA9O*,
Vk^&dSX>e4\$rT?Whc5ZVlH;#E-c,;MK)dIeC;1Z\hsBd)@$j,F10iUd_j#Ne'l@Zai(W\NIQ>&d_UKV
IW'+uXK]+)ZbtGdkECIMQ(4qbVj3L4R\?RXXLYa5PDP-XS?0)FEMg1N[u,NUI_rYAe?tB!.Q:17JYBTe
_n`ps\\,PMU9hVP]X+H"NSqmY['@'gcF^BLR#?EPGsF,I:geR0S#rQbURIX>R^9H(W26;cWiE:mATE36
$?_5E>%l.5]t115rW$m>%P`.5^Ve:Ef%AR*g<dgFURRX<L4n1&UOd?'H&S8saN)KEcaT$]DKp\bG'Aq,
Od2K<_TBX2[&0+SQC=SKG\Vr3]Z%mmS!]e?USF<4A5#a0H^D1[^q[Rq]>2D!Q'7l?[^`r_YGq-N_R#i)
I\)gjR]WWhW2u1]6Ub7&QH%:e]sau7R$a;O]==o8R?s/(R$2!"Iq3DKCM%e0gXFs&<<iO)#9-?tXinu9
eC;gfd*p7YY+V2ORu`W^bbKc/EHmJ8]#i%9`m:)u=\Mas?tEhcDKCDsY.r)p_RHJ.QC+,9Wd&94WP-9l
?*KuoSsuFKRVPSQ0gnuSH\8c<`QQ'6a2+")UTM8A\$rE7o&@NiS=Q:9Q_^aaWhu\>5q+9H:hP60^<"=,
U6_%3\[f)NU77F2R%'COEdqS9Kl:q,^p2GHVB#^:!$)(F'Gu.LTYJdq`lufTcG?ZUP)G?]_n;b.J;/uC
I\OX#_k)'Y2]Mu*%L<1?!=gPRBnE"^_7R:cXJ25PSY)[/EIsR^^!Oa"XdbKR^8Hp?FEE%^GB@_@FH<WB
Za?]qPF\YW\@8uZ]'/4qZB^<&J;9Su]YLq3>V6sD5=eUT=(6EA^<*aUW5$-[ZDEhKM2@"_DK1&4C49`-
#->PEa-S1Up],14(M:A2gXFHmbf-fSLNn8q_n;b.ItirBTt8LcQtRTf;bU"_7R&pm-lsBqDj%-9]=YGL
Tq%I?T;$sXJs`dUccE/cRZs_&@!fQ#bh^a`[]G=#=_EDWZ)EtPR\['p[^j#[kN'[gQ&:?JL6m@o\\38P
8nqslVm*;+Uk*5\BSi@OXLc0^[A&hHM2-h^DK0r0C4Br.QbC\L(B=FK$mIbb*#/tc!!!'FBWU%<cH!Ji
NeD_'GG:CfQB[r>WjB()ITm-Z-8.&02Dd-B1Gh6<%k'2-BpY6MQ_'k@TUhX?Ll7OeVR!4sUpGNg[Xah#
gu%>cmcNHcg>/?LLP)M`XKSIr[^rNFZF/E1]<IcaMMdUbVQYe>2ij?!\_662me#lEO(NBGM:9M^_6^8:
PCnC8Z#XT(@qU4/J<$h-.f]PP$kF-r*#9;-)Ckjh!<F%6`ltHRahN48>[4"hPa7T*V5U0!So&p,*#C(`
2`<QN1,CjG3C,bg-7i&RP+%Z+T:VaISX5.kQC4PNVN\*\KliL#i9T^tna>T&kh4G:[%;MhQC>"[WiEM8
ZaR<rd(Q`VNf/^JR@\Ol;0/,/ZGYA[meZtJkj5=->[;fhb/(TeSWnnZJ$O38I:d)5A4rYV(]]!b!=0M[
*$6.;)'Kk?1DL2r!#'^tc)RA7P]'l7OG/IIS#O*1VibX;"<9*M8k;B;4ukP[5;55R.2i0d8nrs-Nh*5M
VkgGbSY;(%K7AWNVhKo>io@MQZ*LXA]Z96cqW-P_[Y^9[aN(6]Y,S_8cGR#rX/<,"SX+Xi0k".KT;JEW
U7e-V[-G@)cbuW!7"__]a/l23OGAP*HZXjUCNErdAgdWZ!=TJb+;u(2&.o[4'/:./!rr<4AAPs?U98lb
Eg2<6MOUTZ\>X[A/hemu"Y1,]!"KPe.Q0%<1aN,F<H!GJSc5T!V6$8ZTob1cJ;AZ!NjmEY<Nq6p8hr+m
F-<uRkNMC2jK!$I[E,_YXK&Y<b/CZoWN*8'T64"*AUJAoD,Du3,;Du4Q`T#rkOu`&;0K:`];VKeLk`j"
FFn@IG[t(u!<E9,!WW8t!$MLR*#9D5#ljr5DSWNUXF>JAU6^=[O.sJ&ND1'A5VjYfrW2lrE[EG'3A2g,
$kc*ALRbTQYG\+YV5]]7H$4X^QF=f<=<@MC":>SD"q*,/S($Qam-'^ZU"R5SQ(=JC`4i@ZZbY8<T4:)q
F^[KP&J5Na$O-\6%SCE9b1l.8?VH.'_n<+?P)mb;E-uPGJ8IFQ!!<W3rW)]n+T``1'+P?L!"kC4WK;aQ
EhSeLJ<-G@\VEHl6S\WA!<E9$!Vudf0.nY(2'+D^I@I:BYGn7[USsH5GBJ+GT[C,W)[-NL!<NB.$lKR#
07qU7mISMRJ?lt]PFA/@`Or7VYeAZ0QWHh3@2B=Z(D6cY$4$P6*WcTY7B5&)q4Uo"VT60DSWJoSIr'CJ
FaI^S!<<i:nc2)g&e5Nd!!,crRs]m0Ek8E%H[q0_WGOI1/HGhk,67fJ$kWsV$5EOJ!$Oa#4ZOK$:32o3
\[AZ%JuGfDO*5JfI(@RM&GuP+!(R:r,S4Oib09.aN1-u=MNF*kbIj^[\&I1FP$_@2-Njnp"p+f,!sA].
!!!T<<NkuOeU(\W[(`rKT:Ec?C4'uADc@h[!!Vil(EPU`,67cYEh7r?IXeu3I=$R-XJ&Q\-iO)L/fY6%
":"i7,7b(fKE(ug76i[[,!C":\[f,ONIe%2Sr@c,?&cpn2%flh"8MpB'V,sPFMuVdd$'-WRuEMpR*W@@
[^X3(^2S(/0ED>)$kELB!r`<C!W`@X$km77mDG0&Cnnk]W1KKnE,'iAD.5j7"p=T"qu?^`rW!`h/f=oq
"AYncMKsN<S;N&uVNk6q+(.20!%JX7+V#(a!@VW`d^<U/$6VGh1FiPlBRlh_\ZDErWHrcEI'gds4pV?(
'`J(`#QOr]Anbg*!!"0fh!O4;Fct:qU6CeBSts-Ff]eE1H[AQq!soGN"9\]3$m$*LEg!S2'F/BgaL['e
BXb:>S!KpqDO>-MGnU2[#PA'!!?<iurW#Um+rqF'!!J7]L2h(#RYccsW0'^V,]3S^:6113CDmW^2N4a'
m.8D(!<=r83&V^3COi.c\?r$)UjI?=D5>6g$k?[EG?ZKr"9:089sU7L@6GP:;9JG#c\dCl]qppWZ_=))
c/%-$<JHSO%9'$CGVoI$$9r$BS?r795la$Hcd&.^>,&!eS<q!AC5H_BAd/5=(B=F9K,YR'!!O??Pd"X4
rW",T+X.O!!G7XRFDm_9LPDe.NB@A$5nO][Unk)UA2FsMfY_WSNeNLp*W\MZ2`W]<B6p)O[]>sjU4.TE
?_c:9(EeNrPff^$!!?McJ4<n&UfRO7QJqDiW,o8UY*bNjZ_atGbHG&5JPRF2L9R;#<[%qnKU73Z<Kjq>
$R1YOkIc:@S[,AiSB[%.HYmk#!<<N,!!Fs)DMB)/!!<gM499m84I[#b!"9Ja*X)O7Q`P^cSX,%cWiCn<
(bQd/<AH.<OKtE9+e6eq'H'2siBRDW,rRhM'k2N[YI:L&TV6jaI:'S5*sPk2+]=iP0`VZ,KJif46`GJ6
#\DHPi4Ng![]c'_^pBr?`m:Mb>';J->rXNDBkg?M/#SRs!rsK:^8E1m<N=usQplt5Y+M<1NG`lWFZog+
"TSN(!!!'K;Z6Xs6s9Hg!N9i6!)<b?,SgA1K<KfQSW\\]X/UqN+ZBo32@0R%7'j]a0Yu"&'EA;eoMZ,$
*AooD'i]C@WNW%^TV7!lJT8NU%KJ0h!!$3e8cT$<J.`(j0LEC.#66F#n)VT,Of>(=REWaYXL,'^:I&%r
"?7&&)DcAL$T?Cp)?9aJN0tq$0XLfC\57gRXJV?#LNdlYBIs5b"8W!$IL6&TFA_u:!FTpH!$qdi-R8[,
?AWrKS<JY^Whb5R*ub:a!"BkU5IA6\3Q]T+$NL0PC$8S0!"CYD67,NQPH(j]OeJM$JU*!a\HE$8$ig9/
l:M$`I"DS'"WjRo#ll0Zk2FI2Mkcr1RE`[WXg4aM?9L7P#mM1h'/+?A$U*@0%flY4J<VDr,a.NT]jlG`
Wi;N(I!KsO<$)GA!!Rl[!!&0^r;ZjZ?2ahG!>Zt0!=_tYKR]\XK8-@uH>,#4%0R1C?U1*qIN:euYSI6@
-bAM9$ip>Y3^5VuF,ZouT8]>7L4aZ5b_QT+"ookTC6Ca\!HkIc#RCEQYTs2RU#4qTP_l03S"@gO]<%ia
?;`Z]"To;@?:''m4Tn41HN!mH)4>^a'F5M)kkiPZJucAaTYl"rF(%-=$3Bu'!?P/<!!.XRr;ZjeA,QC)
%ji\0$rrXYNhhejL8^S^C+o_i"p#!@J'F]R'/mb<,67fc[,asm!<=c95sRnZN1mAGMjg8kHu5+mT)\rn
!%C*mFq"EOEOI;$"orSF-3-14T]Y^hTRrc1R%)+C\#Q<Y=&V'a!!EB6@skCp%L"l?IKBKL&sIGR$5S'd
s4!E^V6mCra`_Q??8)Qk!W)iu"I^D2!!-hTr;ZjV?2XaO'f%BR#YL)5JY\QaLSp\ZF!1M`#7q(ugVUXO
&N@/"1'.V"[eNGt!!rW^2F9SsDiLHl>F^bGSV_l2UqrAt!<`B&GD_JH!!$l83=62qFMfL,&$#*Resq8\
TU2.ki5)1dLJq:u!WW<2#;k;9Lctu)`-Vmm!"k?:&-3Z,s6&7$Gb;1@SAU22AS<t)'D_\1OFL=1!!-#!
r;Zj\Gl7UK*?@!H#==#qI\\``KSHCoCNDK9!<N<*(MfnaRi4?(Y9F)L%&rr*&d&.k3C>l%F,ZfoS;j)1
Ljs*7esuX<7OE8B=9&>@YU^.d!,'5.!u.m*in'NPVPBHGbM9n2Vh7lN4p(cb!<j9JN/L[>5Lb&]!!!+U
F<1c1O8nt4Ne4:<X.."Y#'srp1'A<mq>^^V@0HW2C0pi=!@;gc!+-]j2@0dpNIcJUR>-NmP\Ftc!!sYN
'+Z6LQ/b+OYglGY!W[QEAeb:P1HRrZ;K\/#Xdb-9S:l-!UsGS;&ci(7!*RQ\!!$tp*=!$$Z(<!:/[Og+
d>EmfVNR7dbdnLlYE*++71TP8"UtVP2L^`&/B")&rW!aXMCT>_MY?8PEe1NsUR/uDF`1hG"rm[>!!R7"
!!$#<r;ZjVFT)8!!?*=;!tf[8EG_V@L5;UiChtO19)o_1,7asBr(\*,fP(Wm"+U)R(^q6=4?tB!FHWW+
S;*N)#_R>9UWg&-!"Jo-9IRo*!!$en1]n"@^mGu?4iQmR`dX;gW0<Rga1ARZOCMrj+?BK7!>u%GH_DN.
[@9&S!!dq1-5J>8rTq",Mo;cqRE'/eG%*03)Zfa7"^ka=!'kW(!!,c2rW!E1*\&B8*0lk9FfLpfLnK3]
DI5"5&Ig'1$kb4[gHlO6c\Xb51lU$a";*1F4[:T0H(;4OS;<`,JTkq!eA)_)+;Y"X6agb1$$;#*)AGN9
M&.X\h>$0GI\t,bS=.:%[_'8RIXc-&((D5r!sKp$MA7M:T2cO/2j]@J(/2F5d$S+#\uDO%b@l0KB0cS2
*!H';#%'4f!'"s%rVut2<W2u/%k&qD!&:FDQ'8/9Lkh[nG$?g0"qZ'+<Hs@fYq5uc]ZRmnMMe8`$oTn%
3&`R)H(2.RSVX#6Jpqa)hld@sAmllMS\.Gm!(q^&MiXO>?N;aGkOmK/KsSUmS=.:)\\#\cM(<gr0aeJ"
>;]<!KP1]*E/oQiC6GB*$6=EBn[X<^S$]#lVTWb/K54L-'ajp?:C%.)!A83o!!!*j;_p%+Oq7Tn"W/U,
#m!PgOIV`>To"T!Tm9N_3\LIf\(K9VY#>N*#$@_]r:%a+!<=r63AiZ_CP&=j^mp@YTRhQ9M,hsl0*!Z,
Xd+3B/Hc%c@(W4j?UH([E7+%Ec)6lD]q_$a_5t>ccdebAH^cts,_Li/V1p/o%j45[Ml-0W/H@Mr`m^Gu
Dka%sT:O5FOG@jp/._q#rW!(=HtH_1qu?jtI"bcArW!TC*$c'u#A0'LN/4O/M2J((I825?.<GneCWO`&
>S%2C!<?8fUOc#Z*]H2A4#T&qBRlne^RU=]Sq2K>LXagj$US'fN+3k."qCVGA78"4!!#3\j7N,lXKC*k
VjWpgY/8-)i2D-UFaXcZ8:cJL5Q_!)%feOpAT:!@$#R-"iL>(E\u;6mSBZ,DLie2*$j?b<'EA+6>>ZXA
!!*H2r;[T8+XAKK#9/enP)+e&\<Mi3LOW,j4WOG$"Y;VS&ded@!!39/$2soC)_*a77m^-tPHVF/_2W].
YJ\2VFeHCRCEX#^!$M@H"9J`3"U#/qNnE^idArb:[%`nUT%*GMSW/DW@"FYl#;Zbq,:F32"8`';"9o;g
J)1.0MJdBnV66M[Pdu7)G_Tm!":u4Imf5ZT%NdDG#nKP"ZA4$\]"+&^Ner<j7mSg4!!!iW&./UD!<<-'
"onW//NGXI68UB&Fd&o9]t]PORBFHCY(3:bc'SN!#Q"KL"pG)4"98HXGIH`,m'E%_a0_D(R@Vgt^n$I>
L2DR=TN`BC$4m=B!r;m8"=S#ns8T*1=Fd-BUS=->\pfW]Jn@[`&KM;L!#bkQ*%*0<!@NJmNf&40V3Zmr
SY)="<_GM1#Q"K&!<WB$!)<VF5XIb'76F7]I$gk;Z*^![VQ$bqQZ@VVh9:d<#mLbA"pkP="q(_W97sS"
i8M;8R(^kNS=u^UbMKXtOcPreI[I[=71K>""9\f0!W<!>#Us;\l2Ud9?Yl4DW1ffHNl-X1F+7t6+:]G7
%fcV%!$2.W1HIT2!t&>CUkG"_H_m'aNLuc4MbQDn5<KSd!VcXd,=tEr6pNU]:g\!eQ`d[&\"&JTWN;qe
JTR.&kK&$'*>/SZ!W`<*%jG&9XMs&L^RV^Xf?:FpUSY$7gUNf9O.Db[J>C8H4V\&,#6b2,!$2;'F-jW?
s3>#"V6mM1UnF!7_hX(iH>%=^"pbkm'(c/G#T><[0ba[+>*Q%fUS*I!OEuJ>WjBIFED8GY5rKbpqu@uF
$kG'Q4?l2&69%e`IY3iXWNE/!\?)p1Q\9p2AojWrn^XCf;+ED_&eQ!57>.nqhW*A#L5`=Y`icAEY-kjX
`N>o/Uq!gfGC?L)LeBW=%grj\*%<^QK<)f>j11=qT>\XPXJD2DMTUU/H[K@M<"]E?+Y=2u!$VFN*%3a1
+pSK]^;-VGYF(6)OEuJ?X0KLNLg)Vh5!hh39n#i7=(5l[@oGoc6pWgl7q6LeL6J4-WMcT&XKJFdK7J2r
KU9@6oA7O&Ul0G6F,6^+cft)Y[A08%_90^)XJi2*\AH4jV4jTq_53$1L9.\@I=QKWCit;kT:`4/m*DZ(
X.lo<^U^G=Q&UXCKT:\4?%-KP(Bb$f/0YlK&Uk#l$PXsM1+Y4K0bY!88qt(!];h?XJq/r3LmY3C]=FM_
?qEj`;+sDE6q9j@8Oc$15XICO0MmLgR\HjbWhZ,S\u_s(Oahq1Jr5AGXj,PTkMOS)^V@kAiTL%6d\jS-
XJVhgT:i3g\A#\cZE^R0]=b87IrTn+Vk9$&IXZj'NLZuQZ,XhB>]HO_aNDB4XI5-+L!,+7O+CG^F'1UA
#S8ON0cq,E()e2>.juVp1(OBh3iKI)`Or15JTu<tIu'PoWk5g2Kka1=6r$B?5Y+UG:J=8D4?>>N.m-Xe
TVJ6[Y,\7fS%Pl)T9+MRJ:NoUPF/f%e_Jp2fRD;qdb<R<jP7Y\`RhAoV4O0MX0B1I]s>#OY,/V>WMYo$
B7Q84Jq8lKT;&0dWN2n_G\i#.c+q*4[]Q-^LPO')S<ne,H?W4g2$j?r.4>lD*\B9,1,0sm)%d&T%Q_;L
d(Q6VU4IH0Tp_LES!fe;T9YOVCL((GM406WH%(L/R%C=`US46JTq/3h[C3QHU7I^OSWfD,Q(+J4IreLj
=(uAA>?b]JD/*Q];c?1`=C-3,R[08+RAQsp^V.(`^9aW,S<&5O@VTFlDf^VXIWL+#PEVN-N.uh-J?-`.
_RHM7N/*,6R"q;iCi=Q"/gLN'!XAr9(Cq;j**"1,)B0\,&el'3@E6R(X.#DlF`a=DStDL?R[]q'B.Fo*
!!")q+X.O?+Y5-#3]]Gd6XlC[ZF%*NYbR_UW19'<Q^+,:Q#BA8'b)#r!!<B7$5<sUr;\)D#8B@QQBd`&
RA[=)_nWai^9aW-SW@ko-mB?@'cJMB+r2CM*A/fp0J>(001hk\a2PQkU6(:jc^BQ\Lhq'W<u:u)!#nP?
a1\^PX+Z4]Z)OS!ObemZXcHj>+;kFi#86t9*WQQf*ucgd*?J1<Q`@F*]t1ABS=Yq&O.E#O_5LcMq>^[$
$3q"C!;lg<!?"^dUn4-FS"m$k^:^tlbI+10KQ^NR$OI"E$3CS4!#u"C#6k_N"U?cE^V[XkXJ_DJNmO)H
SVh?$DG:E&!$XD)aMP9^[?H]4Z)OV"ObegXVh7Vp/05H7"pk81!<r]V6lJ'+6UVn,:l:[C\%K>_Xe_JY
PDkQnU:%h1=SMk""pu@Z'Fas@*shrZ9S&q2S=,hAWj97L\A-+mV36LR:a$>b%Moc["8i-=$m$/h*?G=`
09<i[]!\T5QB7*QQAD/jDf'AY"RuKh!'N3AcGd,aXH&'jT9l4GP)GHt`L^727jJ0:!XAoE03D;?PArL"
G!.HnH[qT^\@fPdXf&P+O-?'(ZGi\Br;\_W!!!-(#88U18O"?u,r?&78!Lp#XdtrOS"cshW5HlmWfD=>
9,\K^#QXr0#m1AB,o]?C.gHnM6lct=KX7qiZDXXkQ''R`MP5uMD.c-:oDemn!W)j(!AUOua0_G9LOO]&
~>

%%EndBinary
grestore
np
320.755 -95.968 mo
352.255 -95.968 li
352.255 -129.718 li
320.755 -129.718 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 84.4648 75.208 ]ct
[31.5 0 0 33.75 236.29 171.176 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 42 
/H 45 
/M[42 0 0 -45 0 45 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 42 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
IYWi;M4_E-aLe+=Z,+udY]l.cNL?B.T=;YWb/:]aU8auOM1^JATt%eCVOj3%F)Yc<VT6]teD,4"5?rK8
[Cj)CP`L`aT!l,6Z,=Mq]<@f]KX%;Y\]F.;leJk6PE9f\0I]FW:Ln[,T!l2E`kf-[UoLSuV4s]a[_'8G
IWfsX@!$g$J$$f8aLX,.!!!'.02[8Nf@80gb1>;"g=*j7P`;*+Mi*@JLP_Y9d`JhjU9VD^s0cKiK8c%a
SY!4-aiD6/V4XNXOG8==O.NblYGIkYH?=.>FJlgmgsP>5+#6o@Vm*_CSWA_iPbPUqZEqKobJL?GLOuY%
;m3jXli$4o[?m%oG>p::3^$2GFGZ^(_o0@$Z)";%XK8P.WMcl-]p<PXF^fND?":@nb-J]S"98E&$7A>i
f##JNcICY(f#u+J\$)HcItN9UWW%f'O0kpbW2[8Ke,QdtOIDoEU7A!YVPKu^X0o:@Z_!;9Lln1-["Ngn
I[H1]Jpi?G^W"a:]3?+(9OrX8UTCPtX094Qa3(*K[D:#,ZC[8>d([$(^!#<N\#Ym[JX:R^/4ENMHB+r7
[^irUR?s5'\%&QDXJ_Y\VlGScEd28LO)&a+d`f2FL^=%]!td4cO4Dt8eB#\Vai2H@]=YYTNH0JqZD`Y<
IYs2mX/Vql[E7)$]R#<lQ_'e<St2ILW2Ql+[(!E7PDP3ZSZK2NI?p7`P_"1:SAr=i_RX.q,XGXWNMW_U
X/iM8]uA'iUp7PM_6]r%NR5DN_S++I`4Vn3Q%b<D>qeH8??(jt^;@XpXdb`EQ*[j%V59r_UoCPSAoW-5
IXm;gHA0Jg^rLm6!!!$++@q@4bg4hng=4?egs3L2VP0B:KS%[pRX9!oLmt9KZa@EdjK`W6DgmP#H\6s*
MiO@=dac1N[%inPQC=PIEFss+[(E?%Nh*M`[],-t=]\gAHBGGGa2Z'9_8j^3P`qc?\$icYY,MBdbe'pQ
I]K*5VP'QSVRM@@1Iu/4X6%^K_R?A0P`(d9]XY&6R$j2(R"&=\IV<eXARq:fhq$S`.0'>K%4PPQ]tq\1
c-ODIb0nMQY+(ZBR>d-TbaEftF,6?f\?2sK`8?th92Jr+Ci<rt@qpCY\C9'H_RHJ.Q'Rl6WcVj/XL#I;
>a1AH[CWcFJQ#9.5tk<oI#5MVeCVa`b/':*UTM/8['m0;qX)J>WhlbiUo^5YTr#/:/Kc`>?[J0*`R)c5
Q][/e]Y(SSTUV:1QC*M7FF\(GLM:kFh8J(+N"#Xb*<H]r-?4L'\AuFu`QZQR_5<ESLl[VEb`R$bFHWU.
^X&m;L2:HkrW$RA%M'$L#9#d,H(`aA^UUYMTq%O@T:pF=MmU=B\=AVEWPZd%ODBi'H$a17BOcFMZ.IO;
St;(0R\d6uZa@BWqu=pPSsGY*VmEJ5[)7u:$j7S47oj2%ATsNT^7D1#^VR^oUlpf<LBriAF+@k<LMheM
Z*q6`Q6ub.!,W?S\(A^=c-+/BWf_[EH[O5aO`YG\PGu(2XIX?2-V?Wc9i4\X6T5Y["=n)KhpB'HZ)OFe
R@TqCF_$E;^s'9YLm"jLb^*!%g="[-]WA3-Lj!T_PGFeBPa.]4XL5IB[C6)6aLe16R@'SJ2m0?jCIMrA
;h1[=XgXpF>"VtGOJA\c_7m%GP`:?OKo&lNIqN\]H>&bhesZjE":,,P4Y7m#%/g/m*Fbtpd`]5#T94D1
EGrOuIX-3h[_Ku/P&3Vf"tLrE0K)$R2DZp;)#s^]?\Of8P*_`2S=lFDK6*WdZG2ofLPENQhR.m#g@b+(
lJC+@g#1l*OEG]>_lTr<UpRS3ZF.++ke"$dP+eYR\[&qt2-$96PcMaTj6Q.$nXj#U;iS]9_ni[bU5sqV
J"LLoF^f9OG_M:%Taq,'#mgkK*@;pL(_RJ`rW!`__o9j&S\q^TAmATT[![+DJ?l_udu%=X%h:3G-n.#8
5<V"b0eY"/2^^7eMjL!#S=ZCJTq?pWTWtc8R>6<O[$>p,a5d!lp@mq2f\GZLf$:LHB6p,MYcXq3Za[NW
mH;0dRus53T>%FL4AqBGTV0!Rme6JMrUIn1N`f/%\&Z1kWM#K0JUsA+E-Po/IqDofT+_3R!"';G$lUTO
.j5lK'FYEY!!!OW`mM#^V35k6C8.,CH\7EmZa-KA(B>L31e:/)5!D4r4ubPZ0/+XO!(q!]K8cA#Wi2_Y
LoRbZV1O)HNhLcY`p)mB`3QA?WOpR1nFGf0g8TC_\AcFfXfSS0\CJO!W1BEaVlm=V4uRLaYdgd&P*;90
]A26BrSlqIC-R<W^Vm:QUQ1+aWGuj&Ao;]mCOR]4!!3fM0-V)A&JZE:*[r*D'a=X<%qru!QD1I,G^#pO
H@(@.]s=l%6m=6;*"Ebgqu@lH)([Ns1GpKa*)g^-Mk6iGVkfW8WjAY"Jpr8nEJ26bbYu37FBCmq:2GZb
eaD\kp"6EYJ@EJ(X0&A,[aiC$WLf]gV5oJR89:&HCK!DL.PEteDNDm2jmMcIED1G]_niCFNJE4lF`2YA
Ed(Ys.00DQ$j-2(+T`,k'H/%u!!!@E_R6;;F`VSsSVDiSOJJM"<@'[s3XYog#m:/-rW%!H&irKH0-VeL
%nC2fS?B*"WMZ#_Xe_SKLP'o*W5l#Q1^O9d!sJo:'f]!Da5c%:l]QFafta;FR[p:jWL]fWX2)-+Bh;rl
CGQqL&IJgM#71nl6@?]8i7md(7t]@.]rm`cO2?-XH>J"eCGQ4r"<%IC!;HO6"YVSE#Rpb6&=(89Mg08_
U7?slLl\C)GsO2\4T5?[!Vl^f&hc0s,rH_sB7QMSYck%'Q)^s^SrSPLAs(-<?69XW!!EZ=#mU_K%PrLI
m.ohfK7L>GT9Gh=V8'($U7eX$["_R^M/O@;$P!Rj%1N[N#RM(T-t94Vs6$(V@\q2YW1&g/`Hc3BCjq7U
*ruBc#P%j`%3ZSs&HDi-\>Fb.EcSXhPE(KRKRd2S2G"Ya#87a\#6Ou-"q;@[#R;VM8MiFI),>7B[CNWI
Um7aRT;/*HN-(i2B*\>7q#DQA7B"tdmCnFGZ^Qc7PaJP@PG"\R\Z:3VA:HE?$5<pP!r`0A!Wri?&L:]2
s6/0^?%f`+\#>jd]l%D(CNk/.'EA1Mn,ORd;&LV[!#0^UMMcV%[AT1HM2$\36o[@P!!!rH'+Y<O,6IuQ
&0N/@#lkc)4u=Z03cgh%\?i?4Q(k4KT:Cp`K<U@^#Q"K$!W)ja"qt@Xk2FRHJ>/ToP*;64R?aG>Wj/@0
?ZJU="s=6^"Te])!!369+>,&pDWLi8O()dt_nN%=RBgO;F_Pc17KNSspAjsg73FB(#64g#Y+CAiFf:mh
Ml*A5<!jd\+ohWE*#]_''ESCtJ^`kh<u2,[4?5JN$T`!PSuoS`Kp&'VI?f_ucY5$D"9Ac,!%\BU!&AVc
N]R4@,D+hBpU>R1gs;^\NT83qdDs;EF[g%d1_0p$-3OGR!$<R00LnoJAKh3VFl(g%IR@VVYF1`GSonk6
C2/,+!!3Q$!!<BE.KfYM7fb"`.0BPPQ*5CKBrI\]N2<A18,t/T!WcGXE0jW:#QdS`a8c2<b#ncG1,_-F
*].S[TsDCpLQn6TI#r]Kf52*&@=V'U,Q7ZD1l>#EcF.sq-PKS*kOQHLL<7]?R$-:T^Wsj=Zt1n3GS:Eq
Q#]S?"9BfgLiHmHRs?1X8%QddN)s8]ZCm_XWd\oEB4k`X!!Ec3!!>(^"T/6'5%7ZG=VC]6+qkqA#lk!C
Xd4B\Y,75?Vl5M6%4OUD)M5#fV2%nu)3*UmDe=WaYd#>O4#&ZP1aupWRBF&`Lm49SH\Q7EdmX<eNg#UR
SH&Wk@tK.e<L1[8!$%NgmaA%_Y/[Z5P0qUe^;.OX:deqh#Ub_U^j]'#$8.sPD&P'AIqf*5O36FdIp/)C
Y+VN#LiRuUAOle$"9&9'4L:N1')hk5,Ch0BIK:dL'EA+@'d4@s!'-UNK7L/&NfU-<KesVm)$F#94*-^j
O=hoUbuYGk5I9?0!=^Y?4$Y#kH'tbCP_bQhI=?WU_pBV?>Z<1UYgO`r%!Hh:!!#O1O9,]'h!En2GEfP;
RZPh@]",\nRS-Rg-PB`c5]^gW9F<i!T,n+9+XV\p&K"N_hnkg\HDdd4T>-2&G%k_M!!!'#!!30$#s;5e
!!-2$r;ZkS>Q+Ut&0N26!#'aQH$6HkP*E,OL.!(6&-+?q!ZO[f\L]V_fK'cJ$$bi2"p,o(3^G&aFH3&u
PD>BeJ:Dob_pTA&2&uZ(@+7UF$%\3E"9gDEYCZiV1Wnn;aa8fHWL9-t^oXZK[u=-X>o3\u(BtjMOCehM
]6F\`!$%])+pBC'n_q,kGH.d@R_aDiEGfJA!!*/t!!Sks!!%dDr;Zk4C]4;J"r\a6!=<D&HZu]iOclrK
JQ*m'#lXf5)\kJl_(RmugboK>!-i8D<t#':0KMQS89BlfZ'C*/Q%"+'J]Y20!<NN6#$0;K!"OaJ"oncK
UO`aP,I-7`d"m@UVk0@"\>uaEZ%c[d2%g#p"rnF@O_kIY^Np1g!"Y<b.h*JYk1RXjFJZ%8S]#PaE,Ju*
"p+N""elA)!1cg^!!,Z(rW%9G'd>73#[E=GKX%G?Q*@*3@3GUT#QOi@'U64b+?n8k('"@b^>i0&!!"`7
68q>NLRY?3LR+BZG\rGXO9uF#!<rO4G";T=Oi/:E!rul%,m+RDjPJFOKVtfAT>Ib+UTpJ9BLWR?$j6PD
&=:I""!Nq8!!!$am?T@="9j,Jo\>1JWNNFtbA:m1BLW[H!Vucs+DUlU!H:1"!!,iLr;[EG,VoZ2;MgQq
ZDX"SXe0]I/,fN2"TUi2]:DA)1<Iuo"p#^Lfi8[c!&Zi+4@F(CR];d2QC<>GB9UW6!<EZ8-;8nu'*&&h
fImO5!*ba:#!EKVlfQigK;5<:T"_A'Uofu&DH%VX!=/ff@F1YT"W*;4!!!$Ue<2Hj#&jPAk)Ob^X/VZ:
Chn!"2[gE&qZ$["La`6&!F&\)!!,$#r;\5e.ldqB8:ZPLZDEeNX.XWN/-#_O!<=Id^U8\20"f.Y!<=+D
kZS,k#llkE6p<tSKp\`BT8oS8J9>UocAi)0"p5<mIrn3]!//Z[#QOj0Td]sXT^:OhT7Wc:TV&`qUn4KP
DJ`8]"TSW**jO&%3!C.WB*SD=2;4ET!=4DZo]hWaT<>)[eoc4Q><331!rDs!Oc<QD!!,_lr;ZjXQi-mj
+!`rY#==5tHa3mPPa&8@FD<r;!-82C'5ahbU)P;faYO8(&#A?%$ig8a4%)/#DM=FRT8fJ8JTYXoifXEI
#6t;sEd2$n!.iW`'`\52T/ZicTB>%^R"q]BSXm<kUS"EKCi3ks!s/T-%U$'Y9a)&dBEnM>,K,p6!saJY
p>_*\WN`.aeSk_8Dd51.)@?9@#6@M>#64`n>Q"O&,*Dg(?Q(7O#ROIiG&aOPNfL$*DeLm+!s\f+"pRAX
m7\=pgL(`r!,M@U(]Xdu5".8'E/C*_U5u(FK6Ct!es6RM"p"](<l&hW!-+J^$j@N;M^SQUW9*-gMibEP
T:ifpTeE.?PA>2C'aG'J!!<<_KT6lgUl[P<!#(Wm8Iunoo^0kDJ?uDMP148fF^[*6*!5p9"`?X,!'tr0
!!,!4r;[KN0/NbBFdR8jWLJp0WL@a=1C4-^!$;[c!0I4j+/Rh@%fcTIpimbg)`U&L.ogJCSZ8NJTqhmH
GA*MuY6Y%-:&k>7[=J;YE19B("X^"%-363CmcqoFR`Dh3V7NItUT9VrEaL:#!<E00&cmEL-R,:I:&k82
U7t-k0;njH]kNDCY+q<3B6&6/2$t<*q#CUsBE/#pI0'<I!D%e@!"K)V1arGEQ(EkcTTk1cU4/GIA2,55
!##kG"<FW,9b2ilTMR'nNnn+G$naY-5pp#\OJT+[Pc(I9IrLt3aq"Oj(B=Fl_f>_[ApnSQ)bI/j+<Fn@
p#s#7UWKj@UVEe*Vm)\2F(.lU";hgU"9N+o*&4V4FsRDEKSV9%9t9fFRTG?MUS+7+D0C/?6j!r<!s/5u
#!tTU!%!%8rVut!=8i21&2#^T!%45#R$XJ2KnlIqFC?gO('m]M5W!l&c9).sV9-fdOHQY&#W4M'4?5')
FHNE'WgB`aM2$/?f?kNL94K._LYH)7!%quITUW7,@0%U-jS.B1K!<+sW2782W2$\rGq<oD<u_`C@Q?#4
Ck!$;AY,?:D2=3d%jQDKp:uJkQEHdOSBuJ/F`U\%'a"O:!!NQ,!"!6ZrW#AAF]:>0NY2<l"<9'>$NWAR
MO9[#O+2\PSp=Qt0J`bdNhjbIds;W/"#u(mp@ZC&#6?eE4ZYPiBmQ2IZ`BY#W/ZacQ;ukt2%):&NJ3OU
9*tY#6__,^EDe)+A'O92d&<8L`3?)5^pgSH[BtO(EbdT@2Nt/_C2#U,/i6FWFG@/\+95*@b1EG6DkEho
R[;<RL2_H]+VG"_rW!'kE25<Dqu?jd@qoZprW!TL,:jZ:#%<USN/4$dIY",aHs.bD3G]!%C7`Q(N?/0-
!s(<.Mh4A6*%sK94ZGGtApTiDZE9\&W/ZjiP0W6('*2["L6kO7!"&].8m4Lp!!#$@hWaURWN4[o\>,b4
^:0lK]819+H#4/tAt?qY49,@J/e0Wt7St?2!//S@e!t]6[\]CZQI(YND1.0h%fm(D$31&3;PQ>TqZ$Ts
qu@K8.O-GW#8W)]SV;[-\WVSuIXG!\73MR0"=lkZ&.AFD!XSi-rW!uS1-J&j3`C'XWjB:MO+!A%YdgcU
SBeoc0,FTg#mU;-*<H6K$PG[^aP?I2T:E'dR?No)al0\9U7\&kG+!=T+:8T13YV`!r<*$!)?L-iDoD/!
O`Z,M^:L/2Q,JE)TR(lp"puISmJoNd.7"^Q(1+)@JUMdS]9@l%IX>9c7Pb&F!#-X\!sJo:#m^_?!<<*?
2a'Gp2`+WWN2sA!^Q<l/['7*GJXOp<RfQ4ppAdYh"q*P<[,('5]pY_,YaUiAT?-$$YF_;XEcmt=72cOE
*ru?B!WrN+!<<*#**T''s2]_-M6Xq+UnO$lM0YM4GARcp,S'8C)%S/X1^X=/HF0K(KmokdLkq7]Q@M\)
4Yd?G!!!&u!!!&t!-&,g4[;8!6UFUcHBkJ9Z*g?mTW=TOQ?7D[kL,Ya$O$nB"q(eE"pkJR7X1oYk3KOK
S@-57S"H@Q^sK-`W2[+cDiUlV71KS.#6P&2!s8T,!t6YaQ-B.*MfO<A^Ug\JSs.KhFH(HhJ0kLC*t&&K
o)KaA.Q'=%#S^@=YFV>LMPcbrM3XBmN(lPo5<TecpAcE]8k_cE4u+NX?#Y=WW3rq?Tp_URR[BIoGb!:N
eVH.'&-`79![7gX(/9X``So^oQDqpVaf:o*TrPoSVlHYp\"mnbO0k$=+"%U+!s/K'!!3903c^FpmHqSr
IBCT-\#l[&Pg?%BKlhHp7Ks,-,o6+Q*s`f<4tRBJ&QbpGVOXfVO->$HNMNbkZ$8kq5!_+I$Mj`H!]EMC
9M.f;,Z/Z.NKKj2X.u8u];2-XI=??\H_B-jiN.N,2^]CU)C@F5H(2IkhrW%VNN(4=[]-4+Yd1[JVQdSF
cbYNQ@["?g><W`3$47=],Va%oYf>MWY'Y5X`4<[fV4*a;d\Li9G\r.A*sD]_/JA0[!$VFV0Khoo*!-OD
[EQIgU6q10OF;kCV6%8<McM2W4$Z)!@")6S8PN,e>$+^#:.RAt0k>9ZJWZV%VPBft^o*rcIXHC$M3Ym>
pufJhQ%a^?Mjp`V^<YTa\ZiTXc,@Z-Xf%qpZ+.BAYe.Hlc`D=lE1XS:LP9qgC2n]aUTq8MjN!aJPbu1,
`4E=UPa@T[VfRfIBRXr'%flhO.O>cU'Rg8k#S81:76jID3"Q9$<M7FJZFm/]Mi!UPNL6WAZ*TsH?V<XV
9M%uO6pX(&5sdt,7RoNY-:W]WUSk2rWLoTD^qHJ1M1'l)O->m(XNB>Qjk@u$b088eiSX"jc)%f)Za$R,
T;AThZa[*AW5-Zja24g0E+NpN]sNuXJUW?4RB!^2]u7[=9NQhX^:Ut]X.>H8Nm"DJR#5EtH>PAN$4.nB
2(p$d'GVK/.5EM93Y)2k(oYO'^oau9I!g:%M2n"'VQ[=nJSnF>3_;k88Ol9?6pj=-5sdq"/iH+QR&-pc
X/_k]Q,:>1Ru;ZBJW6D5Y*Z9;f@ea)fRDT-f\=s-hV?8c`7hDtX/;YcWjAq;YcY"Ec+Cm1TTb7R<cbCM
L4G,JU8tZ1XKet%JRiPG\APhb[&07XNf:uXJ"Vp5DgGS_6PTV,0/F^h*$cs].4ZSf-mB*&"r3rQe^V1#
Q'uf9\?2L#R?<AfSXc$rBP(a\MNX6dLjk/KP`qJsMNaBiPE)NL]",5OTpV(GTTP;#P+ASPSVhDkAT2Hp
AnYRO;-[."<_u@`;c-D;R$jG4S#EC!]WJ9BbL4>2UP4/;@:4#2JTlU!LOt8PQ][D_F)u80@uS+8]!\Q/
PE:mbWJ-P&HZOgH7OelN#ndXZ)B]n-%94Mf',M)_#mpnB/uHe1ZCIS;Lk`FAU8+-=MNFBoIT/!A%KRRr
.4?;`0eFOr+sS]l1.Hkl[^`r\Z_NnPXIt]:Q'.]<Wg.Kq.jcPZ"q(hG!!!0(qZ%fB&8d]#SXc4NYJ%fT
XL-1!`3#\dG$mBa.ki4c*[N3[.6&>)-n-8X*Z,\?J[3)%\?)?hOc\P$Kp.jMF+RaU%.!sX)iht^^SnB!
OH7AtY,ID.G(d&nE]G-W%L)n6!WrK/$4Rdc%29s#)E`,/XL>dS];qWmT:1LlSYimAaGDGF!!<E4"p4`'
r;[i>!!+'SR%Kq<R\Zpf]</$Hf@n*7LN$BP$O6kL&c;VM!WrQ0!sA]-!<<[SXhMBXZ)F4[PM2jbP*p]7
Ea0LJ!#Z>sb0\,2\XetK`l#!ZNI,i%Z(,,O+<_L2r;Zs%'bDN^)`/E_67!@+F-j#;^Uq%WTUMR@L5V\$
\')sI)Z0Ra!WiB&!!N?(*t&&Q)$^-ZCRh&jR@0qOY-tC3^t.;XTSRSf,Qe>c+!(7Z*XMuZ.hr-o)$0dJ
FKE-a]!%m"Q''jsKpA-TD/s%tnGrFd4qE4ie&%ugSVW*5Z)+C[IXRF#X`dH63=5fi!sB8a=&OIJGXPel
=Y<'TI?gV9\%o_YUopYSMOgHKd):8BquAPW#6=o2+;6M5.g-e^-O1f@Yd1*kQ'n28Vl?9(gu$,>H=KA_
#8S0f#RCP8#7N+*3a4HQ(aVj*$mKi!`4j*rZD<qSj.h?pS:,0b8.+qg!"/]*!!<-"#nhs7c+KgWTRqcG
~>

%%EndBinary
grestore
np
25.5052 67.282 mo
69.0052 67.282 li
69.0052 23.782 li
25.5052 23.782 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 84.4648 75.208 ]ct
[43.5 0 0 43.5 -58.9596 7.92596 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 32 
/M[32 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
(EOV?-QaHW+XSEZ-6FES+sA!R,VMD),5i\`+r;%3)''P3)Aa>0)&jJ6)]Te5*#g.X(`WDnr>Hah&.oWg
&JG`j&eYle%h0$Z&/5j&0,599&eP]g&ebr<!#P\X+<hmL,UF]Z+XA?V+sA$P-ljBi:a$kX+oNT$(`=5/
(`XG3(Ddr-)]Te8*$,k4/3b$hr>bbS*tT"s&.fNh&eP]g'+GH^$kF*b&h6$\'G;#j&J>]i'B9'1!!"#^
,T\'Q*ZuRQ+<2RJ+=&!N,TegD+sZn+)&=)0(E"/.)&XG4'cIr-*#BJ3(ah`k*#fjo)&Wqs'G(ii&.oKh
&IoEc&JPcg'bVcZ(Dmbtq[qlhrW!`S*[2dQ*ZcFE+!2UM*ZuOK,T\*]:cTcr+;kn1)B'P2(E!u*(`=8/
)&O83(E"G^/fYfLq\^7]&/#Th&.fEa&.fEe&.oHd'G2!$4Xq9]')N:&!;um8+!;UK+s/'R,97sU+Wr'S
+!;ItF(J`(+X-e,)'^@E)]'D2(`O>5)&sb=)]p%:)&>GD;GJ5/)&jD0$k3a\&eGck'G(oo&eYrm&.oC7
>>Im/',1<Vrt=]!!<iN%!;lg4*[)RK+!MjM)^HRH*?lFG+!O@2?"m(5+oNN$,9n'F(E+,/)&O/2*#KP5
(E=A44E!km4rX;9)]0D"%M06a&eblf'bV#g'+PWd'00f!;EG[.'E&OC'(,`$&c_t2!;caT*?lRL*[2LY
:2=TG:JN8\+XBW<0iBkR+X%sN+sJ6V()e#.)B9MB6!@D_6U;k6*$.0m-:'+$r>GPN*tJtq&ePce+ZiY%
6TdFL(D7HB.4.D/(_[Pp&Io9`')2G-!s8&oq>^L:rZDgo+rj^e\%&;iJ4^t0*ZZp`2E(OX"s>$4+sS<K
r>?4f(eLF)Z'f`P4rkX^(FC7S.N87'r>5MGrXg(\'+[<hR[]1NAiLP?&JQE3.OQ#G'+kfd%MBEM!!RDA
Y$)SOpAk!h?Q^C3,9\3N5c1?)O(1d?+X%gP-Q=d,.j6#X+!VdN*uPk3)]Th92OTnII8`<^*?5n:*Yg"Y
+WMF=(`O50(_I;l'G;#m0T(ZrFA4_B((q,r)\j\V*YK(t&/,Qf&GZ;/>#PeQ!VZTh!!4/]-iP,K'H]bK
?\N8n6o[=s4?#;`IQ&Aj,9e*L+<VF8*>TM1',ru,:NTc/3A<6H0Inb/Be(&>)]BG.)&Wqq(]Fs`$ktNg
8o.Hk1FXb./1W>+Be'r2'+tcd&J=^:!>P_3!!!N(!)O[W*\L&Y6o,tu7AtcMDf^2MH?FIaTj&K\*[2dN
+WqO:)C@X53@l<f3h1+h?=IGVARK%bN_(!*)B9_9*#fG$&KNhl1F3hE2j7lN='K)3@0gC`Mb4X!&JGiW
'(u;.C_-UM#6"l/#71DE9_\Su+!V^^Oc=a5@:*bp=X,7<r@1Gj.;!fP)^-7D,9\'E)]'uSHY[7p<*<m-
+!;OH+WqmN+&ZVj'c\,1*?5q0'FlI5EarHN935[n(`F53*?ZIN,#i(l&eYcg'G:uU!!ahm$O?b6!Xe`'
!rr<%$2FR.)^6A)SY):9G(=HlF!2_R+<MaH+<5<].OQ_t*?-.G'cRuZNKB*VBQ@B6?Q'k()&=,*(_p;'
,9\<Z)AjJ9&f29MJVf&4@r5F'>8J(n().Z%*#N(6+<DRG'G;/tr;[*d8j5<C'EeC>qZ-Tq!<k"L!,NT%
HFUPlWiW.h6mdI5+<_mN+s8@HL4F&oS!$]$)]oe9AZ2i4V5^5P3?W,[)&a>.)]9bqEbnp$MLe5D(`O),
@@O-cR[oh&2B?HN()I`$)]9o%G&^W'IWn%!&ek<G#bTqMN1bbo!!!Q-!<)s&!?)UR(cNi@!)OYVZ^Qnt
7q&!iGV!c%+=/0T*Zf`u>Ec.]QALZ[6m*4NX,2485?*lFB-g_?(E450(Dg_<8q3LrMg^5-4<>5ETS%Ju
4&Ls,A0P)3'c@\a(DptF:P5!kH>dnF3#Vc$YWF*9!!,r]#lk)+!<)tF%QshGJ4q^<-6E3f/=i._7Umnn
FcrP<;/76u*[2S'UhtmmVcFod0l<@O,)M((4&R:EB7Z@S6<4pA)B0G[O]Ze+R7JGG/mXQ&,):^r3)Le;
@XF/?5?&@7&Jl*LO'QdtO[^*),Z]CV!'rLC!!*'"#V00`!!3-#r;Zt$"<+.Kr;^@149/f]5TiRD2*>q;
OJQ-'.N]ZQ24B&;Z]C5,-79u[C6;;L1Dr2c.5,*\I[<]<,8_=</W"@SWdT@L+<_dD=aNho1Dr2c.5,$W
H&kO*+;be,-[oZ8QZR?t)B0J.;g&1(rW!64!!!6(-=6`Y!;um$2%KqV+sm-e@fdm7E\An0L,rmO*DNM`
G!S>E.>aEbXID)":EV&7,:J4i?6gXNE%Y!\(-nF.AMuCn,'\l-TSkCB6Q@9m*$K<B=sP4KE%Y'_(-[su
@P]b^*,g3bOFJWm4;AeU(`6g)"o\K'(B=L8!!7*O#lO`-));223<0`i!+?J,3@QmJC0,aB,V#%MC2.T>
CSjI0\mHItD^-P[-QuE?/KZJq<^gXS*[?9$>[1Vb>*q9KZVMKI?6::7*Z@Cs/KZJq=%?mS)^'Qe=]nuR
</NG+S4XJu<u;et)](apr;Zm#!"8c+!A7.V!s8],"'5I'\,ZL4"T&1,LFO`+3cU$g+XJLTVJ:'E<1e+O
Q_l;V7X?U<-mgAnE?HAL/mWTs*$6>2Sm5_l9TWU#L7'A.4)$#f*uuIIE?HAL/m`[!)B9f(PZ_?Y6A&AS
H\rm[2.7RM*#]h=)#XF9"rm[C!!!30E!$:E!(6qi03\>T!"&N&@!*eK0/89]JTYpPP,ab9Pb4!e*it/J
.P>R>.OZkt-t"&?,Umr,De*3dKVaHhLR3WB*h[^&,:Hhe+WhmM*ap'6,URSqCggUXI[bkDJ;&(e'Td2R
*?eHO*?6.@)[H<A"WM.g#R1M@097n^1J9%p!,reS!!!,u!+9sm.P<B>]=#)NT:2gPR@LC:)_A@;-o*AM
JOM.@/1"^B+<r7dYcb.*QB%o.P*`;#*%Ist+tG$.Cc<O\+WFl.+<r.\VkToUNJ=!^Ko)%6&g3NF)^HOg
BJ^eO*Z57^!!Ft8^r)EF<^N6N6r/gb!!&;hr;Zg.quC,O,V(K7S[Y/TRZEZ4Q%FO5=!0&uCDnQK0Q:\V
,:4XJ)^-FcNj"J!O+E"iNHfVb:)kUX=r/>(-<sLn)B9Z.)^-FaLST]VLO+E>JT#C86kpf.<"U&h,$7\`
(`F5!r;ZpfbX=;n6n'gk3>WD=rVutQ"8r3#"9JH$@"KjY.79f8JO`I1OIpoFF@nD1.&^l),q:E,3@c^4
.;^1N+?5ObDa-WXJt$dtAj\9j,+D^V+<_m]/g)A]+)N,D+?#.NCcapKI#VlP@Q>eL)iR]3)''bK.NKWP
*"r2M!`6*6rW!'P>S.>Lr;Zk+!qu\&PW10<0RB^W3^Z&VH8e8e;_f@6FF,;X-RgYu.4HZ"Ik;f`.;>Q+
1cmU3CbRt=9.Lo!@qm,-*ZuaP+!2OMGpsdO-"`Nh0/kY"BIl//5pR-Y>[eQe)]^(C*#onA.K'5I$\\R+
rW)s-q>^O#$MOO.M,b`N/kU\00-`-3BJ`Ud66REh7#!39-7:,h-R^-6F@@,m-9cKU.Ng3m=t`B82]WhR
3HZSg*?H4D*?H%]DaG6^,<KdG-6+@Z="6U,0btH81Me*K)B0S8)B0GS)#O@7'a+F8!@e0H!!!f/!'+bH
,:k'1JNG/%8!Y\R0/Xmq+s8(h7j'0--RU;i.sb-2*$QIfD_`R^6&R$4-S-8U)]9T>3>ik[rZ3%"+Cn>`
(`sSRB.Fl;2L6Pg,UjKE(D[g-2AR5OrYktY*FJm[rVus!&H)S/1AChL*V]VF#VV32,p>6o;][HHD'0cW
80B*!*u\OB,:+]a,:=L$Jg>P&*??hJ7NO".>oXY53Z/kS(_f_c*$$(@*$#eRCE[aZ)&=Z05SP;[<Z)T%
3YiMI'bO)V(`=82(`F&EBE0(R!!3-#$2so**s;6;!#GA1@h0PZLI*@<I;gujN@>hh=DKE-+!DROIW-e]
+<i$qI7G#?F>k?fCgS`0HQj=E7o^ZH(`F,2C0Vo$)&jPOB/gGcBJ(5EA6:-gEZ>`-78k3?'c.K&AQTui
()IfA@l45d'`J(8$j6P=+8l0>!W)it$j?G-@gW2W+&n;:9TYL$KeaYh+t>Gp+<W!R+#/7t=ZJKVG"`nm
(e/mV5^n?8F=S.D)':7F(E"52(aj'981lMp@QYD<&j1&23coUhCa9]/(EFe='c%]''dI=)74Kcb?9&Z!
!!`KF!rsPq,o-%P!=]Y?!+Z*8!!"/f+?=n2X06Uk+<hsT+sA$T+Wr!P*A22iMM?:;+<VO@)_YuRSt]^;
)&jJ5)&*i+(`+),(F<40F`CkF)&X)&&gh"(Ll5LU()Ic)(DRW&()7Z$'HpM!E,Ao6()?oL!!EZL?YTf9
!!EBH)&3DU!+-]k+rqs\ItT*j+X&0Q,UOfX,p=EX+!;a^3&)d$*?u:<*#ThDDK?p?)B'S1(Dn),)]0D2
(`=8?/LMSU(E<u$'+bou@V-Jm(Ddu'(`=2))&<u*'c%T1.3fcG'H$]I!=]\+!.Y~>

%%EndBinary
grestore
np
108.905 66.832 mo
151.505 66.832 li
151.505 24.2321 li
108.905 24.2321 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 84.4648 75.208 ]ct
[42.6 0 0 42.6 24.4404 8.37595 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 32 
/M[32 0 0 -32 0 32 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
&-E(?!s8c4!!3-'$3^J5!!`9""p"r2$ip\9qZ%<2!<<-#!=/c.!WW9%!!WW7#6b).rW",F"TSi<%0m+E
#6=r/#S7FR%LN[M"U5#/!!*'&!Y#8D$4#Pj#lk,6"p+f+!WWB$!!EB+!<</u!!WQ,!t#&8!VcWp!W2p)
!Wi?%"UP;6"9AW'!#G_?!=]SK"p>#2!sJ`."U55B%LE=F"p+]'#6Or-$NpqG#3,[e!!!$"!<W6#$ipA1
!s&E)"9Ac7"TnZ(#QP&4#8[FB!!N,u'ES=<!Wi?'!<<0'#71bH$N^G2!!N9$"9f#6"9\E!"Tei0"U"o(
!!WH+&-;q:#il!b!$)1B!=&i3!<W<*"98Q-!WrH/!!!*)#mUb="UkG5qu@H6"Te]-!<iQ+!s8Q*!!E9'
%ho]d#5eH+!WiZ3"pY;4rW!!#!<E*$!X&K*qZ$j&!!*?,!sStk!;um`"T\T'!W`9&!s\l-#mLMA&N)='
4Z6&@4s^jM$k3IB#6Or/"Tnl1"ptJ7#R1A>#ULu[69Iq</.M[\!!3?)"9J&n%1ip\'Fu?>)@6KJ":,4n
!;ca]!<E0#!soAM+t5KC.hWgsQ_CISLT/CrPCljb"U"o-!s8Q)"UbhU+XT!0-4gtQG`S\qKquJDD-/G'
!!<9&!Vud3"q)4m&HE"[=C#HE94N-[?WT0'!WrMn!!j,W0dd;]C+Kkq"oA:+&h>Ib5>kZuIZ182H9b,e
cc"2MS&"aE\\OqH"p,/6)_Nct5>P<hG(QBcD)t%+ZaIrqPI]k^O,e-<!!!-%";DCW(*OkO3^cqQ3"d#k
?W^T86!%l<B6%WF!WWAu!"T,:*\7<l!!PA85rB'(HqOMl2\u>l4TdioMit!M`R<Abjm&^eO2ThQYd9"[
acg7eRtr0g!XUu2KSuS9`RNG_jlW"HJ#C,KV6538\oU&7BjD)F!$!:`>?G?JAnbslCN!<78m>gt:/<W9
@7Dh=@Tj3=!#5bQ(+`!O?=6cRINALs.nL?m*s3->":"o.&-i+64TUPD^U_##b0e_gg=iH^S);8YV6#E5
eUAH%7Vaa^":'[\_n<e4d+?t(i8C>\PJO5SQDK"^`*NTd*^LS@!!ZM<CLpm`?N+:^@qAS)9jLUW4?t>N
>V?'e(-<01!<<`l<C8oF77p6I=^<!P&j.?C$4d1@!BgJ[!*B>aXh;*WeCr3te(;p@MkJb5Y._-&S_'#?
,T]oN$3UZnXMD?`gYpZ8fA4lHKp]K>R'E`LO2c)<#6HM%!rr='Bkh-dAn#(R?XdG@5u:cW6:sX"3F+iJ
!#[4,!!*'64AS.->ZO<f8l\S&#8K-2%NH2c!XLsmq>bUITYJIV_90p>c-4SJTTZ,J\Zs#j]"Rp8+u(!/
:C%(9QFXrC_pHfSf@Sj!VNe.4QCP=s[Bo%K$P<@c0*2+R=(Z&M>[C]A?X[SX=A`C>;+abc9i5Ln!!<3@
,ldrG)b!FW3^lD$8kr\a+VQAB)AOYO"!Ah$%Jg&n(o,0t`RWPjeD8d2[@iYSj/AZ_na*I0RPe%q7op3-
*1Fjl`nB,&h<a=k^8@-k`.j2NnEcmfG8Vt@,rZ&1!*NuL@V#II'OtZe@9?B2@mr[X@UDZ25lqr,(b5Lb
&g("T793>e<FT?R4WtIa8du.L"CG4G4U:f`>pc&N^VSRRi6funaebPhPhrmIT^M';hT(5;?s-\D"!NN%
[^t/HmGI$[kdR^bV7DhPOR_P!cDk,c2`3c)!!#f%?X@>TB4YjqEb]?"Blm`_9PS62ARRSo-mgJD!"fet
3&t/DCKkaoL-R^D0OlII#823?%oY=d$2ad0!^/e/3DDb<A8Q@MI[-%^^q.gsmcoeVlFt]QS:i!e!&HVm
3(lS>Aoi-bLSUZESX?s`n*5G:c'>#SEFBU_!"9>B"VV:^-8@M]9k7pRBjtaZC2#b;Cgq?l=@r_j!!iT,
)%.oE2`E6_8ge_;"[6BF7ii-B!!!Tb,9.aO&0VDl&Of!5Jqd$5e_&p@;cJI&T;J*13=Q<A)]0SD(+C.E
,uRX#Q^fd#^s:ru:.Jl$Ed)P5/IDIZp](sQ-spb/,;aUcF)Dm85!2bK<_=(t!!<oZ.faAcE-%:h!!!'%
%299S!!!lk.lBdq1.s\e.U5i.Mi0;F_T^$O<%BIW6:s*_'`o!p+Y>rS2,-J)4(hroUS\qLX22X&9HtMs
+=8'C%fcS3!!EcL!u;CX$og.]G'"6'E,]T0)Z]sE%i5WXnc/_@3&h'A!)-a!C%hU.(HsB0/k0;[DJMgq
G+"kn4V3nAjP5%s.kWJ(.Q/[Z%l#@c.RIBIC26RsGbLq5/dd$YfZS(J.4Zno+t4N7!"f>@!=p:r.kMW2
7VHgb+95_nEJ#_<!!3?>%efr,!<<H000BJ0!!!anGJF7S!(@hg/3$ij,Uk2o0mR"f2GP.o4,^)ZE%`[m
2)[-@*<?g,,r/=S.5*A33IG+%5>r0r06NVp@OroX0eXt%'EA+D":?1OrW!B/#spEl+>O3&(f"1?,lRcH
!so>F#k\0!"TSQ#!!3HI55,%R(Hacpa(Q;;-Q<sq80&B]&eY3Z-pT4%/hJtB2`E,n&1oM;\m?=*/L2T8
9Ih;6%LrLR,s3\"/hSq<0eX[X!#l_5E%_1k!<<*C,mXVY!r`0#!t>,."9f5I((gBD!*K$smJp/i.OBGf
R2A1V4!G=i-n>f?5W'Yj(EtLq3&E?K6R`!;*Z\h+N#Y&L5:[m81,U-a2(]jU)'pst2_ls<3[+P(%0f7h
;?.=D&-;hD&/>6I+VXtU!!WW0":5Y_&cD\2"47eZ!:9bm"t:F=aJpLlATCT^.jm(a(4EKL,pP$-1d4B(
C4AnW!ZVbb[[eUB>\d+X0ekX/(iZU2-n$l;3']o+@<=m<!#Q)FR<&]m3CPG"&eQ#`#$5tL!rrE5#7VIm
4&Ra1!!3AV5Q1W`!s&2u!XVd<q#Fk)#QOi*(*J:V\4(%hJkHq6+X%7NX2MtM/3I3ZM5.>j\9/&W%2Nis
Y!$$BHV5P?.k;MkTs_j10KiTVJt/sW[V$!K$4pI'HmCgV;C2J]$Om(THCT7%"UcP16s+,EGu4G>"q7kJ
!!!T=q>^RkgNWSrAcW/Z4Cht*!!XWGN4Qj'VkK;N.R5Bt#u8+Na+$'EKrqi)d)2SO!!*m#GH.s8Ss>+)
.mGX/'MQQ_e9X2RJ?Z]7gs2Td!X9]7G,D$eJU2&f'IFCp!&9.nIng\%8nMd[H[Kfer;[!Cb2,lj4ocf'
!%jScTEtSu#s(Y'SVoT1!!*6X4G^2P\Zrf=HZ2M')e?dub+Kt':jmeWUm>dCrW#&*06<_cZ`Cg,FD45t
,[J($d[_j<;L*VNV35F?!WiNR06<>BN.m(/<)"kU#t(,3JRnud+[e\#B4aUHqu?g;Fd7phCR-ja"T8<&
e;g:SrW!**"rK-A!rW+(":c_HATjK@['?d0LgPSC_SN-&%l-^PDiB03%06G/!=B`(;eCr^Z`pI&Iogj4
aN^_A*&gJcCP[7%(C('G"qDb;=(?oFPE(?D@R+.]OGJ&p!#?n587>[N"8Vut!=]>uEghbs8JD.5_7d*J
qu?d#)%HBA)$^cm3*h*&W4':@[(j#a[Tb=I8;j<p2%0N_!#c%O(GJ[,N2*qpY.qZ`d(id?5tQj/HoVuL
"T/<;#S@_$8S<7"LP:;8R=^$>3"d>]>&dXbp]16m$5"srLk]Q*e:XWGr;Zm564Nkn!X&W,qu@W;%O=5N
O/]Us]sYMaQBIf:^:JV6%LiRG"9\Q%2?O@/1ff.!Z,+2g_8VRqR\n!@E[;J9$j6Y5!!*-'!sT5U1JhtC
Mi=*_Q&]j$GCGa4=V:i?qZ-Hm%fmbTKqQh[`3:m@4B97l$2OW%!W<'<!rr<&%4+\_O0?41]XYYd]t_4\
OE3o7!!!'!!Z;">!s&B)%O+5ELU=n/^qn"2`kKBmM/,L*rVus#"TAQ@"p+c+"rB'jClF[KQ\^]\NL>u^
DH8G(r;cNk%K[i0a4AD%\?3'a_.+_poDf^2"U#2L/nU3EZamWR\?rB9TpUIQ!WiB'qZ%?3"U"o7'J*F>
Ts;)6[(*KAT9kI[AbuH-!rW38"U"l2%3A2`M3a^,Q^a>(MLp"`<rN*j!##AY@\:p$W5GQ`?q;m_"Tnf-
!<N)u2$4!b!<E<'"<'dNMk@)IWMGuDHq>+Z"pP55!W`<%!!39*!<E<(#9#m=I?g_$U7%$nDF#-<!!iT,
!sA]."pP2-!"TSs>&]4XNK&gBEFC[4!!)Hf#mMGCH=:Jg2BiS(!<33!!#,P;!<`iM3,FP-Bfmjk%0-M6
!WiE%!<3/u!"K/8!sK,M/R*O@<\ksD%J]u-!so8;!Wi9#&-2b2!=9Dj=a"ab/fbc4!!)<b!s9\^!rDs#
!<N?)!r`04!WrE("p=o+"pY,0"oo)A'c7AY!!`W1#6tM>"9JK%'`e:8"9SW(#RCD5"p,/@&ebZT!!*<%
!#>S:!sAi6!s8Z.!!!$%!!*3&$47@Y#lOb^!.Y~>

%%EndBinary
grestore
np
191.255 67.432 mo
235.055 67.432 li
235.055 23.632 li
191.255 23.632 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 84.4648 75.208 ]ct
[43.8 0 0 43.8 106.79 7.77599 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 32 
/M[32 0 0 -32 0 32 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
n,NOk!X&T(!!33(!rW*!!q?6j!VHEo!<</u!<*#n!!33'"9&<&!WrK%!!!&Z!:Bgf!sJN%!!;$XrrMus
r;lWm!<WK&!<<2W!:Bje!W2p!!<N<$!!!)i!!**'rW!!$!<N&t!!2orrrMlp!!2or!!3#u!!2*[o)Sdk
qZ$X0%/9f&!Up'l!rr<1%.aJs!Vl]u!<<*/$/,CV!;uus!"&`.!<<*$!!"Ju!<*'!!!<6%!!;Qg![Aoi
rW2uu!!E0"!!3'#!<`H"!!`N)!<<*B+9;BArW!$$!!!&^!;QTr!WrN%!<*!)!!!$(!#lsZ!Vl]q"7Q9m
!<=#Vr;Zj!!rDs%!<E6)"9AQ#!!WH)!!3-8(\[n0!p9RI!!Oi6.Np;Cr;Zj#!;urh!"/fS1*[ba!rrB&
!!<#trrMoqrrN*!"X5TB)Bf.[!!!)_!:p3j!Vl^&!<m5;P%CF=!<<3#!!!*"!V69s!<cGdI92pc"9&9#
!Vucr!VHF!"BUh8<0AF+!!3'!!!2Kf"9Ms[!GV</#QXr-!sJ]+!!N9$!!3'!$3C<)\t5"hPQh0irW!!#
!!E&t!!N&s$8%9eK!9b,!!!$%rW!'%!s/Q.rVup"q>^d%!BmE@JZ"/+rVup!lMq!=3%k<j1%tYN"Tno0
"T8<2!<<*%!!3a\R%:@`W_ig"p&G'nr;Zfur;[*(#[MCtXg+lkr;Zg!r;Zs(!sJ`.q>^p*!!<UEK8Zb-
W'p[fl2Ukl,rPhEhm*"X$3M/&*=W/V!!30'rW"JP!!3-53BO1L\>tVr!<<*#!!!Q\)\*)V!!*'&!!!$%
!!3-?4"c\qWN1:IqZ$p9-lNO$#lt,.!r`0/!rrH+&iMVCYHOmR#m0;j"E`S[[3kbN#6G/cB5LU8'Dqh1
"TAB0+Ad$+VmO(?V'H$@!WE':"tXA3A5XcY"TSQ("98K*05HW#X/rG.W#Y[7)?_HnBiIJ=!sJZ+!WrE'
"!UQ\H*aWOVk>+4q>^R#%KZ5&!<F)B+iN="hjF9@.KoeP;Klb\<_>O^!!3-#(K>0cG+,81]<Ibb!WW3%
!WW3%AB_ToT6aNLrW!B6-u,'hjgqk'Xg,8l!rW*@!<<*mQ\0g*<CIE#"T\]B;fRSkTr>,nVQDTV!!!$#
rW!*&G;^l^!r;lu!ZOW6W7]n^jP[NE!$)+B!$l]!>[1c[H=BcJCjTW)BRuJMXJpXn#QOi+r;[c;3PNSk
grcsS;aO*%Tn/g#fY4\tY^\),!!!'!!#u">.$p3oTph3q>YRh)Iq*JiVPC&jYBM5u!WW8u!"EL=>#nU#
+T_WD%5eJ4#(X/3hVQs,pAc';E--)-@Vh*]LP'toI<p?nU8suR%fcY4"T&06%!oYFh;$Mo]"lePg:G5P
cEF4OQ59H"!!N3")?C@oYJITT^phFsXJh_RUp[bB[^;D8!s/N+q>^p?MQV2RRa/aY[BG?s#*?I/eC_lI
p&GpjRYH')DK'fFH\$-eQ]RAu]So4H7fWSlr;[Z8!!"O?SZC/i^V%20e)Auo_QpSMF$#pVqu?]trW!f:
2R&^@\%8E4WOB"3W2-Ys[&\gETL&_^!r2g(NETJPST97:\@eHB#LgD[^>gF<F8#YQ!K*Y.Pbaq&Hu*S:
Edj%0J<.-+$]'NV/K=lj!'L@1[t_#n\BMgbW3WeYP'q=sWB(K?IiBUJ!rr?%!!*1KUk,/6VPff0IYNcY
Jp;*^Y!*AIIN0gW"T\Z*rW!<O`@Zu&fqimB/3QH/VE6(;.FJ1r.OOrk*!-hNS#<BTSXl!tEH,oYU9qG'
QP]fpMKYPdFV+NP4ol4eQ)^sJUUn7laJY**R@'h0KGOt_KPm'RB+4h@!Ws+,LmXflPbk1RR"TsaO-H)j
LDC._K5R-^B+G"DrW!:T9968GD:R%EBf6/@Q!SBq83-YL">:9pZ3pR2*WZ7eVQ>hq2J](WKmSZJS:ITT
TR6trDLIVC\?7^lrW#&hPFd,'.Tj!f[F`I.Uhc4!NG/\OB6K66XfX)T!!319Q_].;/mPW\QF=0+WG@Eg
MerbOB6K0=WiI`RrW!94A!&2C!!CEpE46@tf9-\IfLcVR!!sK+^#I67!+#aLLm=i/@"3j#RZ3K+Z)X(h
XG^QmLn1$!LQSa,!W`94DgR[+8RZCl[]R<QXdjp,RsA!AJu,'$H\SYV!<<0?G_DDI;Jp`DZ^nA&Yd/_:
QZZ=7Ju+uuIu::_!WE'*)(fD"!=KZ;a*D^NgtneY>'1nf!%a7N8L-=>3rf6]#n`Ji8o0odMO:$0UT^2Q
YENg01S1CmGs*-Z]1W/)!sj=,2cP$SG,2XW[]bO;Sq1-D0Wq^,EB,%AYWMmc"q6$:5@KM6J>0$?W3);;
S:"L</?Q+#EA\V6VEOkX#;%h6"#31gK2^CVg>5LXM(Ac1!3aZe'*&"6irB&\!!JpeP`qcHWiMt^TW3d4
W3)XWF0gpHQ&J$HWL*Yd!!A.?J:!'@S?fT:\#XP!QD0F#Bs!#%MLdf'Q\58;*!;%\KSc#&XfSS)X0d8-
PF74dAZ^`%O*ir#PCi`5#"DNG0MSa>']%Nff[CiqAViqX$/[NG6n&*9B/KPe>a^q?S>!'jZC$]R[&'n-
Y+R/,[9J3UUm!^#WsAh0$'L[2OcPm*YI'S!VN%+:ToUFQY"s5.S:</?R0EWk!JQJ`Q(#+hWhtZT[$I)J
Vii6XW_[Z$RY*)<NWf=]"[l-A<F2C7f&3Jrgt,VSK;)9E2rF]QATBF(.q8GW4H5OR<+LH@TpBJb]XkD@
De'6CZQN\]X/8gQZ4$j=!J?7X8lfPQSt'GhWhZ8G>YtfcXr^Q=SWcE\SdGAr*-d,^:0Vn"V3PPdXg"FS
?rdYmWuY3AU6e8iPR%0f"=H20!!7?V1P]?CNT/'I7Kiem6J_\C\;Onu)0u8_!<QK,2\.JYA>altQD^[U
K2F#uQb#+GZG)qOI]itV!<>TX/.3R4:8W5SQ_9V)DEo6DK<$OaU90=hAt&i%!!,]b0+o`Q>-N3aMj9Hh
F%%5SLTE-lWN(djC68Vs!!7`P!"&]+!OEXP9mC/K(&e1_2rXf;X5ZSK%;PqE!<Ne,Ueb#rWhpF5,(DU'
.2`0f@_7@RE19c>Vj.>_!#l-#Ma'NtP*Zgl,&JnT*tnYT:TA@`>_YTROEga)*!$D2PXJ8EV5+h1*bm8Q
+r17_<3C?r@>.)ZP'Hm)!Dubu!!!%DIJs3H&GlGG!T=mr#!2eb=sF"I!<E?WU9^u7ZShda"*YLX!"&gc
]3>I^6uKY(!rW*,+c`7_R?Juu!<Z[9qu@$)FJD;,(,K$g0DtkZ"!s,/UT^LH!<WL8&,ZG7"F74D";s.&
WA+2L"B;=QVLe[G!!rE$!?KMb!!*2=rW!u?"9AQCC5I0X!Wi?)KIm0(!<<6'+0N"tCm_ee!s/<"";OpX
>7gc6!X!3\r;[0+!#1ck@T7iOCBFJ8*!-*@'jGoq)Zg*C"`GUd!<W?+!umu/AlsY^DZTb9"98E'*!lHB
!#,/.%Y:&T!\gkm!!!$"!<E0'r;[!'!WW:?-2ITH/>g1q[tb7jqZ$["!!3'!"9AK+>TNY@"sT85XJg.D
q>^Ktr;[!&!<<71+Sl'B,*8k)UiH\;!;6Bm"o&'#>iseQ)>jI?!X8W)!<<*#!WE'%/eA!_!rW*)!Y7Cd
.0T\O!WE'$!<<*&q>^XD%0-A/r;[!%$SOUa"T/6&!<`B&!Vud!-k?:X!W<!%!=LPD*sDKAg&V*QrrW)u
!s&B%!rW*!!VZTo!rW-!!W2p"!rr<%r;[$(!!**%!<Moprr`9%rW!$$!!!&u!!!&t!87DW!<E6'!!*/u
!!!&k!!<6%!<Mrq!<N;u!!`Q*!<N6$!<W#r"9AK(!s.oli;eB~>

%%EndBinary
grestore
np
273.465 68.182 mo
318.765 68.182 li
318.765 22.882 li
273.465 22.882 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 84.4648 75.208 ]ct
[45.3 0 0 45.3 189 7.02599 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 32 
/M[32 0 0 -32 0 32 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
p](j,"98K?":>21!!E9%"9JT)r<!!"p](d)!<<*,!!*3&!!<3$!sA2r!!<$"$NL/6!<<-#!!3-#!WE*!
!T!hN!!`W3"V<9h"p=i)!W`H+rW!!#!Wr?%p](O"!rrQF!!!0$!!30(!V??l!rW3+"U+r5)Z^!@r;Zj#
!SRPH!"8l2(dJQ7!!`i4!!*5u!!!&q!!!'!!!Wi\!WW3'#6"T&"8)Wp!<W3%#lt#-%4MA[!!EN*!!!&S
!<)ut!W2ot!r`0(&O[B<!!EB&!!***quH]sq#CBrrW!*-/-Z(S!W2ot"SMg*!<N?+"9ef+!!k.]!<</u
!!!/X!;uos!W2p0"TSZ*#X&q+#m^Y9%grCB!Wi3!!!2lq"p=o,!!4MPqu?m(!WW9%!WE'#!<NB&!!*-'
rWE`<!WrE*-O0YT!s&B-"TSY]!;lir!ri<#!"oD8#m(8o*s_u[$4%7M!<iW/!rW*!!W2rs!=o84"TSNM
%KHJ2!!!0&!!3'#"9AN)"9e])('4R?"9\r3#6=iR%0?P9"Tf#5!!*-%i;i`TrW<*#rW!T6!!WE/>uX*C
6nB$)4=VK["p=u+!!!&t!<*!8!WW<&!C8[l&g@ki(F0e2"U,#2!X&Z2r;dW9!sA`2!<`B)5rU,3/K5!9
-Q<a%!TF+U!<*'!!>PS7"on`*&quR2YbkkpOLq0&$O6e9rVup!quH]s&d879!!m+SC4^[n,\rZq;[*F0
rWE6*#5nT$";2"A!<<I9ChJTT7k8JBI8L+K!Ug!q$5X:@/cYkdE%_7f!*oX."U5,2!!<3$%g!$#W6NE0
O?Cq.b*4OZ%LN1?!!3-#!X&Q*!<N6$#lk$HKV>36@ih5BV0!g[$jlt@!<rQ+"9f#5"9nr/$NU?II$g\+
D'kpOR;a,G"TeZ)nc/t51m$J?&HJH_RK+<&!<3-"";Cq?"U"f3!tq3']$K,p2RU`XVI'K*!#u=G!rr<%
!s/Q-"9SW.!!dk)P*_bQ)2bAkL.;=E!#l@N#QXr-"9o&8#R:D9!=F$rLnLJZ+cN1hIma/7!!Dcl#U_E1
OJNTj:tPfT3V`XW"U"o/rWF8E"p,&3&YZ2*Z+l8URb,rsK+\4k"UP/3!<<*#!<`<(1'%LX#_%J_LQZ3f
F/c@2AdSMA":5&3"9S],"U>;<#m1A3#^LiJK90afELi_X?3UB1n,N\E3'0H;%fdUPXiF`Sq>_QA#6b56
"Tn`.#7:PAT<>&s[ZOFTcd'e9/HQ4a"p"T'(BFU@"98N,#64mTNIH\BBeje*Y,dR(!<*0D!!<B."9\o8
#6Y;<#6>!RJ:!',Bf0q!TpL6G!!32k!!Xo?01S_L!!F@1e=f2)!$MIN#mU_C#6P2<#mM!<XbDjpEE%O`
]#`H&"pG5=#R(21rWNuA#6G)7"p,$]LLY:=;`\B;RAR5PrW!o?!rrE-#6tPE$3ghF#6P9\Jm`8%:,Z@!
M34/br;cp!!V??q1dD?]%flh6#:Nu:[e]u1"V)+R%1j'Z$k3FJ)lf`/;H6Oi?<i#faE9Eo)%R>d!=&r<
#Rh+K#mgb<%Z#Zl3BK/Y6U5(FW)b/`$jR%>":>PF%1s3`%h8aI%tT![2`WZM5<W5&P#3>=#m1A&!!,8:
rW)ls!sVV_"8`(*&0)`(%MBQn)'g:D,-J(C:Kgq=F]`F`Xab,->"1F^#ndp]#S%L\'H7c"&rMK$3^lG8
=[>iEN*].S4=_ES$l'Ng%hfft)B]k2'o.;n1-7Tk;)q7"Ip5H=4=VBSoDet_56(]_!!`T+!Cf?Z!<N-!
?Q^mL(C^om)D+NQ3@V8NI:$c!HAZNLUU>VZIZp(7&JQ6+&I8dZ(*bgu-Q/#:>Y7md?>WP2KTok1>AnFP
";i:)'+PWn)CRd2.N4,)=$B2B<+8HfFbO!_=_MVD"S;Zq;0<'A!,McK!<=]L"onf@(BFLe?!/C-E+MF3
PFuJ^Z,M3-G\W_UK6X&uD`;ERP+3=,5sQ&(;FrDrEe-e>O.p#U=A3t&@T\&C:E`D2E-Va691KpJ>>d=A
HAGH_R&t'l;+,8P>#9*g8K1,oA8;>G!!r`.!!"-&!<?`cIL6&W!$4c;"!^YD!!!'6*<7a*?r*oEZ]]4"
Y%D.V_2=8:I?ggqQE%2h=I5tbO<PZ:6T:$sP]KWNNCcX.T5&+\>]YX=Eef]:4`lC2D@n-m9g=rGR<Vkj
Pu:GUVfH6Z<G-PgBm+q]2JRAV@LW;<!!$E@E$#*B?3((pI]jIs'Eo7/',EAk!!!lj/eJ(+G'SMO^r*mE
XL)/;]!\-#URe6`X08Fc<M%:Xc(Qd&=^#46XJMJ'Mip@oS!JJNK7/N8N0&p>4b0H9X+D?/@:NoIVl?Y:
Pak9;Tq@'\H?4CaJV&8c3-:FXQZa;J"pYIrjl!-S=)n9@IZf7<-8?i)77'O+)#u(Kd\/2l+H`4o^VIY$
Z,",+I`077^;7h3^r4:%A9uYC^r+8Y&9)uRXfJP(O.2\N@%F!XT:r6aUSXlT8R8[(YH=iU(jUdqVl6Mk
R&I$%BreA,N/j'bNf]BY7Tl.QV5'5$!$*agk2bXcAu)O=)[`t#J8fanPBqk>=o\`:hW3X]!%=SL_SEt%
_#D4^\[K>i[(3HNZ_=1rWF;R=rkLY4@MsofUTLT!XJ)PiS=-7UQ_U%ERYcrfO%YD5Xfeh.9cf1_Xf&+q
Vlcu!VOjcbTUCq/Q%OjON(Sc"rMBrq!():dk2b[da5PtfSqu@eK8sf*F?`3!;#irCroFFH!C4?6_8=+,
rPAKK$c9'SXgk^4VQ@&#`VdLZL+8grX/VqoVPgDnri6L*P+7l5SV`DmRuOVRXo>I-DDJ&dVl6ZqW;rmq
V[KJiQ]@GsL51bNMPU0I$>KR?jlGIZio/nW&*2j6jPaa!@#T4p8R-+*ebnM4&mE/f]#+H_#Je*i_SW^Z
]D]JG[Cs<M^CY?PW3)_jVP^AqXfJ@tS<'?AXT><#poO[(8ZJ\bri?!q%'-G%Oeo"VVlQPkWi>ln$E.51
io[2pf@T*G#3P%)g5f@:roO=EYM8(4jp)&^Z*7`F_SQ5e"i5q=>?/Q>^BC[7ZF.CF^D+Ar^T9(HQ^1=6
Vl$MrXeooB6pR[LXTY/VTqndhXUD54Xd^RtR[I$EX/l5t%B=AX8k#eYVl5uDT:r7`V[TQ*VjAY/GB*_?
hq-oojlXo(#QOk^roO?1<g]l=roRbDk2pdd#=gp;^:^Yb^VI[[Q(+8N\\FP`NfB7$\%9,KQFEG""Z@t_
VPTZ[Xf\[]H\@!BXKI@tI!^F7X0&LnKWL1H"ZS.eWi;GeVl-PRIY3?KX/CkrJ:E->Y,SIoKr^=Kr;ZoA
^NXq_k2kYo.QBAUioWQB.46cqi8`gH2VLq,*"ifg^9bGf^qcL+77^C4XgsdaWNNA5BV`>*X0eK.'+51>
VjsQaXf[701c@U9Uo]<)SY`-a=-ft>TrX7`((L^FWh65hVl,2(2EF9HWN1c/Tr"`i=d>q:VQ,^fr;ZlF
MZgTOk2n`'!,r[Qi]9)TVQ/MTA*#A6bu+NT%0g[aXKo7K^KV6e'f&U5N`K.tF`r!ME5/!V[@nQM$3XM6
S"Z[\X[rp7&1BeXH:CA.@Uisc?*0'eWK7l*$3XP4Q_1"MW_*[5&1Bh[Hq?k7@qB9i@&JsbWK7qq!!*2a
"Eg*5k2uO@D[n&n!!NW7$31:m8`R]g!!k"`?,*=nZ+kZ,*uG_L.k*e3+XJ6Y,p?!pYc,!s&-a3a9<FJ!
TWMlC(_RB/+X&]b)]fq?*ZI;EUR8$5%L+!_9W4+oSZ-9<(_RB/+X/if*$6(A*umPIV3n99%K-81k$o6h
jp^b[A`K\,aYWu.,n)fJZA--"Bio=hCMRZmEc5`5CMR<hIDN_)_1)^u*!n3uTl@-.<(C1n='&Er>$"^.
<`VmjB<A;-X_@qH*!n3sT5^g&<_-Ls=BJWu>Zk'1<E2^hAZ)DmVIp)3!!iS^Ql"nS!<<<%!]0o]!s/T,
!W`<0f]@\F%0-qV)&/IQ^;$S?Vk0Z\R&dBgRuO5CX/)P_\\Q"g3#W2<'+]]oXZ;Z-P_tTeJsi'iKQ`??
P`Ll\VQHtl.ME4''+]YlWi(u<Ob\sYJX2L\JTQj3P)>-LT;JKW.M;^]IK0@'k2PN3:1$@f>V^87=>_*m
?"$E#4K%<&O8o7k)'o_]XL"O6K7IiaH?k[LQ\&q<VlQteF+9gd@0dn^'-%?=S"bgADJNEdAn?CJI:uN-
NKfcX>\AbW8d#e8'-%?=Q_91:DJNHeAn?@CG\0`sLQ%.9=CQfA8HTS*r;[XVSjibp&-N:H#q8.g%07nK
=C!<X$8uJp!+-f`(`sM=0IAG")([$W:J+hs<A\<!>[g2T.Ms9M-Q3g6&f;3",on6O'-\A75<D;'67#B$
7nkia*>'#$)A*eu&f;3",on6O'-\A75W_A'4sWlt6qK3U*"N_s)%c08rrMioJ,~>

%%EndBinary
grestore
np
357.935 66.682 mo
400.235 66.682 li
400.235 24.382 li
357.935 24.382 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 84.4648 75.208 ]ct
[42.3 0 0 42.3 273.47 8.52599 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 32 
/M[32 0 0 -32 0 32 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
?N:*0#S%Od*"X#B=EI\)0/u]s9mD?#\[\l8US*pNYQ+Y*#7D.[)%d`88mY%=,:Yc22ca4>Kn=\fD/<^'
HiX<O"UPGA#QOl8-oiIY"9fDN*_0CpT:M3tLOO5iKCo3E!Vud'!X;P6>Xfnd+ql@m2Zj-`!s8Z0"U#,D
.7HKW1f]-^BkrC<Yd1="V5U/q\,l[3!WrQ0#6bDE,<%A*.77fa9M/WQIXZKUDffoHKED>X!Vud1"VqUR
"r9'\1d#!+PEq8[MM-A1M=:KR!<N6$#%pM#4!6+-,Qp2!"U"o)!#GnG!!!<8%MU9XCkmgu]!JiTYdCO0
\\e.B+U&#L!!Wc:$PP!`@UWDsJq/;pG&V/>HOC/c"9S]+!!NH'!"o;5!X9K(<*<:\MNaTuTq.OO]']P)
"U5--6qgQJ8j":M=)n<C!<N?+"U6M+&-)\4":-kbI&ON9Y-YLP^q-M=][6QV,ln)N+W^sj!!**(+?<PT
NG!]kIYE?$D.\$E#7(P>"pP56+;tF]!"TYj8S`]`J;KDdX/D>H[)qb:#m)A<%lQdGEGSo*1F?V(!sA`2
#n%7T,9md$!X&W33J<HZ[$7Z(_p?<8Y,oXaquAbY!sB8P#ljr,!X0NIASd3<IufeWLjNuNF+=Q($k<g\
',)T7&d/@B"pcGV@UsLaCj1K!T;SQnkihL9#mLhN1CYTm;gWBc><b2qTa(K""U5/9#6>#+!"]DW@Xa]O
L8rqoj3Pcb`llEn!&+N[5#lKW?@A`VTSe8GGC=TD%1N^T%1EXL#m151!<NQ;5#c*6;/1cIV5^oAg?n1o
!!`W?1B\nBW4"%.H@(12JHc8]"9S`/"9Sf.!sSf/&R&Om\\3'\d.I(gf$hjb]E.a,(]jjD"qidV>EkOU
K!*A>UQC1[Hu0&k"9eW)('FX?"p+o<4?-)OALpG]E.3eE`np:@mf3Oo1G8_<3,oInJ<?V#Qsg.$"9eu7
#RLV4!>>S9!uZ5X>_$Q[Mf>`:aNVfG`jPI>'*J=?(ecPD>tctd;1tL)MgoqlCAn>U"U52;#6Fl*!X/Q,
'iHP;6nAj/,uec8T=i_CcLCl>!<<*$!!!'#7he0jG(P-j;#ge3#QYSH-63j?'H&MU*GJ;+/m<[9FDc/h
a4/D<[fHdI#65)6((^le&f<5U,Y^9F+\$!>>Z=^EQ'.#AEr#bQ$jQh:!!EoI"Z7;)!"pFe)&k,+LTSe0
_s.7$!(@?'UqTE,!=]PS-n@DQ4#T;^0KhNTF,HE*S@?P`_6^8[cGlig!tPqT*??Ob.4-`$/3?!Q<bm+c
JY0-UVNZ^qNIGSZrW!o>%M'R/*#Kh:'d+S84[r-o4%)\99iGJQX2;$MnGi^n":P87&nr@3*?#tqP(Yki
'-nPL?7S'"-n.D?1egeDQFYFQ?s7GSTV%=EagJ4R+u(Dt;Bm\D)&k:_0M,&:JuHOc;G::gKn!rgOFM:o
!!N?//-ZUq!s/u="rA*o7p9=@(_e/5;-R:PXg"q7nGi\!.7=.9rW$.7((DpcBM)>^7RUsX>YJjVI[GP9
Za-LEhr7p".P`/DAR'YkUoh!g:IefK9KH$V@XMp4Y-"G&da_,H,UjWq8j?F4EHQI8*#^_9-lam$4A@k#
>[(-9An;hX!!a;o1Kg08Z+9i6!<Er7!"/f/$j$M_.i^QN<ri'sG6M83;.+BbI%IF'BWekV`/BZ,_k#$'
c$q`13'D&&C2]N)X0I/+KqG2m;2pm0VJg_$\<+b\a_rm`.4\1s7ndi6H%8O^:hFQH2.C-+A3W7f=[H\9
Cd]!T+Y$Q/@W%m3ajpY%$S4FR!$a*J2Zs:Y0apch>Q=m)!-nSN!Wt;/AqQ%oMP-5d<Na!H`I3?h]T_$t
eY6)687?OfGB&A)YdL*ePbO(S6&qG(V.",]Y_UcTc]^m[3(R%T;bUM5I"5X+>A.>:-=UXuAiD\X<]t/7
DI"e=/P',eDf:N0d+KQU(blp5!$j?Q3<9.P-jO-k!G3DO!-eVS#6YbsFbkKeHAm5F6\UPXULI]>Um.L%
K2sWG-nm825X%o*W3)AALlc^C0O\O&I7-\sNImO?G=s1p)&sA.+<DtCH[TU8@;K.!,#_?3=XYS!9L;iT
<&u9H1-n<'>?GLDip%Ts'.""d!!NQ0'EA+W&I9?W#7L8+B.e4TPE:osMC1)E>>fl81iZuAXD2/h+q>It
*u#\/+-j+<]s4K3Jfl3a3Aakg,?n#OVI*CJ)[HlR$N^J3"_`[QJpVchA.K=p/0R1e"Y:fF@QHL^)\OD9
2D@0H41OY*AP>B\)#O@6!W2ou0ELkIBJuHoZF-j>STA.%8OlWB4?Gfe^3QA5*uG_!(EO\50TEf__n=1,
SSM:f5<D+a/1N5eTj<0r&I]!J#n@OQ*,h=8Q^NbcG#(1@,Tn?I&e>UH801\R,rS:\>%(T"8sZusbgrbK
49YEZ!sKJ@&bc9A._iZrZaIB\\$`/oE*#"\6:cjPE/RCZIUm&2D01,[U;4LV_7mFu]X=AY?UZIq/i71B
<GjZI@SBO"<*EXCLRt5rR$jD/J9u9=5Ud6T'c9;5)+H;LSsue"]t(>D]s=etd*p^jHtYYS!W<"I!!=>D
"TSNB#7;7Z(E=iGf\MglZbs`$bJDKE\t+4Q9m!(">>\q.NKBp.U84Te_o.Y=]?7t+`4!auW.\\M3a.%j
6Tn22H@VBHP`q)hTVHIUKo2:dP_FjCHY#i*-UC94.5b;U^u<o/inr.sXfX*\K!ESF`Ib"<=s!hK!!!$.
rW%-C\P$>=UT1GYS&O*1Odi2T`llELdE0n[XeDkU75d)!S;2r]PaRr1X2Vu$NgQTM`5B70^:(h^P_P?<
0dS2.LiRZhL5LY;NhW4RCNF`QOd:`XQ(!ndD.RNG#nA%H^9brIqXW1L[]-A=,rS;@]uQ;;bLaf<EAJ^m
"8r4BE&U0mFbFjMLqV&UN1QK5]unI9a2l<@`PTF5XF4PmO-G`aPF.o>[)g0sHB*lIZ,42h]tCne]!o)J
N*o=\IZ0&5NK90aSuete@;Kb&L6.j_OHc9&PF%MYB2:lmJX2XfTVe<MSYDta'.G7gI(.CuY.9#,_QgPL
>:9US!@pf33`Td#BoU$gD3(cjNLHl]aN;KC^UqM%f$_sQY+hPWR[B\G['RHb?%8K-I>ON$]Xted['7$J
]"#5>S<Tt?T;&$TUn"-Z87Hm`@r?XNQ(+87P`qT%Q'd5VOdE\b`PfO%Z(RYb!Z+K^'dlP/]ZtuOe>AVP
Xio%F=`%W[M6aLq`kmb%hf"aq\YGORSu8p)\Z`$@Yg1P?`6#g6\A?/)aNDH?bZK4pUl9nNN0UEKZ*110
XK/\7ZbjT%]unUB`PAg^ZpS2KHuEh7G_MKZUSaukY+2,PNJrLHJ:WH0Ng5TbScKR===k^61erLaf&FZR
i7>$Z]TfU^Y()nAWOKg1Ok*3FYeI]PNf/^_VR*M5\?!s'aLAh&_nsC1`lZBKccJ=QRB!*RH$FCgS$0#u
Xfnt4XerJIaj/;F]uIas\$@ALFb,-kBPD4/O.rPQWiMY[PD"^JJq/E?R#.,uSt5o_6"sk&(D_H72IjYM
hVu\i]:3GaYF:oTf@$b=cdLNc;K/bSYG.\SNffm0Wi`;4_nj"/d+?mse(37+f?qZ?5$4,OR>d2XIt<i\
YH>"'XgPCTbh1Lgair;_aL\`C-p_j&H?OLTFF/q@Y-5(-Vjr^!ML9l4NJDt2KpeD1!!,)n82GKK-R1-;
Qda^C[GerXUqES0a2c&oQ))^Y;I`mSYdL7(RYli_S"67Q^r""0c-+Vfc-G"m^:M/,5"nFQR@oS,LO+3"
P*i&IW33GA_nsdL_8=OIZDan9.5ikNFanUcH#ReTO.!&RX/2VPQBQuPR@/\OH$b7$rW!!$6!/Rp8M;&%
1/DJOf%T0@Y/nl&]?nm<K4%l-Qs4K5;MMB]X08"JKo;1dV6[eL`50=0a3iJh]W%a2]1?'q6?/NiS=kaa
GCPI:U9Cr3]=,)U\Ac_<Xd>0?VCk"b.9(J<I=l]XD0CDhR\HLJS=?(=Ru`;MF_ki8I/j9J!")Lj<(pIK
()J2P=+J*BgX=g3g=XKZM,Z8^6!SA3BOOYr]W\B5R#$?OPaJAT^;J"/`5]sEfZCCjPE8s<<),](Xe;8Q
M0a8mM3"1/\\5]U[OAf'beKj.I!Ik+3&N-lJpi6$H>meHKSbn[R?s>2S=>t5L3moP@UK69!"],CE)Tb.
0cCfP3(.PS^r=_#g1Sp^[!"_Z(DC1E?th`-Upm+qW1oH-LmXU+YI1dP_SX=8bKnGDUQSM9;->\NQE679
R[&GFH&7`ZZ*LRB[C*<I[_0/HO*rc'1clU3D0p;FH$4"4BQA-CMN<pcStDgOSsbC^BjL]<rW%:#?8O`2
3ZnqK.PXbKO-6Wgce[:*b*Z9['O,'S>ua1%VmiFoY,me:Ko;1jWMcr0[D'Jn_oTg8_+mp):.[KJR]M[7
UnWK\G(bjHUn"<`WN<2*ZF.*FXY)Fc0eFJ1EIN"NJq7fH@q]b.KSb\RPEh;iMM6Y2I/j9F!-pV92`+cA
+q,&&-V7TKF-MQOPDkBRIVr_8HXg&c8O@C-XJW22YF^f5Koh[iTqn?aYHY13Z+@\YD,s;169A\^TUDRW
UQ0h\JVfMIP*(H^Od)&pS>`ST82`%Z,ToO%Ec-/OH"p_p>\\P;Oe%c:VjE?mH$FW9!!E-!GQM>?2,Im]
-l!R2+Z;JaB1[c(CKO2$<+1/i?<(!4<&TQ8\uDL7^U02SJ;B&FP(&RdXL,79Yd&+R;b]tb8MPOcYagu[
Z_ih2H%1*gH";#JOI2N(S")u11+Xt5/JhK0I<'7QJU;$2?#+P6LN8-4P`^WEEHD3`!W)j5%Rk"n1L>3+
,7G&#*A/oR-ph?V=@>8;J,~>

%%EndBinary
grestore
np
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/BKUHZK+ArialMT*1 uf
/BKUHZK+ArialMT uf
/OMZAAA+ArialMT uf
/BKUHZL+DengXian-GBK-EUC-H-Identity-H uf
/BKUHZL+DengXian-GBK-EUC-H /CIDFont ur
/BKUHZJ+TimesNewRomanPS-BoldMT*1 uf
/BKUHZJ+TimesNewRomanPS-BoldMT uf
/KFDAAA+TimesNewRomanPS-BoldMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
